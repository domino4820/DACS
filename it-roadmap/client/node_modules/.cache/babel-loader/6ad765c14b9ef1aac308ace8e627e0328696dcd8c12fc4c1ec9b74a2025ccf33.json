{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\CyberPath\\\\DACS-main\\\\client\\\\src\\\\components\\\\RoadmapView.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect, useRef } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Panel, ReactFlowProvider, useReactFlow, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { Tabs, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport { Button } from \"./ui/button\";\nimport { useToast } from \"./ui/use-toast\";\nimport { PlusCircle, Save } from \"lucide-react\";\nimport CourseNode from \"./CourseNode\";\nimport CourseInfoPanel from \"./CourseInfoPanel\";\nimport AddCourseDialog from \"./AddCourseDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  courseNode: CourseNode\n};\nfunction RoadmapViewInner({\n  id,\n  initialNodes = [],\n  initialEdges = [],\n  isEditing = false,\n  readOnly = false,\n  onSave\n}) {\n  _s();\n  const {\n    toast\n  } = useToast();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [isAddCourseOpen, setIsAddCourseOpen] = useState(false);\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useReactFlow();\n\n  // Set initial nodes and edges when they change\n  useEffect(() => {\n    if (initialNodes.length > 0) {\n      setNodes(initialNodes);\n    }\n    if (initialEdges.length > 0) {\n      setEdges(initialEdges);\n    }\n  }, [initialNodes, initialEdges, setNodes, setEdges]);\n  const onConnect = useCallback(params => {\n    // Add marker and apply current edge style settings\n    const newEdge = {\n      ...params,\n      type: \"smoothstep\",\n      animated: true,\n      style: {\n        stroke: \"#6d28d9\"\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        width: 20,\n        height: 20,\n        color: \"#6d28d9\"\n      }\n    };\n    setEdges(eds => addEdge(newEdge, eds));\n  }, [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const onPaneClick = useCallback(() => {\n    setSelectedNode(null);\n  }, []);\n  const handleCompleteToggle = useCallback((nodeId, completed) => {\n    var _nodes$find;\n    if (readOnly) return;\n\n    // Get the current timestamp\n    const completedAt = completed ? new Date().toISOString() : null;\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            completed,\n            completedAt\n          }\n        };\n      }\n      return node;\n    }));\n    toast({\n      title: completed ? \"Course marked as completed\" : \"Course marked as incomplete\",\n      description: `You've ${completed ? \"completed\" : \"unmarked\"} ${(_nodes$find = nodes.find(n => n.id === nodeId)) === null || _nodes$find === void 0 ? void 0 : _nodes$find.data.label}`\n    });\n  }, [nodes, setNodes, toast, readOnly]);\n  const handleSaveRoadmap = useCallback(() => {\n    if (onSave) {\n      onSave(nodes, edges);\n    } else {\n      toast({\n        title: \"Roadmap saved\",\n        description: \"Your roadmap has been saved successfully\"\n      });\n    }\n  }, [nodes, edges, onSave, toast]);\n  const handleAddCourse = useCallback(courseData => {\n    // Find a position that doesn't overlap with existing nodes\n    let position = {\n      x: 100,\n      y: 100\n    };\n\n    // If we have a reactFlowInstance, try to center the new node in the viewport\n    if (reactFlowInstance) {\n      const {\n        x,\n        y,\n        zoom\n      } = reactFlowInstance.getViewport();\n      position = reactFlowInstance.screenToFlowPosition({\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      });\n\n      // Avoid overlapping with existing nodes by adding some offset\n      const existingPositions = nodes.map(node => node.position);\n      if (existingPositions.some(pos => Math.abs(pos.x - position.x) < 100 && Math.abs(pos.y - position.y) < 100)) {\n        position.x += 150;\n        position.y += 50;\n      }\n    }\n    const newNodeId = `node-${Date.now()}`;\n    const newNode = {\n      id: newNodeId,\n      type: \"courseNode\",\n      position,\n      data: {\n        ...courseData,\n        completed: false,\n        completedAt: null,\n        showQuickToggle: true,\n        onQuickToggle: handleCompleteToggle,\n        id: newNodeId\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setIsAddCourseOpen(false);\n    toast({\n      title: \"Course added\",\n      description: `${courseData.label} has been added to the roadmap`\n    });\n  }, [setNodes, toast, reactFlowInstance, nodes, handleCompleteToggle]);\n  const handleUpdateNodeStyle = useCallback((nodeId, style) => {\n    // Create a clean style object without undefined values\n    const cleanStyle = Object.fromEntries(Object.entries(style).filter(([_, value]) => value !== undefined));\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...cleanStyle\n          }\n        };\n      }\n      return node;\n    }));\n  }, [setNodes]);\n  const handleDeleteNode = useCallback(nodeId => {\n    var _nodes$find2;\n    // Get node name before deletion\n    const nodeName = ((_nodes$find2 = nodes.find(node => node.id === nodeId)) === null || _nodes$find2 === void 0 ? void 0 : _nodes$find2.data.label) || \"Course\";\n\n    // Remove the node\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n    setSelectedNode(null);\n    toast({\n      title: \"Course deleted\",\n      description: \"The course has been removed from the roadmap\"\n    });\n  }, [setNodes, setEdges, toast, nodes]);\n  const filteredNodes = useCallback(() => {\n    if (selectedCategory === \"all\") return nodes;\n    return nodes.filter(node => node.data.category === selectedCategory);\n  }, [nodes, selectedCategory]);\n\n  // Update node positions when they are dragged\n  const onNodeDragStop = useCallback((_, node) => {\n    if (readOnly) return;\n  }, [readOnly]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[800px] w-full border rounded-lg border-border/40\",\n    ref: reactFlowWrapper,\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      defaultValue: \"all\",\n      className: \"w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-left\",\n        className: \"z-10 bg-background/80 p-2 rounded-br-lg backdrop-blur-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: /*#__PURE__*/_jsxDEV(TabsList, {\n            className: \"grid grid-cols-4 md:flex md:flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"all\",\n              onClick: () => setSelectedCategory(\"all\"),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"frontend\",\n              onClick: () => setSelectedCategory(\"frontend\"),\n              children: \"Frontend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"backend\",\n              onClick: () => setSelectedCategory(\"backend\"),\n              children: \"Backend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"database\",\n              onClick: () => setSelectedCategory(\"database\"),\n              children: \"Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-right\",\n        className: \"z-10 flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsAddCourseOpen(true),\n          children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), \"Add Course\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveRoadmap,\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), \"Save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: filteredNodes(),\n        edges: edges,\n        onNodesChange: isEditing ? onNodesChange : undefined,\n        onEdgesChange: isEditing ? onEdgesChange : undefined,\n        onConnect: isEditing ? onConnect : undefined,\n        onNodeClick: onNodeClick,\n        onPaneClick: onPaneClick,\n        nodeTypes: nodeTypes,\n        onNodeDragStop: onNodeDragStop,\n        nodesDraggable: isEditing,\n        nodesConnectable: isEditing,\n        elementsSelectable: !readOnly,\n        defaultEdgeOptions: {\n          type: \"smoothstep\",\n          style: {\n            stroke: \"#6d28d9\"\n          },\n          animated: true\n        },\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          variant: \"dots\",\n          gap: 12,\n          size: 1,\n          color: \"#6d28d9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(CourseInfoPanel, {\n      node: selectedNode,\n      onClose: () => setSelectedNode(null),\n      onCompleteToggle: handleCompleteToggle,\n      onDelete: isEditing ? handleDeleteNode : undefined,\n      onUpdateStyle: handleUpdateNodeStyle,\n      isAdmin: isEditing,\n      readOnly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), isAddCourseOpen && /*#__PURE__*/_jsxDEV(AddCourseDialog, {\n      open: isAddCourseOpen,\n      onClose: () => setIsAddCourseOpen(false),\n      onAdd: handleAddCourse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapViewInner, \"TgihjfEwjKmhR0aElJYOYzPGQJI=\", false, function () {\n  return [useToast, useNodesState, useEdgesState, useReactFlow];\n});\n_c = RoadmapViewInner;\nexport default function RoadmapView(props) {\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(RoadmapViewInner, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RoadmapView;\nvar _c, _c2;\n$RefreshReg$(_c, \"RoadmapViewInner\");\n$RefreshReg$(_c2, \"RoadmapView\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useCallback","useEffect","useRef","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Panel","ReactFlowProvider","useReactFlow","MarkerType","Tabs","TabsList","TabsTrigger","Button","useToast","PlusCircle","Save","CourseNode","CourseInfoPanel","AddCourseDialog","jsxDEV","_jsxDEV","nodeTypes","courseNode","RoadmapViewInner","id","initialNodes","initialEdges","isEditing","readOnly","onSave","toast","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","selectedCategory","setSelectedCategory","isAddCourseOpen","setIsAddCourseOpen","reactFlowWrapper","reactFlowInstance","length","onConnect","params","newEdge","type","animated","style","stroke","markerEnd","ArrowClosed","width","height","color","eds","onNodeClick","event","node","onPaneClick","handleCompleteToggle","nodeId","completed","_nodes$find","completedAt","Date","toISOString","nds","map","data","title","description","find","n","label","handleSaveRoadmap","handleAddCourse","courseData","position","x","y","zoom","getViewport","screenToFlowPosition","window","innerWidth","innerHeight","existingPositions","some","pos","Math","abs","newNodeId","now","newNode","showQuickToggle","onQuickToggle","handleUpdateNodeStyle","cleanStyle","Object","fromEntries","entries","filter","_","value","undefined","handleDeleteNode","_nodes$find2","nodeName","edge","source","target","filteredNodes","category","onNodeDragStop","className","ref","children","defaultValue","onClick","fileName","lineNumber","columnNumber","nodesDraggable","nodesConnectable","elementsSelectable","defaultEdgeOptions","fitView","variant","gap","size","onClose","onCompleteToggle","onDelete","onUpdateStyle","isAdmin","open","onAdd","_c","RoadmapView","props","_c2","$RefreshReg$"],"sources":["D:/CyberPath/DACS-main/client/src/components/RoadmapView.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useCallback, useEffect, useRef } from \"react\"\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  Panel,\n  ReactFlowProvider,\n  useReactFlow,\n  MarkerType,\n} from \"reactflow\"\nimport \"reactflow/dist/style.css\"\nimport { Tabs, TabsList, TabsTrigger } from \"./ui/tabs\"\nimport { Button } from \"./ui/button\"\nimport { useToast } from \"./ui/use-toast\"\nimport { PlusCircle, Save } from \"lucide-react\"\nimport CourseNode from \"./CourseNode\"\nimport CourseInfoPanel from \"./CourseInfoPanel\"\nimport AddCourseDialog from \"./AddCourseDialog\"\n\nconst nodeTypes = {\n  courseNode: CourseNode,\n}\n\nfunction RoadmapViewInner({ id, initialNodes = [], initialEdges = [], isEditing = false, readOnly = false, onSave }) {\n  const { toast } = useToast()\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes)\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges)\n  const [selectedNode, setSelectedNode] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState(\"all\")\n  const [isAddCourseOpen, setIsAddCourseOpen] = useState(false)\n  const reactFlowWrapper = useRef(null)\n  const reactFlowInstance = useReactFlow()\n\n  // Set initial nodes and edges when they change\n  useEffect(() => {\n    if (initialNodes.length > 0) {\n      setNodes(initialNodes)\n    }\n    if (initialEdges.length > 0) {\n      setEdges(initialEdges)\n    }\n  }, [initialNodes, initialEdges, setNodes, setEdges])\n\n  const onConnect = useCallback(\n    (params) => {\n      // Add marker and apply current edge style settings\n      const newEdge = {\n        ...params,\n        type: \"smoothstep\",\n        animated: true,\n        style: { stroke: \"#6d28d9\" },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 20,\n          height: 20,\n          color: \"#6d28d9\",\n        },\n      }\n      setEdges((eds) => addEdge(newEdge, eds))\n    },\n    [setEdges],\n  )\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node)\n  }, [])\n\n  const onPaneClick = useCallback(() => {\n    setSelectedNode(null)\n  }, [])\n\n  const handleCompleteToggle = useCallback(\n    (nodeId, completed) => {\n      if (readOnly) return\n\n      // Get the current timestamp\n      const completedAt = completed ? new Date().toISOString() : null\n\n      setNodes((nds) =>\n        nds.map((node) => {\n          if (node.id === nodeId) {\n            return {\n              ...node,\n              data: {\n                ...node.data,\n                completed,\n                completedAt,\n              },\n            }\n          }\n          return node\n        }),\n      )\n\n      toast({\n        title: completed ? \"Course marked as completed\" : \"Course marked as incomplete\",\n        description: `You've ${completed ? \"completed\" : \"unmarked\"} ${nodes.find((n) => n.id === nodeId)?.data.label}`,\n      })\n    },\n    [nodes, setNodes, toast, readOnly],\n  )\n\n  const handleSaveRoadmap = useCallback(() => {\n    if (onSave) {\n      onSave(nodes, edges)\n    } else {\n      toast({\n        title: \"Roadmap saved\",\n        description: \"Your roadmap has been saved successfully\",\n      })\n    }\n  }, [nodes, edges, onSave, toast])\n\n  const handleAddCourse = useCallback(\n    (courseData) => {\n      // Find a position that doesn't overlap with existing nodes\n      let position = { x: 100, y: 100 }\n\n      // If we have a reactFlowInstance, try to center the new node in the viewport\n      if (reactFlowInstance) {\n        const { x, y, zoom } = reactFlowInstance.getViewport()\n        position = reactFlowInstance.screenToFlowPosition({\n          x: window.innerWidth / 2,\n          y: window.innerHeight / 2,\n        })\n\n        // Avoid overlapping with existing nodes by adding some offset\n        const existingPositions = nodes.map((node) => node.position)\n        if (existingPositions.some((pos) => Math.abs(pos.x - position.x) < 100 && Math.abs(pos.y - position.y) < 100)) {\n          position.x += 150\n          position.y += 50\n        }\n      }\n\n      const newNodeId = `node-${Date.now()}`\n      const newNode = {\n        id: newNodeId,\n        type: \"courseNode\",\n        position,\n        data: {\n          ...courseData,\n          completed: false,\n          completedAt: null,\n          showQuickToggle: true,\n          onQuickToggle: handleCompleteToggle,\n          id: newNodeId,\n        },\n      }\n\n      setNodes((nds) => [...nds, newNode])\n      setIsAddCourseOpen(false)\n\n      toast({\n        title: \"Course added\",\n        description: `${courseData.label} has been added to the roadmap`,\n      })\n    },\n    [setNodes, toast, reactFlowInstance, nodes, handleCompleteToggle],\n  )\n\n  const handleUpdateNodeStyle = useCallback(\n    (nodeId, style) => {\n      // Create a clean style object without undefined values\n      const cleanStyle = Object.fromEntries(Object.entries(style).filter(([_, value]) => value !== undefined))\n\n      setNodes((nds) =>\n        nds.map((node) => {\n          if (node.id === nodeId) {\n            return {\n              ...node,\n              data: {\n                ...node.data,\n                ...cleanStyle,\n              },\n            }\n          }\n          return node\n        }),\n      )\n    },\n    [setNodes],\n  )\n\n  const handleDeleteNode = useCallback(\n    (nodeId) => {\n      // Get node name before deletion\n      const nodeName = nodes.find((node) => node.id === nodeId)?.data.label || \"Course\"\n\n      // Remove the node\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId))\n      setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId))\n\n      setSelectedNode(null)\n\n      toast({\n        title: \"Course deleted\",\n        description: \"The course has been removed from the roadmap\",\n      })\n    },\n    [setNodes, setEdges, toast, nodes],\n  )\n\n  const filteredNodes = useCallback(() => {\n    if (selectedCategory === \"all\") return nodes\n    return nodes.filter((node) => node.data.category === selectedCategory)\n  }, [nodes, selectedCategory])\n\n  // Update node positions when they are dragged\n  const onNodeDragStop = useCallback(\n    (_, node) => {\n      if (readOnly) return\n    },\n    [readOnly],\n  )\n\n  return (\n    <div className=\"h-[800px] w-full border rounded-lg border-border/40\" ref={reactFlowWrapper}>\n      <Tabs defaultValue=\"all\" className=\"w-full h-full\">\n        <Panel position=\"top-left\" className=\"z-10 bg-background/80 p-2 rounded-br-lg backdrop-blur-sm\">\n          <div className=\"flex flex-col gap-2\">\n            <TabsList className=\"grid grid-cols-4 md:flex md:flex-wrap\">\n              <TabsTrigger value=\"all\" onClick={() => setSelectedCategory(\"all\")}>\n                All\n              </TabsTrigger>\n              <TabsTrigger value=\"frontend\" onClick={() => setSelectedCategory(\"frontend\")}>\n                Frontend\n              </TabsTrigger>\n              <TabsTrigger value=\"backend\" onClick={() => setSelectedCategory(\"backend\")}>\n                Backend\n              </TabsTrigger>\n              <TabsTrigger value=\"database\" onClick={() => setSelectedCategory(\"database\")}>\n                Database\n              </TabsTrigger>\n            </TabsList>\n          </div>\n        </Panel>\n\n        {isEditing && (\n          <Panel position=\"top-right\" className=\"z-10 flex flex-wrap gap-2\">\n            <Button onClick={() => setIsAddCourseOpen(true)}>\n              <PlusCircle className=\"h-4 w-4 mr-2\" />\n              Add Course\n            </Button>\n            <Button onClick={handleSaveRoadmap}>\n              <Save className=\"h-4 w-4 mr-2\" />\n              Save\n            </Button>\n          </Panel>\n        )}\n\n        <ReactFlow\n          nodes={filteredNodes()}\n          edges={edges}\n          onNodesChange={isEditing ? onNodesChange : undefined}\n          onEdgesChange={isEditing ? onEdgesChange : undefined}\n          onConnect={isEditing ? onConnect : undefined}\n          onNodeClick={onNodeClick}\n          onPaneClick={onPaneClick}\n          nodeTypes={nodeTypes}\n          onNodeDragStop={onNodeDragStop}\n          nodesDraggable={isEditing}\n          nodesConnectable={isEditing}\n          elementsSelectable={!readOnly}\n          defaultEdgeOptions={{\n            type: \"smoothstep\",\n            style: { stroke: \"#6d28d9\" },\n            animated: true,\n          }}\n          fitView\n        >\n          <Controls />\n          <MiniMap />\n          <Background variant=\"dots\" gap={12} size={1} color=\"#6d28d9\" />\n        </ReactFlow>\n      </Tabs>\n\n      {selectedNode && (\n        <CourseInfoPanel\n          node={selectedNode}\n          onClose={() => setSelectedNode(null)}\n          onCompleteToggle={handleCompleteToggle}\n          onDelete={isEditing ? handleDeleteNode : undefined}\n          onUpdateStyle={handleUpdateNodeStyle}\n          isAdmin={isEditing}\n          readOnly={readOnly}\n        />\n      )}\n\n      {isAddCourseOpen && (\n        <AddCourseDialog open={isAddCourseOpen} onClose={() => setIsAddCourseOpen(false)} onAdd={handleAddCourse} />\n      )}\n    </div>\n  )\n}\n\nexport default function RoadmapView(props) {\n  return (\n    <ReactFlowProvider>\n      <RoadmapViewInner {...props} />\n    </ReactFlowProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
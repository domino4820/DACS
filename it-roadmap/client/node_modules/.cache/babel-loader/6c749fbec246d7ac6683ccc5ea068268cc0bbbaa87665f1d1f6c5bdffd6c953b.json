{"ast":null,"code":"\"use client\";import _objectSpread from\"D:/CyberPath/it-roadmap/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback}from\"react\";import{useParams,Link,useNavigate}from\"react-router-dom\";import{useQuery,useMutation,useQueryClient}from\"@tanstack/react-query\";import{getRoadmapById,getRoadmapNodes,getRoadmapEdges,updateRoadmapNodes,updateRoadmapEdges,updateRoadmap}from\"../services/roadmapService\";import{getCategories}from\"../services/categoryService\";import{Button}from\"../components/ui/button\";import{ChevronLeft,Save,ArrowLeft,PlusCircle}from\"lucide-react\";import{useToast}from\"../components/ui/use-toast\";import RoadmapView from\"../components/RoadmapView\";import{Input}from\"../components/ui/input\";import{Label}from\"../components/ui/label\";import{Textarea}from\"../components/ui/textarea\";import{Select,SelectContent,SelectItem,SelectTrigger,SelectValue}from\"../components/ui/select\";import{Card,CardContent,CardDescription,CardFooter,CardHeader,CardTitle}from\"../components/ui/card\";import{Tabs,TabsContent,TabsList,TabsTrigger}from\"../components/ui/tabs\";import{typeText}from\"../lib/animations\";import{Skeleton}from\"../components/ui/skeleton\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function RoadmapEditPage(){const{id}=useParams();const navigate=useNavigate();const{toast}=useToast();const queryClient=useQueryClient();const[isSubmitting,setIsSubmitting]=useState(false);const[activeTab,setActiveTab]=useState(\"info\");const[formData,setFormData]=useState({title:\"\",description:\"\",category:\"\",difficulty:\"beginner\",isPublic:true});const[nodes,setNodes]=useState([]);const[edges,setEdges]=useState([]);// Get roadmap data\nconst{data:roadmap,isLoading:isRoadmapLoading,error:roadmapError}=useQuery({queryKey:[\"roadmap\",id],queryFn:()=>getRoadmapById(id),enabled:!!id});// Get roadmap nodes\nconst{data:roadmapNodes,isLoading:isNodesLoading}=useQuery({queryKey:[\"roadmap-nodes\",id],queryFn:()=>getRoadmapNodes(id),enabled:!!id});// Get roadmap edges\nconst{data:roadmapEdges,isLoading:isEdgesLoading}=useQuery({queryKey:[\"roadmap-edges\",id],queryFn:()=>getRoadmapEdges(id),enabled:!!id});// Get categories for the dropdown\nconst{data:categories,isLoading:isCategoriesLoading}=useQuery({queryKey:[\"categories\"],queryFn:getCategories,placeholderData:[{id:1,name:\"Frontend\"},{id:2,name:\"Backend\"},{id:3,name:\"Full Stack\"},{id:4,name:\"DevOps\"},{id:5,name:\"Security\"},{id:6,name:\"Data Science\"}]});// Update roadmap mutation\nconst updateRoadmapMutation=useMutation({mutationFn:data=>updateRoadmap(id,data),onSuccess:()=>{toast({title:\"Roadmap updated\",description:\"Your roadmap information has been updated successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap\",id]});queryClient.invalidateQueries({queryKey:[\"roadmaps\"]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update roadmap\",variant:\"destructive\"});setIsSubmitting(false);}});// Update nodes mutation\nconst updateNodesMutation=useMutation({mutationFn:nodes=>updateRoadmapNodes(id,nodes),onSuccess:()=>{toast({title:\"Nodes updated\",description:\"The roadmap nodes have been saved successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap-nodes\",id]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update nodes\",variant:\"destructive\"});}});// Update edges mutation\nconst updateEdgesMutation=useMutation({mutationFn:edges=>updateRoadmapEdges(id,edges),onSuccess:()=>{toast({title:\"Connections updated\",description:\"The roadmap connections have been saved successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap-edges\",id]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update connections\",variant:\"destructive\"});}});// Populate form when roadmap data is loaded\nuseEffect(()=>{if(roadmap){var _roadmap$categoryId;setFormData({title:roadmap.title||\"\",description:roadmap.description||\"\",category:((_roadmap$categoryId=roadmap.categoryId)===null||_roadmap$categoryId===void 0?void 0:_roadmap$categoryId.toString())||\"\",difficulty:roadmap.difficulty||\"beginner\",isPublic:roadmap.isPublic!==undefined?roadmap.isPublic:true});}},[roadmap]);// Set nodes and edges when they're loaded\nuseEffect(()=>{if(roadmapNodes){setNodes(roadmapNodes);}},[roadmapNodes]);useEffect(()=>{if(roadmapEdges){setEdges(roadmapEdges);}},[roadmapEdges]);const handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:type===\"checkbox\"?checked:value}));};const handleSelectChange=(name,value)=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};const handleSubmit=e=>{e.preventDefault();setIsSubmitting(true);updateRoadmapMutation.mutate(formData);setIsSubmitting(false);};// Handle save of nodes and edges\nconst handleSaveRoadmap=()=>{console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");console.log(\"[SAVE] Current nodes in state:\",nodes.length);console.log(\"[SAVE] Current edges in state:\",edges.length);if(nodes.length===0){console.warn(\"[SAVE] Warning: No nodes found in state! Not saving empty nodes.\");}// Update form data first\nupdateRoadmapMutation.mutate(formData);// Always save nodes and edges, even if empty arrays\n// This ensures we're explicitly sending the current state\nupdateNodesMutation.mutate(nodes);updateEdgesMutation.mutate(edges);// Add a confirmation toast with count\ntoast({title:\"Roadmap saved\",description:\"Saved \".concat(nodes.length,\" nodes and \").concat(edges.length,\" edges\"),variant:\"default\"});};// Handle internal updates from ReactFlow\nconst handleInternalUpdate=useCallback((updatedNodes,updatedEdges)=>{console.log(\"[INTERNAL] Received nodes update:\",updatedNodes===null||updatedNodes===void 0?void 0:updatedNodes.length);console.log(\"[INTERNAL] Received edges update:\",updatedEdges===null||updatedEdges===void 0?void 0:updatedEdges.length);if(updatedNodes&&Array.isArray(updatedNodes)){setNodes(updatedNodes);}if(updatedEdges&&Array.isArray(updatedEdges)){setEdges(updatedEdges);}},[]);useEffect(()=>{// Apply typing effect to the page title\ntypeText(\".edit-roadmap-title\",null,800);},[]);if(roadmapError){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto py-8 px-4 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-cyber text-cyberpunk-red mb-4\",children:\"Error Loading Roadmap\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 font-mono-cyber mb-6\",children:roadmapError.message||\"Failed to load roadmap details\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>navigate(\"/roadmaps\"),className:\"bg-purple-600 hover:bg-purple-700 text-white\",children:\"Return to Roadmaps\"})]});}const isLoading=isRoadmapLoading||isNodesLoading||isEdgesLoading;return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto py-8 px-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:()=>navigate(\"/roadmaps\"),className:\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\",children:[/*#__PURE__*/_jsx(ArrowLeft,{className:\"h-4 w-4 mr-2\"}),\"Back to Roadmaps\"]}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold font-cyber neon-text edit-roadmap-title\",children:isRoadmapLoading?\"Loading...\":\"Edit: \".concat(roadmap===null||roadmap===void 0?void 0:roadmap.title)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 font-mono-cyber mt-2\",children:\"Update your learning path details\"})]}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl mb-4 text-purple-300 font-cyber\",children:\"Loading\"}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner mx-auto\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-purple-500/20\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-cyber text-purple-300\",children:\"Roadmap Content Editor\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-mono-cyber text-gray-400 text-sm\",children:\"Add courses, create connections, and build your learning path\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>navigate(\"/roadmaps/\".concat(id)),className:\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"button\",className:\"bg-purple-600 hover:bg-purple-700 text-white\",onClick:()=>{updateRoadmapMutation.mutate(formData);handleSaveRoadmap();},disabled:isSubmitting,children:[/*#__PURE__*/_jsx(Save,{className:\"h-4 w-4 mr-2\"}),isSubmitting?\"Saving...\":\"Save Changes\"]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[800px]\",children:/*#__PURE__*/_jsx(RoadmapView,{id:id,isEditing:true,initialNodes:nodes,initialEdges:edges,onSave:handleSaveRoadmap,onInternalUpdate:handleInternalUpdate})})]})]});}","map":{"version":3,"names":["_objectSpread","useState","useEffect","useCallback","useParams","Link","useNavigate","useQuery","useMutation","useQueryClient","getRoadmapById","getRoadmapNodes","getRoadmapEdges","updateRoadmapNodes","updateRoadmapEdges","updateRoadmap","getCategories","Button","ChevronLeft","Save","ArrowLeft","PlusCircle","useToast","RoadmapView","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Tabs","TabsContent","TabsList","TabsTrigger","typeText","Skeleton","jsx","_jsx","jsxs","_jsxs","RoadmapEditPage","id","navigate","toast","queryClient","isSubmitting","setIsSubmitting","activeTab","setActiveTab","formData","setFormData","title","description","category","difficulty","isPublic","nodes","setNodes","edges","setEdges","data","roadmap","isLoading","isRoadmapLoading","error","roadmapError","queryKey","queryFn","enabled","roadmapNodes","isNodesLoading","roadmapEdges","isEdgesLoading","categories","isCategoriesLoading","placeholderData","name","updateRoadmapMutation","mutationFn","onSuccess","invalidateQueries","onError","message","variant","updateNodesMutation","updateEdgesMutation","_roadmap$categoryId","categoryId","toString","undefined","handleChange","e","value","type","checked","target","handleSelectChange","handleSubmit","preventDefault","mutate","handleSaveRoadmap","console","log","length","warn","concat","handleInternalUpdate","updatedNodes","updatedEdges","Array","isArray","className","children","onClick","disabled","isEditing","initialNodes","initialEdges","onSave","onInternalUpdate"],"sources":["D:/CyberPath/it-roadmap/client/src/pages/RoadmapEditPage.jsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  getRoadmapById,\n  getRoadmapNodes,\n  getRoadmapEdges,\n  updateRoadmapNodes,\n  updateRoadmapEdges,\n  updateRoadmap,\n} from \"../services/roadmapService\";\nimport { getCategories } from \"../services/categoryService\";\nimport { Button } from \"../components/ui/button\";\nimport { ChevronLeft, Save, ArrowLeft, PlusCircle } from \"lucide-react\";\nimport { useToast } from \"../components/ui/use-toast\";\nimport RoadmapView from \"../components/RoadmapView\";\nimport { Input } from \"../components/ui/input\";\nimport { Label } from \"../components/ui/label\";\nimport { Textarea } from \"../components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"../components/ui/select\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"../components/ui/card\";\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"../components/ui/tabs\";\nimport { typeText } from \"../lib/animations\";\nimport { Skeleton } from \"../components/ui/skeleton\";\n\nexport default function RoadmapEditPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"info\");\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    difficulty: \"beginner\",\n    isPublic: true,\n  });\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  // Get roadmap data\n  const {\n    data: roadmap,\n    isLoading: isRoadmapLoading,\n    error: roadmapError,\n  } = useQuery({\n    queryKey: [\"roadmap\", id],\n    queryFn: () => getRoadmapById(id),\n    enabled: !!id,\n  });\n\n  // Get roadmap nodes\n  const { data: roadmapNodes, isLoading: isNodesLoading } = useQuery({\n    queryKey: [\"roadmap-nodes\", id],\n    queryFn: () => getRoadmapNodes(id),\n    enabled: !!id,\n  });\n\n  // Get roadmap edges\n  const { data: roadmapEdges, isLoading: isEdgesLoading } = useQuery({\n    queryKey: [\"roadmap-edges\", id],\n    queryFn: () => getRoadmapEdges(id),\n    enabled: !!id,\n  });\n\n  // Get categories for the dropdown\n  const { data: categories, isLoading: isCategoriesLoading } = useQuery({\n    queryKey: [\"categories\"],\n    queryFn: getCategories,\n    placeholderData: [\n      { id: 1, name: \"Frontend\" },\n      { id: 2, name: \"Backend\" },\n      { id: 3, name: \"Full Stack\" },\n      { id: 4, name: \"DevOps\" },\n      { id: 5, name: \"Security\" },\n      { id: 6, name: \"Data Science\" },\n    ],\n  });\n\n  // Update roadmap mutation\n  const updateRoadmapMutation = useMutation({\n    mutationFn: (data) => updateRoadmap(id, data),\n    onSuccess: () => {\n      toast({\n        title: \"Roadmap updated\",\n        description: \"Your roadmap information has been updated successfully\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"roadmap\", id] });\n      queryClient.invalidateQueries({ queryKey: [\"roadmaps\"] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update roadmap\",\n        variant: \"destructive\",\n      });\n      setIsSubmitting(false);\n    },\n  });\n\n  // Update nodes mutation\n  const updateNodesMutation = useMutation({\n    mutationFn: (nodes) => updateRoadmapNodes(id, nodes),\n    onSuccess: () => {\n      toast({\n        title: \"Nodes updated\",\n        description: \"The roadmap nodes have been saved successfully\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-nodes\", id] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update nodes\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Update edges mutation\n  const updateEdgesMutation = useMutation({\n    mutationFn: (edges) => updateRoadmapEdges(id, edges),\n    onSuccess: () => {\n      toast({\n        title: \"Connections updated\",\n        description: \"The roadmap connections have been saved successfully\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-edges\", id] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update connections\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Populate form when roadmap data is loaded\n  useEffect(() => {\n    if (roadmap) {\n      setFormData({\n        title: roadmap.title || \"\",\n        description: roadmap.description || \"\",\n        category: roadmap.categoryId?.toString() || \"\",\n        difficulty: roadmap.difficulty || \"beginner\",\n        isPublic: roadmap.isPublic !== undefined ? roadmap.isPublic : true,\n      });\n    }\n  }, [roadmap]);\n\n  // Set nodes and edges when they're loaded\n  useEffect(() => {\n    if (roadmapNodes) {\n      setNodes(roadmapNodes);\n    }\n  }, [roadmapNodes]);\n\n  useEffect(() => {\n    if (roadmapEdges) {\n      setEdges(roadmapEdges);\n    }\n  }, [roadmapEdges]);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleSelectChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    updateRoadmapMutation.mutate(formData);\n    setIsSubmitting(false);\n  };\n\n  // Handle save of nodes and edges\n  const handleSaveRoadmap = () => {\n    console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");\n    console.log(\"[SAVE] Current nodes in state:\", nodes.length);\n    console.log(\"[SAVE] Current edges in state:\", edges.length);\n\n    if (nodes.length === 0) {\n      console.warn(\n        \"[SAVE] Warning: No nodes found in state! Not saving empty nodes.\"\n      );\n    }\n\n    // Update form data first\n    updateRoadmapMutation.mutate(formData);\n\n    // Always save nodes and edges, even if empty arrays\n    // This ensures we're explicitly sending the current state\n    updateNodesMutation.mutate(nodes);\n    updateEdgesMutation.mutate(edges);\n\n    // Add a confirmation toast with count\n    toast({\n      title: \"Roadmap saved\",\n      description: `Saved ${nodes.length} nodes and ${edges.length} edges`,\n      variant: \"default\",\n    });\n  };\n\n  // Handle internal updates from ReactFlow\n  const handleInternalUpdate = useCallback((updatedNodes, updatedEdges) => {\n    console.log(\"[INTERNAL] Received nodes update:\", updatedNodes?.length);\n    console.log(\"[INTERNAL] Received edges update:\", updatedEdges?.length);\n\n    if (updatedNodes && Array.isArray(updatedNodes)) {\n      setNodes(updatedNodes);\n    }\n\n    if (updatedEdges && Array.isArray(updatedEdges)) {\n      setEdges(updatedEdges);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Apply typing effect to the page title\n    typeText(\".edit-roadmap-title\", null, 800);\n  }, []);\n\n  if (roadmapError) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 text-center\">\n        <h2 className=\"text-2xl font-cyber text-cyberpunk-red mb-4\">\n          Error Loading Roadmap\n        </h2>\n        <p className=\"text-gray-400 font-mono-cyber mb-6\">\n          {roadmapError.message || \"Failed to load roadmap details\"}\n        </p>\n        <Button\n          onClick={() => navigate(\"/roadmaps\")}\n          className=\"bg-purple-600 hover:bg-purple-700 text-white\"\n        >\n          Return to Roadmaps\n        </Button>\n      </div>\n    );\n  }\n\n  const isLoading = isRoadmapLoading || isNodesLoading || isEdgesLoading;\n\n  return (\n    <div className=\"container mx-auto py-8 px-4\">\n      <div className=\"mb-8\">\n        <Button\n          variant=\"outline\"\n          onClick={() => navigate(\"/roadmaps\")}\n          className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back to Roadmaps\n        </Button>\n        <h1 className=\"text-3xl font-bold font-cyber neon-text edit-roadmap-title\">\n          {isRoadmapLoading ? \"Loading...\" : `Edit: ${roadmap?.title}`}\n        </h1>\n        <p className=\"text-gray-400 font-mono-cyber mt-2\">\n          Update your learning path details\n        </p>\n      </div>\n\n      {isLoading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"text-center\">\n            <h2 className=\"text-xl mb-4 text-purple-300 font-cyber\">Loading</h2>\n            <div className=\"spinner mx-auto\"></div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\">\n          <div className=\"p-4 border-b border-purple-500/20\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h3 className=\"text-xl font-cyber text-purple-300\">\n                  Roadmap Content Editor\n                </h3>\n                <p className=\"font-mono-cyber text-gray-400 text-sm\">\n                  Add courses, create connections, and build your learning path\n                </p>\n              </div>\n              <div className=\"flex gap-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => navigate(`/roadmaps/${id}`)}\n                  className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"button\"\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white\"\n                  onClick={() => {\n                    updateRoadmapMutation.mutate(formData);\n                    handleSaveRoadmap();\n                  }}\n                  disabled={isSubmitting}\n                >\n                  <Save className=\"h-4 w-4 mr-2\" />\n                  {isSubmitting ? \"Saving...\" : \"Save Changes\"}\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"h-[800px]\">\n            <RoadmapView\n              id={id}\n              isEditing={true}\n              initialNodes={nodes}\n              initialEdges={edges}\n              onSave={handleSaveRoadmap}\n              onInternalUpdate={handleInternalUpdate}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"AAAA,YAAY,CAAC,OAAAA,aAAA,+FACb,OAASC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACxD,OAASC,SAAS,CAAEC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CAC/D,OAASC,QAAQ,CAAEC,WAAW,CAAEC,cAAc,KAAQ,uBAAuB,CAC7E,OACEC,cAAc,CACdC,eAAe,CACfC,eAAe,CACfC,kBAAkB,CAClBC,kBAAkB,CAClBC,aAAa,KACR,4BAA4B,CACnC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,MAAM,KAAQ,yBAAyB,CAChD,OAASC,WAAW,CAAEC,IAAI,CAAEC,SAAS,CAAEC,UAAU,KAAQ,cAAc,CACvE,OAASC,QAAQ,KAAQ,4BAA4B,CACrD,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,OAASC,KAAK,KAAQ,wBAAwB,CAC9C,OAASC,KAAK,KAAQ,wBAAwB,CAC9C,OAASC,QAAQ,KAAQ,2BAA2B,CACpD,OACEC,MAAM,CACNC,aAAa,CACbC,UAAU,CACVC,aAAa,CACbC,WAAW,KACN,yBAAyB,CAChC,OACEC,IAAI,CACJC,WAAW,CACXC,eAAe,CACfC,UAAU,CACVC,UAAU,CACVC,SAAS,KACJ,uBAAuB,CAC9B,OACEC,IAAI,CACJC,WAAW,CACXC,QAAQ,CACRC,WAAW,KACN,uBAAuB,CAC9B,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,OAASC,QAAQ,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACxC,KAAM,CAAEC,EAAG,CAAC,CAAG7C,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAA8C,QAAQ,CAAG5C,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAE6C,KAAM,CAAC,CAAG7B,QAAQ,CAAC,CAAC,CAC5B,KAAM,CAAA8B,WAAW,CAAG3C,cAAc,CAAC,CAAC,CACpC,KAAM,CAAC4C,YAAY,CAAEC,eAAe,CAAC,CAAGrD,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACsD,SAAS,CAAEC,YAAY,CAAC,CAAGvD,QAAQ,CAAC,MAAM,CAAC,CAClD,KAAM,CAACwD,QAAQ,CAAEC,WAAW,CAAC,CAAGzD,QAAQ,CAAC,CACvC0D,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,UAAU,CACtBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhE,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiE,KAAK,CAAEC,QAAQ,CAAC,CAAGlE,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CACJmE,IAAI,CAAEC,OAAO,CACbC,SAAS,CAAEC,gBAAgB,CAC3BC,KAAK,CAAEC,YACT,CAAC,CAAGlE,QAAQ,CAAC,CACXmE,QAAQ,CAAE,CAAC,SAAS,CAAEzB,EAAE,CAAC,CACzB0B,OAAO,CAAEA,CAAA,GAAMjE,cAAc,CAACuC,EAAE,CAAC,CACjC2B,OAAO,CAAE,CAAC,CAAC3B,EACb,CAAC,CAAC,CAEF;AACA,KAAM,CAAEmB,IAAI,CAAES,YAAY,CAAEP,SAAS,CAAEQ,cAAe,CAAC,CAAGvE,QAAQ,CAAC,CACjEmE,QAAQ,CAAE,CAAC,eAAe,CAAEzB,EAAE,CAAC,CAC/B0B,OAAO,CAAEA,CAAA,GAAMhE,eAAe,CAACsC,EAAE,CAAC,CAClC2B,OAAO,CAAE,CAAC,CAAC3B,EACb,CAAC,CAAC,CAEF;AACA,KAAM,CAAEmB,IAAI,CAAEW,YAAY,CAAET,SAAS,CAAEU,cAAe,CAAC,CAAGzE,QAAQ,CAAC,CACjEmE,QAAQ,CAAE,CAAC,eAAe,CAAEzB,EAAE,CAAC,CAC/B0B,OAAO,CAAEA,CAAA,GAAM/D,eAAe,CAACqC,EAAE,CAAC,CAClC2B,OAAO,CAAE,CAAC,CAAC3B,EACb,CAAC,CAAC,CAEF;AACA,KAAM,CAAEmB,IAAI,CAAEa,UAAU,CAAEX,SAAS,CAAEY,mBAAoB,CAAC,CAAG3E,QAAQ,CAAC,CACpEmE,QAAQ,CAAE,CAAC,YAAY,CAAC,CACxBC,OAAO,CAAE3D,aAAa,CACtBmE,eAAe,CAAE,CACf,CAAElC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,UAAW,CAAC,CAC3B,CAAEnC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,SAAU,CAAC,CAC1B,CAAEnC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,YAAa,CAAC,CAC7B,CAAEnC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,QAAS,CAAC,CACzB,CAAEnC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,UAAW,CAAC,CAC3B,CAAEnC,EAAE,CAAE,CAAC,CAAEmC,IAAI,CAAE,cAAe,CAAC,CAEnC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,qBAAqB,CAAG7E,WAAW,CAAC,CACxC8E,UAAU,CAAGlB,IAAI,EAAKrD,aAAa,CAACkC,EAAE,CAAEmB,IAAI,CAAC,CAC7CmB,SAAS,CAAEA,CAAA,GAAM,CACfpC,KAAK,CAAC,CACJQ,KAAK,CAAE,iBAAiB,CACxBC,WAAW,CAAE,wDACf,CAAC,CAAC,CACFR,WAAW,CAACoC,iBAAiB,CAAC,CAAEd,QAAQ,CAAE,CAAC,SAAS,CAAEzB,EAAE,CAAE,CAAC,CAAC,CAC5DG,WAAW,CAACoC,iBAAiB,CAAC,CAAEd,QAAQ,CAAE,CAAC,UAAU,CAAE,CAAC,CAAC,CAC3D,CAAC,CACDe,OAAO,CAAGjB,KAAK,EAAK,CAClBrB,KAAK,CAAC,CACJQ,KAAK,CAAE,OAAO,CACdC,WAAW,CAAEY,KAAK,CAACkB,OAAO,EAAI,0BAA0B,CACxDC,OAAO,CAAE,aACX,CAAC,CAAC,CACFrC,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAsC,mBAAmB,CAAGpF,WAAW,CAAC,CACtC8E,UAAU,CAAGtB,KAAK,EAAKnD,kBAAkB,CAACoC,EAAE,CAAEe,KAAK,CAAC,CACpDuB,SAAS,CAAEA,CAAA,GAAM,CACfpC,KAAK,CAAC,CACJQ,KAAK,CAAE,eAAe,CACtBC,WAAW,CAAE,gDACf,CAAC,CAAC,CACFR,WAAW,CAACoC,iBAAiB,CAAC,CAAEd,QAAQ,CAAE,CAAC,eAAe,CAAEzB,EAAE,CAAE,CAAC,CAAC,CACpE,CAAC,CACDwC,OAAO,CAAGjB,KAAK,EAAK,CAClBrB,KAAK,CAAC,CACJQ,KAAK,CAAE,OAAO,CACdC,WAAW,CAAEY,KAAK,CAACkB,OAAO,EAAI,wBAAwB,CACtDC,OAAO,CAAE,aACX,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAE,mBAAmB,CAAGrF,WAAW,CAAC,CACtC8E,UAAU,CAAGpB,KAAK,EAAKpD,kBAAkB,CAACmC,EAAE,CAAEiB,KAAK,CAAC,CACpDqB,SAAS,CAAEA,CAAA,GAAM,CACfpC,KAAK,CAAC,CACJQ,KAAK,CAAE,qBAAqB,CAC5BC,WAAW,CAAE,sDACf,CAAC,CAAC,CACFR,WAAW,CAACoC,iBAAiB,CAAC,CAAEd,QAAQ,CAAE,CAAC,eAAe,CAAEzB,EAAE,CAAE,CAAC,CAAC,CACpE,CAAC,CACDwC,OAAO,CAAGjB,KAAK,EAAK,CAClBrB,KAAK,CAAC,CACJQ,KAAK,CAAE,OAAO,CACdC,WAAW,CAAEY,KAAK,CAACkB,OAAO,EAAI,8BAA8B,CAC5DC,OAAO,CAAE,aACX,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF;AACAzF,SAAS,CAAC,IAAM,CACd,GAAImE,OAAO,CAAE,KAAAyB,mBAAA,CACXpC,WAAW,CAAC,CACVC,KAAK,CAAEU,OAAO,CAACV,KAAK,EAAI,EAAE,CAC1BC,WAAW,CAAES,OAAO,CAACT,WAAW,EAAI,EAAE,CACtCC,QAAQ,CAAE,EAAAiC,mBAAA,CAAAzB,OAAO,CAAC0B,UAAU,UAAAD,mBAAA,iBAAlBA,mBAAA,CAAoBE,QAAQ,CAAC,CAAC,GAAI,EAAE,CAC9ClC,UAAU,CAAEO,OAAO,CAACP,UAAU,EAAI,UAAU,CAC5CC,QAAQ,CAAEM,OAAO,CAACN,QAAQ,GAAKkC,SAAS,CAAG5B,OAAO,CAACN,QAAQ,CAAG,IAChE,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACM,OAAO,CAAC,CAAC,CAEb;AACAnE,SAAS,CAAC,IAAM,CACd,GAAI2E,YAAY,CAAE,CAChBZ,QAAQ,CAACY,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElB3E,SAAS,CAAC,IAAM,CACd,GAAI6E,YAAY,CAAE,CAChBZ,QAAQ,CAACY,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAmB,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEf,IAAI,CAAEgB,KAAK,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGH,CAAC,CAACI,MAAM,CAC/C7C,WAAW,CAAA1D,aAAA,CAAAA,aAAA,IACNyD,QAAQ,MACX,CAAC2B,IAAI,EAAGiB,IAAI,GAAK,UAAU,CAAGC,OAAO,CAAGF,KAAK,EAC9C,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAGA,CAACpB,IAAI,CAAEgB,KAAK,GAAK,CAC1C1C,WAAW,CAAA1D,aAAA,CAAAA,aAAA,IACNyD,QAAQ,MACX,CAAC2B,IAAI,EAAGgB,KAAK,EACd,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,YAAY,CAAIN,CAAC,EAAK,CAC1BA,CAAC,CAACO,cAAc,CAAC,CAAC,CAClBpD,eAAe,CAAC,IAAI,CAAC,CACrB+B,qBAAqB,CAACsB,MAAM,CAAClD,QAAQ,CAAC,CACtCH,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAsD,iBAAiB,CAAGA,CAAA,GAAM,CAC9BC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC,CACnED,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE9C,KAAK,CAAC+C,MAAM,CAAC,CAC3DF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE5C,KAAK,CAAC6C,MAAM,CAAC,CAE3D,GAAI/C,KAAK,CAAC+C,MAAM,GAAK,CAAC,CAAE,CACtBF,OAAO,CAACG,IAAI,CACV,kEACF,CAAC,CACH,CAEA;AACA3B,qBAAqB,CAACsB,MAAM,CAAClD,QAAQ,CAAC,CAEtC;AACA;AACAmC,mBAAmB,CAACe,MAAM,CAAC3C,KAAK,CAAC,CACjC6B,mBAAmB,CAACc,MAAM,CAACzC,KAAK,CAAC,CAEjC;AACAf,KAAK,CAAC,CACJQ,KAAK,CAAE,eAAe,CACtBC,WAAW,UAAAqD,MAAA,CAAWjD,KAAK,CAAC+C,MAAM,gBAAAE,MAAA,CAAc/C,KAAK,CAAC6C,MAAM,UAAQ,CACpEpB,OAAO,CAAE,SACX,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAuB,oBAAoB,CAAG/G,WAAW,CAAC,CAACgH,YAAY,CAAEC,YAAY,GAAK,CACvEP,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEK,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEJ,MAAM,CAAC,CACtEF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEM,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEL,MAAM,CAAC,CAEtE,GAAII,YAAY,EAAIE,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,CAAE,CAC/ClD,QAAQ,CAACkD,YAAY,CAAC,CACxB,CAEA,GAAIC,YAAY,EAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,CAAE,CAC/CjD,QAAQ,CAACiD,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,EAAE,CAAC,CAENlH,SAAS,CAAC,IAAM,CACd;AACAwC,QAAQ,CAAC,qBAAqB,CAAE,IAAI,CAAE,GAAG,CAAC,CAC5C,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI+B,YAAY,CAAE,CAChB,mBACE1B,KAAA,QAAKwE,SAAS,CAAC,yCAAyC,CAAAC,QAAA,eACtD3E,IAAA,OAAI0E,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CAAC,uBAE5D,CAAI,CAAC,cACL3E,IAAA,MAAG0E,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAC9C/C,YAAY,CAACiB,OAAO,EAAI,gCAAgC,CACxD,CAAC,cACJ7C,IAAA,CAAC5B,MAAM,EACLwG,OAAO,CAAEA,CAAA,GAAMvE,QAAQ,CAAC,WAAW,CAAE,CACrCqE,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CACzD,oBAED,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,KAAM,CAAAlD,SAAS,CAAGC,gBAAgB,EAAIO,cAAc,EAAIE,cAAc,CAEtE,mBACEjC,KAAA,QAAKwE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CzE,KAAA,QAAKwE,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBzE,KAAA,CAAC9B,MAAM,EACL0E,OAAO,CAAC,SAAS,CACjB8B,OAAO,CAAEA,CAAA,GAAMvE,QAAQ,CAAC,WAAW,CAAE,CACrCqE,SAAS,CAAC,0GAA0G,CAAAC,QAAA,eAEpH3E,IAAA,CAACzB,SAAS,EAACmG,SAAS,CAAC,cAAc,CAAE,CAAC,mBAExC,EAAQ,CAAC,cACT1E,IAAA,OAAI0E,SAAS,CAAC,4DAA4D,CAAAC,QAAA,CACvEjD,gBAAgB,CAAG,YAAY,UAAA0C,MAAA,CAAY5C,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEV,KAAK,CAAE,CAC1D,CAAC,cACLd,IAAA,MAAG0E,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAAC,mCAElD,CAAG,CAAC,EACD,CAAC,CAELlD,SAAS,cACRzB,IAAA,QAAK0E,SAAS,CAAC,uCAAuC,CAAAC,QAAA,cACpDzE,KAAA,QAAKwE,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3E,IAAA,OAAI0E,SAAS,CAAC,yCAAyC,CAAAC,QAAA,CAAC,SAAO,CAAI,CAAC,cACpE3E,IAAA,QAAK0E,SAAS,CAAC,iBAAiB,CAAM,CAAC,EACpC,CAAC,CACH,CAAC,cAENxE,KAAA,QAAKwE,SAAS,CAAC,qGAAqG,CAAAC,QAAA,eAClH3E,IAAA,QAAK0E,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cAChDzE,KAAA,QAAKwE,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDzE,KAAA,QAAAyE,QAAA,eACE3E,IAAA,OAAI0E,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAAC,wBAEnD,CAAI,CAAC,cACL3E,IAAA,MAAG0E,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CAAC,+DAErD,CAAG,CAAC,EACD,CAAC,cACNzE,KAAA,QAAKwE,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB3E,IAAA,CAAC5B,MAAM,EACLoF,IAAI,CAAC,QAAQ,CACbV,OAAO,CAAC,SAAS,CACjB8B,OAAO,CAAEA,CAAA,GAAMvE,QAAQ,cAAA+D,MAAA,CAAchE,EAAE,CAAE,CAAE,CAC3CsE,SAAS,CAAC,qGAAqG,CAAAC,QAAA,CAChH,QAED,CAAQ,CAAC,cACTzE,KAAA,CAAC9B,MAAM,EACLoF,IAAI,CAAC,QAAQ,CACbkB,SAAS,CAAC,8CAA8C,CACxDE,OAAO,CAAEA,CAAA,GAAM,CACbpC,qBAAqB,CAACsB,MAAM,CAAClD,QAAQ,CAAC,CACtCmD,iBAAiB,CAAC,CAAC,CACrB,CAAE,CACFc,QAAQ,CAAErE,YAAa,CAAAmE,QAAA,eAEvB3E,IAAA,CAAC1B,IAAI,EAACoG,SAAS,CAAC,cAAc,CAAE,CAAC,CAChClE,YAAY,CAAG,WAAW,CAAG,cAAc,EACtC,CAAC,EACN,CAAC,EACH,CAAC,CACH,CAAC,cACNR,IAAA,QAAK0E,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxB3E,IAAA,CAACtB,WAAW,EACV0B,EAAE,CAAEA,EAAG,CACP0E,SAAS,CAAE,IAAK,CAChBC,YAAY,CAAE5D,KAAM,CACpB6D,YAAY,CAAE3D,KAAM,CACpB4D,MAAM,CAAElB,iBAAkB,CAC1BmB,gBAAgB,CAAEb,oBAAqB,CACxC,CAAC,CACC,CAAC,EACH,CACN,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\DACS-jules_wip_16596734084587186652\\\\it-roadmap\\\\client\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  // 检查本地存储或系统偏好\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const savedTheme = localStorage.getItem(\"theme\");\n      if (savedTheme) {\n        return savedTheme;\n      }\n\n      // 如果没有保存的主题，检查系统偏好\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    return \"light\"; // 默认主题\n  });\n\n  // 切换主题\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n  };\n\n  // 设置特定主题\n  const setSpecificTheme = newTheme => {\n    if (newTheme === \"light\" || newTheme === \"dark\") {\n      setTheme(newTheme);\n    }\n  };\n\n  // 当主题改变时应用到DOM\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const root = window.document.documentElement;\n      root.classList.remove(\"light\", \"dark\");\n      root.classList.add(theme);\n      localStorage.setItem(\"theme\", theme);\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      setTheme: setSpecificTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"gNpu74UpMMM0g3qHnfxhVWixtlY=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","window","savedTheme","localStorage","getItem","matchMedia","matches","toggleTheme","newTheme","setSpecificTheme","root","document","documentElement","classList","remove","add","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  // 检查本地存储或系统偏好\r\n  const [theme, setTheme] = useState(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const savedTheme = localStorage.getItem(\"theme\");\r\n      if (savedTheme) {\r\n        return savedTheme;\r\n      }\r\n\r\n      // 如果没有保存的主题，检查系统偏好\r\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n        ? \"dark\"\r\n        : \"light\";\r\n    }\r\n    return \"light\"; // 默认主题\r\n  });\r\n\r\n  // 切换主题\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  // 设置特定主题\r\n  const setSpecificTheme = (newTheme) => {\r\n    if (newTheme === \"light\" || newTheme === \"dark\") {\r\n      setTheme(newTheme);\r\n    }\r\n  };\r\n\r\n  // 当主题改变时应用到DOM\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const root = window.document.documentElement;\r\n      root.classList.remove(\"light\", \"dark\");\r\n      root.classList.add(theme);\r\n      localStorage.setItem(\"theme\", theme);\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ theme, toggleTheme, setTheme: setSpecificTheme }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC,IAAI,OAAOU,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAChD,IAAIF,UAAU,EAAE;QACd,OAAOA,UAAU;MACnB;;MAEA;MACA,OAAOD,MAAM,CAACI,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAC5D,MAAM,GACN,OAAO;IACb;IACA,OAAO,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGT,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACQ,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAID,QAAQ,IAAK;IACrC,IAAIA,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,MAAM,EAAE;MAC/CR,QAAQ,CAACQ,QAAQ,CAAC;IACpB;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd,IAAI,OAAOS,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMS,IAAI,GAAGT,MAAM,CAACU,QAAQ,CAACC,eAAe;MAC5CF,IAAI,CAACG,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;MACtCJ,IAAI,CAACG,SAAS,CAACE,GAAG,CAAChB,KAAK,CAAC;MACzBI,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;IACtC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,YAAY,CAACsB,QAAQ;IACpBC,KAAK,EAAE;MAAEnB,KAAK;MAAEQ,WAAW;MAAEP,QAAQ,EAAES;IAAiB,CAAE;IAAAZ,QAAA,EAEzDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACxB,EAAA,CA/CeF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAiD7B,OAAO,SAAS4B,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGpC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI+B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO;AAChB;AAACD,GAAA,CANeD,QAAQ;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
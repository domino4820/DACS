{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\DACS-jules_wip_16596734084587186652\\\\it-roadmap\\\\client\\\\src\\\\components\\\\theme-toggle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ThemeToggle() {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    // 检查本地存储中的主题偏好\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"theme\") || \"light\";\n    }\n    return \"light\"; // 默认主题\n  });\n\n  // 切换主题\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n  };\n\n  // 当主题改变时应用到DOM\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    root.classList.add(theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"ghost\",\n    size: \"icon\",\n    onClick: toggleTheme,\n    \"aria-label\": \"\\u5207\\u6362\\u4E3B\\u9898\",\n    children: [theme === \"light\" ? /*#__PURE__*/_jsxDEV(Moon, {\n      className: \"h-[1.2rem] w-[1.2rem]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Sun, {\n      className: \"h-[1.2rem] w-[1.2rem]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: \"\\u5207\\u6362\\u4E3B\\u9898\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeToggle, \"0e3lzZBumz7/ck8AmxP6SYlpgwo=\");\n_c = ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useState","Moon","Sun","Button","jsxDEV","_jsxDEV","ThemeToggle","_s","theme","setTheme","window","localStorage","getItem","toggleTheme","newTheme","root","document","documentElement","classList","remove","add","setItem","variant","size","onClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/components/theme-toggle.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Moon, Sun } from \"lucide-react\";\r\nimport { Button } from \"./ui/button\";\r\n\r\nexport function ThemeToggle() {\r\n  const [theme, setTheme] = useState(() => {\r\n    // 检查本地存储中的主题偏好\r\n    if (typeof window !== \"undefined\") {\r\n      return localStorage.getItem(\"theme\") || \"light\";\r\n    }\r\n    return \"light\"; // 默认主题\r\n  });\r\n\r\n  // 切换主题\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  // 当主题改变时应用到DOM\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove(\"light\", \"dark\");\r\n    root.classList.add(theme);\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      onClick={toggleTheme}\r\n      aria-label=\"切换主题\"\r\n    >\r\n      {theme === \"light\" ? (\r\n        <Moon className=\"h-[1.2rem] w-[1.2rem]\" />\r\n      ) : (\r\n        <Sun className=\"h-[1.2rem] w-[1.2rem]\" />\r\n      )}\r\n      <span className=\"sr-only\">切换主题</span>\r\n    </Button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AACxC,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC;IACA,IAAI,OAAOU,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;IACjD;IACA,OAAO,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,MAAMgB,IAAI,GAAGL,MAAM,CAACM,QAAQ,CAACC,eAAe;IAC5CF,IAAI,CAACG,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IACtCJ,IAAI,CAACG,SAAS,CAACE,GAAG,CAACZ,KAAK,CAAC;IACzBG,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA,CAACF,MAAM;IACLmB,OAAO,EAAC,OAAO;IACfC,IAAI,EAAC,MAAM;IACXC,OAAO,EAAEX,WAAY;IACrB,cAAW,0BAAM;IAAAY,QAAA,GAEhBjB,KAAK,KAAK,OAAO,gBAChBH,OAAA,CAACJ,IAAI;MAACyB,SAAS,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1CzB,OAAA,CAACH,GAAG;MAACwB,SAAS,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzC,eACDzB,OAAA;MAAMqB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEb;AAACvB,EAAA,CAtCeD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
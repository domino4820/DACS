{"ast":null,"code":"import api from \"./api\";\n\n// Get all notifications\nexport const getNotifications = async () => {\n  try {\n    const response = await api.get(\"/notifications\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching notifications:\", error);\n    throw error;\n  }\n};\n\n// Get current user's notifications\nexport const getUserNotifications = async () => {\n  try {\n    const response = await api.get(\"/notifications/user\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user notifications:\", error);\n    throw error;\n  }\n};\n\n// Create a notification\nexport const createNotification = async notificationData => {\n  try {\n    const response = await api.post(\"/notifications\", notificationData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating notification:\", error);\n    throw error;\n  }\n};\n\n// Create a notification for all users\nexport const createGlobalNotification = async message => {\n  try {\n    const response = await api.post(\"/notifications/global\", {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating global notification:\", error);\n    throw error;\n  }\n};\n\n// Create a notification for users of a specific roadmap\nexport const createRoadmapNotification = async (roadmapId, message) => {\n  try {\n    const response = await api.post(`/notifications/roadmap/${roadmapId}`, {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating roadmap notification:\", error);\n    throw error;\n  }\n};\n\n// Mark notification as read\nexport const markAsRead = async id => {\n  try {\n    const response = await api.put(`/notifications/${id}/read`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error marking notification as read:\", error);\n    throw error;\n  }\n};\n\n// Delete notification\nexport const deleteNotification = async id => {\n  try {\n    const response = await api.delete(`/notifications/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting notification:\", error);\n    throw error;\n  }\n};\n\n// Get notification stats\nexport const getNotificationStats = async () => {\n  try {\n    const response = await api.get(\"/notifications/stats\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching notification stats:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getNotifications","response","get","data","error","console","getUserNotifications","createNotification","notificationData","post","createGlobalNotification","message","createRoadmapNotification","roadmapId","markAsRead","id","put","deleteNotification","delete","getNotificationStats"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/services/notificationService.js"],"sourcesContent":["import api from \"./api\";\r\n\r\n// Get all notifications\r\nexport const getNotifications = async () => {\r\n  try {\r\n    const response = await api.get(\"/notifications\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching notifications:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get current user's notifications\r\nexport const getUserNotifications = async () => {\r\n  try {\r\n    const response = await api.get(\"/notifications/user\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user notifications:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a notification\r\nexport const createNotification = async (notificationData) => {\r\n  try {\r\n    const response = await api.post(\"/notifications\", notificationData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating notification:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a notification for all users\r\nexport const createGlobalNotification = async (message) => {\r\n  try {\r\n    const response = await api.post(\"/notifications/global\", { message });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating global notification:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a notification for users of a specific roadmap\r\nexport const createRoadmapNotification = async (roadmapId, message) => {\r\n  try {\r\n    const response = await api.post(`/notifications/roadmap/${roadmapId}`, {\r\n      message,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating roadmap notification:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Mark notification as read\r\nexport const markAsRead = async (id) => {\r\n  try {\r\n    const response = await api.put(`/notifications/${id}/read`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error marking notification as read:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete notification\r\nexport const deleteNotification = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/notifications/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting notification:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get notification stats\r\nexport const getNotificationStats = async () => {\r\n  try {\r\n    const response = await api.get(\"/notifications/stats\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching notification stats:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
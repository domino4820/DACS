{"ast":null,"code":"var _jsxFileName = \"D:\\\\CyberPath\\\\it-roadmap\\\\client\\\\src\\\\components\\\\CourseRoadmapEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, Controls, Panel, useNodesState, useEdgesState } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { Button } from \"./ui/button\";\nimport { toast } from \"sonner\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport AddCourseDialog from \"./AddCourseDialog\";\nimport { getCourseRoadmap, saveCourseRoadmap } from \"../services/courseRoadmapService\";\nimport CourseNodeComponent from \"./CourseNodeComponent\";\nimport NodeColorPicker from \"./NodeColorPicker\";\nimport NodeActions from \"./NodeActions\";\n\n// Define node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  courseNode: CourseNodeComponent\n};\nexport default function CourseRoadmapEditor({\n  courseId,\n  readOnly = false\n}) {\n  _s();\n  // State for nodes and edges\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // State for dialogs\n  const [showAddCourseDialog, setShowAddCourseDialog] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load course roadmap data\n  useEffect(() => {\n    const loadCourseRoadmap = async () => {\n      if (!courseId) return;\n      try {\n        var _roadmapData$nodes, _roadmapData$edges;\n        setIsLoading(true);\n        setError(null);\n        const roadmapData = await getCourseRoadmap(courseId);\n        if ((_roadmapData$nodes = roadmapData.nodes) !== null && _roadmapData$nodes !== void 0 && _roadmapData$nodes.length) {\n          setNodes(roadmapData.nodes);\n        }\n        if ((_roadmapData$edges = roadmapData.edges) !== null && _roadmapData$edges !== void 0 && _roadmapData$edges.length) {\n          setEdges(roadmapData.edges);\n        }\n      } catch (error) {\n        console.error(\"Error loading course roadmap:\", error);\n        setError(\"Failed to load roadmap data\");\n        toast.error(\"Failed to load roadmap data\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadCourseRoadmap();\n  }, [courseId, setNodes, setEdges]);\n\n  // Handle node click\n  const onNodeClick = useCallback((event, node) => {\n    if (!editMode) return;\n    setSelectedNode(node);\n  }, [editMode]);\n\n  // Handle adding a node\n  const onAddNode = useCallback(nodeData => {\n    // Create new node\n    const newNode = {\n      id: `node-${Date.now()}`,\n      type: \"courseNode\",\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      data: {\n        ...nodeData,\n        nodeBgColor: nodeData.nodeBgColor || \"#1e1e2f\",\n        nodeColor: nodeData.nodeColor || \"#7c3aed\",\n        textColor: nodeData.textColor || \"#ffffff\"\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n    setShowAddCourseDialog(false);\n    toast.success(\"Node added successfully\");\n  }, [setNodes]);\n\n  // Handle connecting nodes\n  const onConnect = useCallback(params => {\n    if (!editMode) return;\n    setEdges(eds => addEdge({\n      ...params,\n      type: \"smoothstep\",\n      animated: false,\n      style: {\n        stroke: \"#6d28d9\",\n        strokeWidth: 2\n      }\n    }, eds));\n  }, [setEdges, editMode]);\n\n  // Handle node deletion\n  const handleNodeDelete = useCallback(nodeId => {\n    if (!editMode) return;\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n    setSelectedNode(null);\n    toast.success(\"Node deleted successfully\");\n  }, [setNodes, setEdges]);\n\n  // Handle node update\n  const handleNodeUpdate = useCallback((nodeId, updatedData) => {\n    if (!editMode) return;\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...updatedData\n          }\n        };\n      }\n      return node;\n    }));\n    setSelectedNode(null);\n    toast.success(\"Node updated successfully\");\n  }, [setNodes]);\n\n  // Handle node style update\n  const handleNodeStyleUpdate = useCallback((nodeId, styleData) => {\n    if (!editMode) return;\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...styleData\n          }\n        };\n      }\n      return node;\n    }));\n  }, [setNodes]);\n\n  // Handle save roadmap\n  const handleSaveRoadmap = useCallback(async () => {\n    if (!courseId) {\n      toast.error(\"Invalid course ID\");\n      return;\n    }\n    try {\n      // Show loading toast\n      toast.loading(\"Saving roadmap...\");\n      console.log(\"Attempting to save roadmap for course:\", courseId);\n      console.log(\"Nodes to save:\", nodes);\n      console.log(\"Edges to save:\", edges);\n\n      // Convert courseId to a number if it's a string\n      const numericCourseId = typeof courseId === \"string\" ? parseInt(courseId, 10) : courseId;\n\n      // Check if courseId is valid after conversion\n      if (isNaN(numericCourseId)) {\n        toast.dismiss();\n        toast.error(\"Invalid course ID format\");\n        return;\n      }\n\n      // Save the roadmap data\n      const result = await saveCourseRoadmap(numericCourseId, {\n        nodes,\n        edges\n      });\n      console.log(\"Save result:\", result);\n\n      // Hide loading toast and show success\n      toast.dismiss();\n      toast.success(\"Roadmap saved successfully\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error saving roadmap:\", error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to save roadmap\";\n      toast.dismiss();\n      toast.error(`Error: ${errorMessage}`);\n    }\n  }, [courseId, nodes, edges]);\n\n  // Toggle edit mode\n  const toggleEditMode = useCallback(() => {\n    setEditMode(prev => !prev);\n    setSelectedNode(null);\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: \"Loading roadmap...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.location.reload(),\n        className: \"mt-4\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: editMode ? onNodesChange : undefined,\n      onEdgesChange: editMode ? onEdgesChange : undefined,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4a5568\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), !readOnly && /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-left\",\n        className: \"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleEditMode,\n            variant: editMode ? \"default\" : \"outline\",\n            className: `${editMode ? \"bg-purple-600 hover:bg-purple-700 text-white\" : \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"}`,\n            size: \"sm\",\n            children: editMode ? \"Editing Mode: ON\" : \"Editing Mode: OFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowAddCourseDialog(true),\n              variant: \"outline\",\n              className: \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",\n              size: \"sm\",\n              children: \"Add Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSaveRoadmap,\n              className: \"bg-green-600 hover:bg-green-700 text-white\",\n              size: \"sm\",\n              children: \"Save Roadmap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), editMode && selectedNode && /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-right\",\n        className: \"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-cyberpunk-darker border-purple-500/30\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultValue: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(TabsList, {\n                className: \"bg-cyberpunk-dark grid grid-cols-2 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(TabsTrigger, {\n                  value: \"actions\",\n                  className: \"data-[state=active]:bg-purple-900\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n                  value: \"style\",\n                  className: \"data-[state=active]:bg-purple-900\",\n                  children: \"Style\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n                value: \"actions\",\n                children: /*#__PURE__*/_jsxDEV(NodeActions, {\n                  node: selectedNode,\n                  onUpdate: handleNodeUpdate,\n                  onDelete: handleNodeDelete,\n                  onClose: () => setSelectedNode(null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n                value: \"style\",\n                children: /*#__PURE__*/_jsxDEV(NodeColorPicker, {\n                  node: selectedNode,\n                  onStyleUpdate: handleNodeStyleUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCourseDialog, {\n      open: showAddCourseDialog,\n      onClose: () => setShowAddCourseDialog(false),\n      onAdd: onAddNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseRoadmapEditor, \"GdHZbGG6hAePBoXAz2W34wrSNIY=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CourseRoadmapEditor;\nvar _c;\n$RefreshReg$(_c, \"CourseRoadmapEditor\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","addEdge","Background","Controls","Panel","useNodesState","useEdgesState","Button","toast","Card","CardContent","Tabs","TabsContent","TabsList","TabsTrigger","AddCourseDialog","getCourseRoadmap","saveCourseRoadmap","CourseNodeComponent","NodeColorPicker","NodeActions","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","courseNode","CourseRoadmapEditor","courseId","readOnly","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","showAddCourseDialog","setShowAddCourseDialog","selectedNode","setSelectedNode","editMode","setEditMode","isLoading","setIsLoading","error","setError","loadCourseRoadmap","_roadmapData$nodes","_roadmapData$edges","roadmapData","length","console","onNodeClick","event","node","onAddNode","nodeData","newNode","id","Date","now","type","position","x","Math","random","y","data","nodeBgColor","nodeColor","textColor","nds","concat","success","onConnect","params","eds","animated","style","stroke","strokeWidth","handleNodeDelete","nodeId","filter","edge","source","target","handleNodeUpdate","updatedData","map","handleNodeStyleUpdate","styleData","handleSaveRoadmap","loading","log","numericCourseId","parseInt","isNaN","dismiss","result","_error$response","_error$response$data","errorMessage","response","message","toggleEditMode","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","undefined","fitView","color","gap","variant","size","defaultValue","value","onUpdate","onDelete","onClose","onStyleUpdate","open","onAdd","_c","$RefreshReg$"],"sources":["D:/CyberPath/it-roadmap/client/src/components/CourseRoadmapEditor.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  Panel,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\nimport { Button } from \"./ui/button\";\r\nimport { toast } from \"sonner\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\r\nimport AddCourseDialog from \"./AddCourseDialog\";\r\nimport {\r\n  getCourseRoadmap,\r\n  saveCourseRoadmap,\r\n} from \"../services/courseRoadmapService\";\r\nimport CourseNodeComponent from \"./CourseNodeComponent\";\r\nimport NodeColorPicker from \"./NodeColorPicker\";\r\nimport NodeActions from \"./NodeActions\";\r\n\r\n// Define node types\r\nconst nodeTypes = {\r\n  courseNode: CourseNodeComponent,\r\n};\r\n\r\nexport default function CourseRoadmapEditor({ courseId, readOnly = false }) {\r\n  // State for nodes and edges\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n\r\n  // State for dialogs\r\n  const [showAddCourseDialog, setShowAddCourseDialog] = useState(false);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load course roadmap data\r\n  useEffect(() => {\r\n    const loadCourseRoadmap = async () => {\r\n      if (!courseId) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const roadmapData = await getCourseRoadmap(courseId);\r\n\r\n        if (roadmapData.nodes?.length) {\r\n          setNodes(roadmapData.nodes);\r\n        }\r\n        if (roadmapData.edges?.length) {\r\n          setEdges(roadmapData.edges);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading course roadmap:\", error);\r\n        setError(\"Failed to load roadmap data\");\r\n        toast.error(\"Failed to load roadmap data\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCourseRoadmap();\r\n  }, [courseId, setNodes, setEdges]);\r\n\r\n  // Handle node click\r\n  const onNodeClick = useCallback(\r\n    (event, node) => {\r\n      if (!editMode) return;\r\n      setSelectedNode(node);\r\n    },\r\n    [editMode]\r\n  );\r\n\r\n  // Handle adding a node\r\n  const onAddNode = useCallback(\r\n    (nodeData) => {\r\n      // Create new node\r\n      const newNode = {\r\n        id: `node-${Date.now()}`,\r\n        type: \"courseNode\",\r\n        position: {\r\n          x: Math.random() * 400,\r\n          y: Math.random() * 400,\r\n        },\r\n        data: {\r\n          ...nodeData,\r\n          nodeBgColor: nodeData.nodeBgColor || \"#1e1e2f\",\r\n          nodeColor: nodeData.nodeColor || \"#7c3aed\",\r\n          textColor: nodeData.textColor || \"#ffffff\",\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setShowAddCourseDialog(false);\r\n      toast.success(\"Node added successfully\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle connecting nodes\r\n  const onConnect = useCallback(\r\n    (params) => {\r\n      if (!editMode) return;\r\n\r\n      setEdges((eds) =>\r\n        addEdge(\r\n          {\r\n            ...params,\r\n            type: \"smoothstep\",\r\n            animated: false,\r\n            style: { stroke: \"#6d28d9\", strokeWidth: 2 },\r\n          },\r\n          eds\r\n        )\r\n      );\r\n    },\r\n    [setEdges, editMode]\r\n  );\r\n\r\n  // Handle node deletion\r\n  const handleNodeDelete = useCallback(\r\n    (nodeId) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Node deleted successfully\");\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Handle node update\r\n  const handleNodeUpdate = useCallback(\r\n    (nodeId, updatedData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...updatedData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Node updated successfully\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle node style update\r\n  const handleNodeStyleUpdate = useCallback(\r\n    (nodeId, styleData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...styleData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle save roadmap\r\n  const handleSaveRoadmap = useCallback(async () => {\r\n    if (!courseId) {\r\n      toast.error(\"Invalid course ID\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show loading toast\r\n      toast.loading(\"Saving roadmap...\");\r\n\r\n      console.log(\"Attempting to save roadmap for course:\", courseId);\r\n      console.log(\"Nodes to save:\", nodes);\r\n      console.log(\"Edges to save:\", edges);\r\n\r\n      // Convert courseId to a number if it's a string\r\n      const numericCourseId =\r\n        typeof courseId === \"string\" ? parseInt(courseId, 10) : courseId;\r\n\r\n      // Check if courseId is valid after conversion\r\n      if (isNaN(numericCourseId)) {\r\n        toast.dismiss();\r\n        toast.error(\"Invalid course ID format\");\r\n        return;\r\n      }\r\n\r\n      // Save the roadmap data\r\n      const result = await saveCourseRoadmap(numericCourseId, {\r\n        nodes,\r\n        edges,\r\n      });\r\n\r\n      console.log(\"Save result:\", result);\r\n\r\n      // Hide loading toast and show success\r\n      toast.dismiss();\r\n      toast.success(\"Roadmap saved successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error saving roadmap:\", error);\r\n      const errorMessage =\r\n        error.response?.data?.message || \"Failed to save roadmap\";\r\n      toast.dismiss();\r\n      toast.error(`Error: ${errorMessage}`);\r\n    }\r\n  }, [courseId, nodes, edges]);\r\n\r\n  // Toggle edit mode\r\n  const toggleEditMode = useCallback(() => {\r\n    setEditMode((prev) => !prev);\r\n    setSelectedNode(null);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        Loading roadmap...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-full\">\r\n        <p className=\"text-red-500\">{error}</p>\r\n        <Button onClick={() => window.location.reload()} className=\"mt-4\">\r\n          Retry\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={editMode ? onNodesChange : undefined}\r\n        onEdgesChange={editMode ? onEdgesChange : undefined}\r\n        onConnect={onConnect}\r\n        onNodeClick={onNodeClick}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n      >\r\n        <Background color=\"#4a5568\" gap={16} />\r\n        <Controls />\r\n\r\n        {/* Editor Panels */}\r\n        {!readOnly && (\r\n          <Panel\r\n            position=\"top-left\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <div className=\"flex flex-col gap-2\">\r\n              <Button\r\n                onClick={toggleEditMode}\r\n                variant={editMode ? \"default\" : \"outline\"}\r\n                className={`${\r\n                  editMode\r\n                    ? \"bg-purple-600 hover:bg-purple-700 text-white\"\r\n                    : \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                }`}\r\n                size=\"sm\"\r\n              >\r\n                {editMode ? \"Editing Mode: ON\" : \"Editing Mode: OFF\"}\r\n              </Button>\r\n\r\n              {editMode && (\r\n                <>\r\n                  <Button\r\n                    onClick={() => setShowAddCourseDialog(true)}\r\n                    variant=\"outline\"\r\n                    className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Add Node\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={handleSaveRoadmap}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Save Roadmap\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Panel>\r\n        )}\r\n\r\n        {/* Node actions panel when a node is selected */}\r\n        {editMode && selectedNode && (\r\n          <Panel\r\n            position=\"top-right\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <Card className=\"bg-cyberpunk-darker border-purple-500/30\">\r\n              <CardContent className=\"p-4\">\r\n                <Tabs defaultValue=\"actions\">\r\n                  <TabsList className=\"bg-cyberpunk-dark grid grid-cols-2 mb-4\">\r\n                    <TabsTrigger\r\n                      value=\"actions\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Actions\r\n                    </TabsTrigger>\r\n                    <TabsTrigger\r\n                      value=\"style\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Style\r\n                    </TabsTrigger>\r\n                  </TabsList>\r\n\r\n                  <TabsContent value=\"actions\">\r\n                    <NodeActions\r\n                      node={selectedNode}\r\n                      onUpdate={handleNodeUpdate}\r\n                      onDelete={handleNodeDelete}\r\n                      onClose={() => setSelectedNode(null)}\r\n                    />\r\n                  </TabsContent>\r\n\r\n                  <TabsContent value=\"style\">\r\n                    <NodeColorPicker\r\n                      node={selectedNode}\r\n                      onStyleUpdate={handleNodeStyleUpdate}\r\n                    />\r\n                  </TabsContent>\r\n                </Tabs>\r\n              </CardContent>\r\n            </Card>\r\n          </Panel>\r\n        )}\r\n      </ReactFlow>\r\n\r\n      {/* Add Course Dialog */}\r\n      <AddCourseDialog\r\n        open={showAddCourseDialog}\r\n        onClose={() => setShowAddCourseDialog(false)}\r\n        onAdd={onAddNode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
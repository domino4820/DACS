{"ast":null,"code":"\"use client\";import _objectSpread from\"D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback,useRef}from\"react\";import{useParams,Link,useNavigate}from\"react-router-dom\";import{useQuery,useMutation,useQueryClient}from\"@tanstack/react-query\";import{getRoadmapById,getRoadmapNodes,getRoadmapEdges,updateRoadmapNodes,updateRoadmapEdges,updateRoadmap}from\"../services/roadmapService\";import{getCategories}from\"../services/categoryService\";import{Button}from\"../components/ui/button\";import{ChevronLeft,Save,ArrowLeft,PlusCircle}from\"lucide-react\";import{useToast}from\"../components/ui/use-toast\";import RoadmapView from\"../components/RoadmapView\";import{Input}from\"../components/ui/input\";import{Label}from\"../components/ui/label\";import{Textarea}from\"../components/ui/textarea\";import{Select,SelectContent,SelectItem,SelectTrigger,SelectValue}from\"../components/ui/select\";import{Card,CardContent,CardDescription,CardFooter,CardHeader,CardTitle}from\"../components/ui/card\";import{Tabs,TabsContent,TabsList,TabsTrigger}from\"../components/ui/tabs\";import{typeText}from\"../lib/animations\";import{Skeleton}from\"../components/ui/skeleton\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function RoadmapEditPage(){const{id}=useParams();const navigate=useNavigate();const{toast}=useToast();const queryClient=useQueryClient();const[isSubmitting,setIsSubmitting]=useState(false);const[activeTab,setActiveTab]=useState(\"info\");const[formData,setFormData]=useState({title:\"\",description:\"\",category:\"\",difficulty:\"beginner\",isPublic:true});const[nodes,setNodes]=useState([]);const[edges,setEdges]=useState([]);const roadmapViewRef=useRef(null);// Get roadmap data\nconst{data:roadmap,isLoading:isRoadmapLoading,error:roadmapError}=useQuery({queryKey:[\"roadmap\",id],queryFn:()=>getRoadmapById(id),enabled:!!id});// Get roadmap nodes\nconst{data:roadmapNodes,isLoading:isNodesLoading}=useQuery({queryKey:[\"roadmap-nodes\",id],queryFn:()=>getRoadmapNodes(id),enabled:!!id});// Get roadmap edges\nconst{data:roadmapEdges,isLoading:isEdgesLoading}=useQuery({queryKey:[\"roadmap-edges\",id],queryFn:()=>getRoadmapEdges(id),enabled:!!id});// Get categories for the dropdown\nconst{data:categories,isLoading:isCategoriesLoading}=useQuery({queryKey:[\"categories\"],queryFn:getCategories,placeholderData:[{id:1,name:\"Frontend\"},{id:2,name:\"Backend\"},{id:3,name:\"Full Stack\"},{id:4,name:\"DevOps\"},{id:5,name:\"Security\"},{id:6,name:\"Data Science\"}]});// Update roadmap mutation\nconst updateRoadmapMutation=useMutation({mutationFn:data=>updateRoadmap(id,data),onSuccess:()=>{toast({title:\"Roadmap updated\",description:\"Your roadmap information has been updated successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap\",id]});queryClient.invalidateQueries({queryKey:[\"roadmaps\"]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update roadmap\",variant:\"destructive\"});setIsSubmitting(false);}});// Update nodes mutation\nconst updateNodesMutation=useMutation({mutationFn:nodes=>updateRoadmapNodes(id,nodes),onSuccess:()=>{toast({title:\"Nodes updated\",description:\"The roadmap nodes have been saved successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap-nodes\",id]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update nodes\",variant:\"destructive\"});}});// Update edges mutation\nconst updateEdgesMutation=useMutation({mutationFn:edges=>updateRoadmapEdges(id,edges),onSuccess:()=>{toast({title:\"Connections updated\",description:\"The roadmap connections have been saved successfully\"});queryClient.invalidateQueries({queryKey:[\"roadmap-edges\",id]});},onError:error=>{toast({title:\"Error\",description:error.message||\"Failed to update connections\",variant:\"destructive\"});}});// Populate form when roadmap data is loaded\nuseEffect(()=>{if(roadmap){var _roadmap$categoryId;setFormData({title:roadmap.title||\"\",description:roadmap.description||\"\",category:((_roadmap$categoryId=roadmap.categoryId)===null||_roadmap$categoryId===void 0?void 0:_roadmap$categoryId.toString())||\"\",difficulty:roadmap.difficulty||\"beginner\",isPublic:roadmap.isPublic!==undefined?roadmap.isPublic:true});}},[roadmap]);// Set nodes and edges when they're loaded\nuseEffect(()=>{if(roadmapNodes){setNodes(roadmapNodes);}},[roadmapNodes]);useEffect(()=>{if(roadmapEdges){setEdges(roadmapEdges);}},[roadmapEdges]);const handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:type===\"checkbox\"?checked:value}));};const handleSelectChange=(name,value)=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};const handleSubmit=e=>{e.preventDefault();setIsSubmitting(true);updateRoadmapMutation.mutate(formData);setIsSubmitting(false);};// Handle save of nodes and edges\nconst handleSaveRoadmap=async(cleanedNodes,cleanedEdges)=>{console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");console.log(\"[SAVE] Current nodes in state:\",nodes.length);console.log(\"[SAVE] Current edges in state:\",edges.length);// Kiểm tra và đảm bảo dữ liệu là mảng hợp lệ\nconsole.log(\"[SAVE] Received cleanedNodes type:\",Array.isArray(cleanedNodes)?\"Array\":typeof cleanedNodes);console.log(\"[SAVE] Received cleanedEdges type:\",Array.isArray(cleanedEdges)?\"Array\":typeof cleanedEdges);// Đảm bảo nodesToSave và edgesToSave luôn là mảng\nconst nodesToSave=Array.isArray(cleanedNodes)?cleanedNodes:Array.isArray(nodes)?nodes:[];const edgesToSave=Array.isArray(cleanedEdges)?cleanedEdges:Array.isArray(edges)?edges:[];console.log(\"[SAVE] Final nodesToSave length:\",nodesToSave.length);console.log(\"[SAVE] Final edgesToSave length:\",edgesToSave.length);// Debug - in chi tiết cơ bản của nodes và edges (tránh circular references)\ntry{console.log(\"[SAVE] NODES count:\",nodesToSave===null||nodesToSave===void 0?void 0:nodesToSave.length);// Log thông tin an toàn về nodes\nif(nodesToSave&&nodesToSave.length>0){var _nodesToSave$,_nodesToSave$2,_nodesToSave$3,_nodesToSave$4,_nodesToSave$4$data;console.log(\"[SAVE] First node sample:\",{id:(_nodesToSave$=nodesToSave[0])===null||_nodesToSave$===void 0?void 0:_nodesToSave$.id,type:(_nodesToSave$2=nodesToSave[0])===null||_nodesToSave$2===void 0?void 0:_nodesToSave$2.type,position:(_nodesToSave$3=nodesToSave[0])===null||_nodesToSave$3===void 0?void 0:_nodesToSave$3.position,dataLabel:(_nodesToSave$4=nodesToSave[0])===null||_nodesToSave$4===void 0?void 0:(_nodesToSave$4$data=_nodesToSave$4.data)===null||_nodesToSave$4$data===void 0?void 0:_nodesToSave$4$data.label});}console.log(\"[SAVE] EDGES count:\",edgesToSave===null||edgesToSave===void 0?void 0:edgesToSave.length);// Log thông tin an toàn về edges\nif(edgesToSave&&edgesToSave.length>0){var _edgesToSave$,_edgesToSave$2,_edgesToSave$3;console.log(\"[SAVE] First edge sample:\",{id:(_edgesToSave$=edgesToSave[0])===null||_edgesToSave$===void 0?void 0:_edgesToSave$.id,source:(_edgesToSave$2=edgesToSave[0])===null||_edgesToSave$2===void 0?void 0:_edgesToSave$2.source,target:(_edgesToSave$3=edgesToSave[0])===null||_edgesToSave$3===void 0?void 0:_edgesToSave$3.target});}}catch(logError){console.error(\"[SAVE] Error logging node/edge details:\",logError);}console.log(\"[SAVE] Using cleaned data:\",!!cleanedNodes);// Hiển thị thông báo đang lưu\ntoast({title:\"Đang lưu...\",description:\"Đang lưu thông tin roadmap, vui lòng đợi\"});try{// Sử dụng Promise.all để đợi tất cả các thao tác hoàn thành\n// 1. Cập nhật thông tin roadmap cơ bản\nconst roadmapPromise=new Promise((resolve,reject)=>{updateRoadmapMutation.mutate(formData,{onSuccess:data=>{console.log(\"[SAVE] Roadmap info updated successfully\");resolve(data);},onError:error=>{console.error(\"[SAVE] Error updating roadmap info:\",error);reject(error);}});});// 2. Cập nhật nodes\nconst nodesPromise=new Promise((resolve,reject)=>{updateNodesMutation.mutate(nodesToSave,{onSuccess:data=>{console.log(\"[SAVE] Nodes updated successfully:\",data);resolve(data);},onError:error=>{console.error(\"[SAVE] Error updating nodes:\",error);reject(error);}});});// 3. Cập nhật edges\nconst edgesPromise=new Promise((resolve,reject)=>{updateEdgesMutation.mutate(edgesToSave,{onSuccess:data=>{console.log(\"[SAVE] Edges updated successfully:\",data);resolve(data);},onError:error=>{console.error(\"[SAVE] Error updating edges:\",error);reject(error);}});});// Đợi tất cả các thao tác hoàn thành\nawait Promise.all([roadmapPromise,nodesPromise,edgesPromise]);// Cập nhật state nếu dữ liệu đã được làm sạch\nif(cleanedNodes)setNodes(cleanedNodes);if(cleanedEdges)setEdges(cleanedEdges);// Hiển thị thông báo thành công\ntoast({title:\"Lưu thành công\",description:\"\\u0110\\xE3 l\\u01B0u \".concat(nodesToSave.length,\" nodes v\\xE0 \").concat(edgesToSave.length,\" edges\"),variant:\"default\"});// Làm mới dữ liệu từ server\nqueryClient.invalidateQueries({queryKey:[\"roadmap\",id]});queryClient.invalidateQueries({queryKey:[\"roadmap-nodes\",id]});queryClient.invalidateQueries({queryKey:[\"roadmap-edges\",id]});}catch(error){// Hiển thị thông báo lỗi\nconsole.error(\"[SAVE] Error during save process:\",error);toast({title:\"Lỗi khi lưu\",description:error.message||\"Có lỗi xảy ra khi lưu roadmap\",variant:\"destructive\"});}};// Handle internal updates from ReactFlow\nconst handleInternalUpdate=useCallback((updatedNodes,updatedEdges)=>{console.log(\"[INTERNAL] Received nodes update:\",updatedNodes===null||updatedNodes===void 0?void 0:updatedNodes.length);console.log(\"[INTERNAL] Received edges update:\",updatedEdges===null||updatedEdges===void 0?void 0:updatedEdges.length);if(updatedNodes&&Array.isArray(updatedNodes)){setNodes(updatedNodes);}if(updatedEdges&&Array.isArray(updatedEdges)){setEdges(updatedEdges);}},[]);useEffect(()=>{// Apply typing effect to the page title\ntypeText(\".edit-roadmap-title\",null,800);},[]);if(roadmapError){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto py-8 px-4 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-cyber text-cyberpunk-red mb-4\",children:\"Error Loading Roadmap\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 font-mono-cyber mb-6\",children:roadmapError.message||\"Failed to load roadmap details\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>navigate(\"/roadmaps\"),className:\"bg-purple-600 hover:bg-purple-700 text-white\",children:\"Return to Roadmaps\"})]});}const isLoading=isRoadmapLoading||isNodesLoading||isEdgesLoading;return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto py-8 px-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:()=>navigate(\"/roadmaps\"),className:\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\",children:[/*#__PURE__*/_jsx(ArrowLeft,{className:\"h-4 w-4 mr-2\"}),\"Back to Roadmaps\"]}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold font-cyber neon-text edit-roadmap-title\",children:isRoadmapLoading?\"Loading...\":\"Edit: \".concat(roadmap===null||roadmap===void 0?void 0:roadmap.title)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 font-mono-cyber mt-2\",children:\"Update your learning path details\"})]}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl mb-4 text-purple-300 font-cyber\",children:\"Loading\"}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner mx-auto\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-purple-500/20\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-cyber text-purple-300\",children:\"Roadmap Content Editor\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-mono-cyber text-gray-400 text-sm\",children:\"Add courses, create connections, and build your learning path\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>navigate(\"/roadmaps/\".concat(id)),className:\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"button\",className:\"bg-purple-600 hover:bg-purple-700 text-white\",onClick:()=>{toast({title:\"Đang lưu...\",description:\"Đang lưu thông tin roadmap, vui lòng đợi\"});// Gọi saveChanges từ RoadmapView ref\nif(roadmapViewRef.current&&roadmapViewRef.current.saveChanges){roadmapViewRef.current.saveChanges();}else{handleSaveRoadmap();}},disabled:isSubmitting,children:[/*#__PURE__*/_jsx(Save,{className:\"h-4 w-4 mr-2\"}),isSubmitting?\"Saving...\":\"Save Changes\"]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[800px]\",children:/*#__PURE__*/_jsx(RoadmapView,{id:id,isEditing:true,initialNodes:nodes,initialEdges:edges,onSave:handleSaveRoadmap,onInternalUpdate:handleInternalUpdate,ref:roadmapViewRef})})]})]});}","map":{"version":3,"names":["_objectSpread","useState","useEffect","useCallback","useRef","useParams","Link","useNavigate","useQuery","useMutation","useQueryClient","getRoadmapById","getRoadmapNodes","getRoadmapEdges","updateRoadmapNodes","updateRoadmapEdges","updateRoadmap","getCategories","Button","ChevronLeft","Save","ArrowLeft","PlusCircle","useToast","RoadmapView","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Tabs","TabsContent","TabsList","TabsTrigger","typeText","Skeleton","jsx","_jsx","jsxs","_jsxs","RoadmapEditPage","id","navigate","toast","queryClient","isSubmitting","setIsSubmitting","activeTab","setActiveTab","formData","setFormData","title","description","category","difficulty","isPublic","nodes","setNodes","edges","setEdges","roadmapViewRef","data","roadmap","isLoading","isRoadmapLoading","error","roadmapError","queryKey","queryFn","enabled","roadmapNodes","isNodesLoading","roadmapEdges","isEdgesLoading","categories","isCategoriesLoading","placeholderData","name","updateRoadmapMutation","mutationFn","onSuccess","invalidateQueries","onError","message","variant","updateNodesMutation","updateEdgesMutation","_roadmap$categoryId","categoryId","toString","undefined","handleChange","e","value","type","checked","target","handleSelectChange","handleSubmit","preventDefault","mutate","handleSaveRoadmap","cleanedNodes","cleanedEdges","console","log","length","Array","isArray","nodesToSave","edgesToSave","_nodesToSave$","_nodesToSave$2","_nodesToSave$3","_nodesToSave$4","_nodesToSave$4$data","position","dataLabel","label","_edgesToSave$","_edgesToSave$2","_edgesToSave$3","source","logError","roadmapPromise","Promise","resolve","reject","nodesPromise","edgesPromise","all","concat","handleInternalUpdate","updatedNodes","updatedEdges","className","children","onClick","current","saveChanges","disabled","isEditing","initialNodes","initialEdges","onSave","onInternalUpdate","ref"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/pages/RoadmapEditPage.jsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  getRoadmapById,\r\n  getRoadmapNodes,\r\n  getRoadmapEdges,\r\n  updateRoadmapNodes,\r\n  updateRoadmapEdges,\r\n  updateRoadmap,\r\n} from \"../services/roadmapService\";\r\nimport { getCategories } from \"../services/categoryService\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { ChevronLeft, Save, ArrowLeft, PlusCircle } from \"lucide-react\";\r\nimport { useToast } from \"../components/ui/use-toast\";\r\nimport RoadmapView from \"../components/RoadmapView\";\r\nimport { Input } from \"../components/ui/input\";\r\nimport { Label } from \"../components/ui/label\";\r\nimport { Textarea } from \"../components/ui/textarea\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"../components/ui/select\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../components/ui/card\";\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"../components/ui/tabs\";\r\nimport { typeText } from \"../lib/animations\";\r\nimport { Skeleton } from \"../components/ui/skeleton\";\r\n\r\nexport default function RoadmapEditPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"info\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    difficulty: \"beginner\",\r\n    isPublic: true,\r\n  });\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const roadmapViewRef = useRef(null);\r\n\r\n  // Get roadmap data\r\n  const {\r\n    data: roadmap,\r\n    isLoading: isRoadmapLoading,\r\n    error: roadmapError,\r\n  } = useQuery({\r\n    queryKey: [\"roadmap\", id],\r\n    queryFn: () => getRoadmapById(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get roadmap nodes\r\n  const { data: roadmapNodes, isLoading: isNodesLoading } = useQuery({\r\n    queryKey: [\"roadmap-nodes\", id],\r\n    queryFn: () => getRoadmapNodes(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get roadmap edges\r\n  const { data: roadmapEdges, isLoading: isEdgesLoading } = useQuery({\r\n    queryKey: [\"roadmap-edges\", id],\r\n    queryFn: () => getRoadmapEdges(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get categories for the dropdown\r\n  const { data: categories, isLoading: isCategoriesLoading } = useQuery({\r\n    queryKey: [\"categories\"],\r\n    queryFn: getCategories,\r\n    placeholderData: [\r\n      { id: 1, name: \"Frontend\" },\r\n      { id: 2, name: \"Backend\" },\r\n      { id: 3, name: \"Full Stack\" },\r\n      { id: 4, name: \"DevOps\" },\r\n      { id: 5, name: \"Security\" },\r\n      { id: 6, name: \"Data Science\" },\r\n    ],\r\n  });\r\n\r\n  // Update roadmap mutation\r\n  const updateRoadmapMutation = useMutation({\r\n    mutationFn: (data) => updateRoadmap(id, data),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Roadmap updated\",\r\n        description: \"Your roadmap information has been updated successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap\", id] });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmaps\"] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update roadmap\",\r\n        variant: \"destructive\",\r\n      });\r\n      setIsSubmitting(false);\r\n    },\r\n  });\r\n\r\n  // Update nodes mutation\r\n  const updateNodesMutation = useMutation({\r\n    mutationFn: (nodes) => updateRoadmapNodes(id, nodes),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Nodes updated\",\r\n        description: \"The roadmap nodes have been saved successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-nodes\", id] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update nodes\",\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  // Update edges mutation\r\n  const updateEdgesMutation = useMutation({\r\n    mutationFn: (edges) => updateRoadmapEdges(id, edges),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Connections updated\",\r\n        description: \"The roadmap connections have been saved successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-edges\", id] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update connections\",\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  // Populate form when roadmap data is loaded\r\n  useEffect(() => {\r\n    if (roadmap) {\r\n      setFormData({\r\n        title: roadmap.title || \"\",\r\n        description: roadmap.description || \"\",\r\n        category: roadmap.categoryId?.toString() || \"\",\r\n        difficulty: roadmap.difficulty || \"beginner\",\r\n        isPublic: roadmap.isPublic !== undefined ? roadmap.isPublic : true,\r\n      });\r\n    }\r\n  }, [roadmap]);\r\n\r\n  // Set nodes and edges when they're loaded\r\n  useEffect(() => {\r\n    if (roadmapNodes) {\r\n      setNodes(roadmapNodes);\r\n    }\r\n  }, [roadmapNodes]);\r\n\r\n  useEffect(() => {\r\n    if (roadmapEdges) {\r\n      setEdges(roadmapEdges);\r\n    }\r\n  }, [roadmapEdges]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (name, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    updateRoadmapMutation.mutate(formData);\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  // Handle save of nodes and edges\r\n  const handleSaveRoadmap = async (cleanedNodes, cleanedEdges) => {\r\n    console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");\r\n    console.log(\"[SAVE] Current nodes in state:\", nodes.length);\r\n    console.log(\"[SAVE] Current edges in state:\", edges.length);\r\n\r\n    // Kiểm tra và đảm bảo dữ liệu là mảng hợp lệ\r\n    console.log(\r\n      \"[SAVE] Received cleanedNodes type:\",\r\n      Array.isArray(cleanedNodes) ? \"Array\" : typeof cleanedNodes\r\n    );\r\n    console.log(\r\n      \"[SAVE] Received cleanedEdges type:\",\r\n      Array.isArray(cleanedEdges) ? \"Array\" : typeof cleanedEdges\r\n    );\r\n\r\n    // Đảm bảo nodesToSave và edgesToSave luôn là mảng\r\n    const nodesToSave = Array.isArray(cleanedNodes)\r\n      ? cleanedNodes\r\n      : Array.isArray(nodes)\r\n      ? nodes\r\n      : [];\r\n    const edgesToSave = Array.isArray(cleanedEdges)\r\n      ? cleanedEdges\r\n      : Array.isArray(edges)\r\n      ? edges\r\n      : [];\r\n\r\n    console.log(\"[SAVE] Final nodesToSave length:\", nodesToSave.length);\r\n    console.log(\"[SAVE] Final edgesToSave length:\", edgesToSave.length);\r\n\r\n    // Debug - in chi tiết cơ bản của nodes và edges (tránh circular references)\r\n    try {\r\n      console.log(\"[SAVE] NODES count:\", nodesToSave?.length);\r\n      // Log thông tin an toàn về nodes\r\n      if (nodesToSave && nodesToSave.length > 0) {\r\n        console.log(\"[SAVE] First node sample:\", {\r\n          id: nodesToSave[0]?.id,\r\n          type: nodesToSave[0]?.type,\r\n          position: nodesToSave[0]?.position,\r\n          dataLabel: nodesToSave[0]?.data?.label,\r\n        });\r\n      }\r\n\r\n      console.log(\"[SAVE] EDGES count:\", edgesToSave?.length);\r\n      // Log thông tin an toàn về edges\r\n      if (edgesToSave && edgesToSave.length > 0) {\r\n        console.log(\"[SAVE] First edge sample:\", {\r\n          id: edgesToSave[0]?.id,\r\n          source: edgesToSave[0]?.source,\r\n          target: edgesToSave[0]?.target,\r\n        });\r\n      }\r\n    } catch (logError) {\r\n      console.error(\"[SAVE] Error logging node/edge details:\", logError);\r\n    }\r\n\r\n    console.log(\"[SAVE] Using cleaned data:\", !!cleanedNodes);\r\n\r\n    // Hiển thị thông báo đang lưu\r\n    toast({\r\n      title: \"Đang lưu...\",\r\n      description: \"Đang lưu thông tin roadmap, vui lòng đợi\",\r\n    });\r\n\r\n    try {\r\n      // Sử dụng Promise.all để đợi tất cả các thao tác hoàn thành\r\n      // 1. Cập nhật thông tin roadmap cơ bản\r\n      const roadmapPromise = new Promise((resolve, reject) => {\r\n        updateRoadmapMutation.mutate(formData, {\r\n          onSuccess: (data) => {\r\n            console.log(\"[SAVE] Roadmap info updated successfully\");\r\n            resolve(data);\r\n          },\r\n          onError: (error) => {\r\n            console.error(\"[SAVE] Error updating roadmap info:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n\r\n      // 2. Cập nhật nodes\r\n      const nodesPromise = new Promise((resolve, reject) => {\r\n        updateNodesMutation.mutate(nodesToSave, {\r\n          onSuccess: (data) => {\r\n            console.log(\"[SAVE] Nodes updated successfully:\", data);\r\n            resolve(data);\r\n          },\r\n          onError: (error) => {\r\n            console.error(\"[SAVE] Error updating nodes:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n\r\n      // 3. Cập nhật edges\r\n      const edgesPromise = new Promise((resolve, reject) => {\r\n        updateEdgesMutation.mutate(edgesToSave, {\r\n          onSuccess: (data) => {\r\n            console.log(\"[SAVE] Edges updated successfully:\", data);\r\n            resolve(data);\r\n          },\r\n          onError: (error) => {\r\n            console.error(\"[SAVE] Error updating edges:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n\r\n      // Đợi tất cả các thao tác hoàn thành\r\n      await Promise.all([roadmapPromise, nodesPromise, edgesPromise]);\r\n\r\n      // Cập nhật state nếu dữ liệu đã được làm sạch\r\n      if (cleanedNodes) setNodes(cleanedNodes);\r\n      if (cleanedEdges) setEdges(cleanedEdges);\r\n\r\n      // Hiển thị thông báo thành công\r\n      toast({\r\n        title: \"Lưu thành công\",\r\n        description: `Đã lưu ${nodesToSave.length} nodes và ${edgesToSave.length} edges`,\r\n        variant: \"default\",\r\n      });\r\n\r\n      // Làm mới dữ liệu từ server\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap\", id] });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-nodes\", id] });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-edges\", id] });\r\n    } catch (error) {\r\n      // Hiển thị thông báo lỗi\r\n      console.error(\"[SAVE] Error during save process:\", error);\r\n      toast({\r\n        title: \"Lỗi khi lưu\",\r\n        description: error.message || \"Có lỗi xảy ra khi lưu roadmap\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle internal updates from ReactFlow\r\n  const handleInternalUpdate = useCallback((updatedNodes, updatedEdges) => {\r\n    console.log(\"[INTERNAL] Received nodes update:\", updatedNodes?.length);\r\n    console.log(\"[INTERNAL] Received edges update:\", updatedEdges?.length);\r\n\r\n    if (updatedNodes && Array.isArray(updatedNodes)) {\r\n      setNodes(updatedNodes);\r\n    }\r\n\r\n    if (updatedEdges && Array.isArray(updatedEdges)) {\r\n      setEdges(updatedEdges);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply typing effect to the page title\r\n    typeText(\".edit-roadmap-title\", null, 800);\r\n  }, []);\r\n\r\n  if (roadmapError) {\r\n    return (\r\n      <div className=\"container mx-auto py-8 px-4 text-center\">\r\n        <h2 className=\"text-2xl font-cyber text-cyberpunk-red mb-4\">\r\n          Error Loading Roadmap\r\n        </h2>\r\n        <p className=\"text-gray-400 font-mono-cyber mb-6\">\r\n          {roadmapError.message || \"Failed to load roadmap details\"}\r\n        </p>\r\n        <Button\r\n          onClick={() => navigate(\"/roadmaps\")}\r\n          className=\"bg-purple-600 hover:bg-purple-700 text-white\"\r\n        >\r\n          Return to Roadmaps\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isLoading = isRoadmapLoading || isNodesLoading || isEdgesLoading;\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-4\">\r\n      <div className=\"mb-8\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => navigate(\"/roadmaps\")}\r\n          className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n          Back to Roadmaps\r\n        </Button>\r\n        <h1 className=\"text-3xl font-bold font-cyber neon-text edit-roadmap-title\">\r\n          {isRoadmapLoading ? \"Loading...\" : `Edit: ${roadmap?.title}`}\r\n        </h1>\r\n        <p className=\"text-gray-400 font-mono-cyber mt-2\">\r\n          Update your learning path details\r\n        </p>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-xl mb-4 text-purple-300 font-cyber\">Loading</h2>\r\n            <div className=\"spinner mx-auto\"></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\">\r\n          <div className=\"p-4 border-b border-purple-500/20\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <h3 className=\"text-xl font-cyber text-purple-300\">\r\n                  Roadmap Content Editor\r\n                </h3>\r\n                <p className=\"font-mono-cyber text-gray-400 text-sm\">\r\n                  Add courses, create connections, and build your learning path\r\n                </p>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={() => navigate(`/roadmaps/${id}`)}\r\n                  className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white\"\r\n                  onClick={() => {\r\n                    toast({\r\n                      title: \"Đang lưu...\",\r\n                      description: \"Đang lưu thông tin roadmap, vui lòng đợi\",\r\n                    });\r\n                    // Gọi saveChanges từ RoadmapView ref\r\n                    if (\r\n                      roadmapViewRef.current &&\r\n                      roadmapViewRef.current.saveChanges\r\n                    ) {\r\n                      roadmapViewRef.current.saveChanges();\r\n                    } else {\r\n                      handleSaveRoadmap();\r\n                    }\r\n                  }}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  {isSubmitting ? \"Saving...\" : \"Save Changes\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"h-[800px]\">\r\n            <RoadmapView\r\n              id={id}\r\n              isEditing={true}\r\n              initialNodes={nodes}\r\n              initialEdges={edges}\r\n              onSave={handleSaveRoadmap}\r\n              onInternalUpdate={handleInternalUpdate}\r\n              ref={roadmapViewRef}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect}from\"react\";import api from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[devMode,setDevMode]=useState(false);// Track if we're using dev mode auth\n// Load user from local storage on app start\nuseEffect(()=>{const loadUser=async()=>{try{// Check if token exists\nconst token=localStorage.getItem(\"token\");if(!token){console.log(\"No token found, user is not logged in\");setLoading(false);return;}// 确保授权头已设置\napi.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);// 添加请求超时、重试和错误处理\nlet retries=0;const maxRetries=2;let success=false;while(retries<=maxRetries&&!success){try{console.log(\"Attempting to load user session (attempt \".concat(retries+1,\"/\").concat(maxRetries+1,\")\"));const response=await api.get(\"/users/current\",{timeout:8000// 8秒超时\n});if(response.data&&response.data.id){setUser(response.data);console.log(\"User session restored successfully\");success=true;}else{throw new Error(\"Invalid user data received\");}}catch(retryErr){var _retryErr$response;retries++;if(((_retryErr$response=retryErr.response)===null||_retryErr$response===void 0?void 0:_retryErr$response.status)===401){var _retryErr$response2,_retryErr$response2$d;console.error(\"Authentication error:\",((_retryErr$response2=retryErr.response)===null||_retryErr$response2===void 0?void 0:(_retryErr$response2$d=_retryErr$response2.data)===null||_retryErr$response2$d===void 0?void 0:_retryErr$response2$d.message)||\"Token invalid or expired\");break;// 不重试认证错误\n}if(retries>maxRetries){throw retryErr;// 重试次数用完，抛出最后一个错误\n}// 等待一段时间后重试\nawait new Promise(resolve=>setTimeout(resolve,1000*retries));}}}catch(err){console.error(\"Error loading user:\",err);setError(err.message);// 清除无效令牌和数据\nlocalStorage.removeItem(\"token\");delete api.defaults.headers.common[\"Authorization\"];// 仅在非登录/注册页面重定向\nconst publicPaths=[\"/login\",\"/register\",\"/\",\"/explore\"];const currentPath=window.location.pathname;if(!publicPaths.some(path=>currentPath.startsWith(path))){console.log(\"Redirecting to login page due to authentication failure\");// 使用延迟防止可能的循环重定向\nsetTimeout(()=>{window.location.href=\"/login\";},100);}}finally{setLoading(false);}};// Check if we're already using dev mode\nconst isDevMode=localStorage.getItem(\"devMode\")===\"true\";setDevMode(isDevMode);// If in dev mode, don't try to load user from API\nif(isDevMode){const storedUser=JSON.parse(localStorage.getItem(\"devModeUser\"));if(storedUser){setUser(storedUser);}setLoading(false);}else{loadUser();}},[]);const login=async credentials=>{// If we're in dev mode, handle mock login\nif(devMode){const mockUser={id:Math.floor(Math.random()*1000),username:credentials.email.split(\"@\")[0],email:credentials.email,isAdmin:credentials.email.includes(\"admin\")};console.log(\"Logging in with dev mode user:\",mockUser);setUser(mockUser);localStorage.setItem(\"devModeUser\",JSON.stringify(mockUser));localStorage.setItem(\"token\",\"dev-mode-token\");// 确保设置token\n// 设置默认授权头\napi.defaults.headers.common[\"Authorization\"]=\"Bearer dev-mode-token\";return{user:mockUser,token:\"dev-mode-token\"};}// Real login\ntry{// Simplify login flow - use only one endpoint\nconst response=await api.post(\"/users/login\",credentials);// 验证响应包含必要的数据\nif(!response.data||!response.data.token||!response.data.user){throw new Error(\"Invalid response format from server\");}// Save token to localStorage\nlocalStorage.setItem(\"token\",response.data.token);// Set default authorization header for Axios\napi.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(response.data.token);console.log(\"Logged in user:\",response.data.user);setUser(response.data.user);return response.data;}catch(err){var _err$response,_err$response$data;// 移除任何可能存在的旧令牌\nlocalStorage.removeItem(\"token\");delete api.defaults.headers.common[\"Authorization\"];const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message||\"Login failed\";setError(errorMessage);throw new Error(errorMessage);}};const register=async userData=>{// If we're in dev mode, handle mock registration\nif(devMode){const mockUser={id:Math.floor(Math.random()*1000),username:userData.username,email:userData.email,isAdmin:userData.email.includes(\"admin\")};setUser(mockUser);localStorage.setItem(\"devModeUser\",JSON.stringify(mockUser));localStorage.setItem(\"token\",\"dev-mode-token\");// 确保设置token\n// 设置默认授权头\napi.defaults.headers.common[\"Authorization\"]=\"Bearer dev-mode-token\";return{user:mockUser,token:\"dev-mode-token\"};}// Real registration\ntry{const response=await api.post(\"/auth/register\",userData);// 验证响应数据\nif(!response.data||!response.data.token||!response.data.user){throw new Error(\"Invalid response format from server\");}// Save token to localStorage\nlocalStorage.setItem(\"token\",response.data.token);// Set default authorization header for Axios\napi.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(response.data.token);setUser(response.data.user);return response.data;}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||err.message||\"Registration failed\";setError(errorMessage);throw new Error(errorMessage);}};const logout=()=>{localStorage.removeItem(\"token\");// If in dev mode, also clear dev mode user\nif(devMode){localStorage.removeItem(\"devModeUser\");}delete api.defaults.headers.common[\"Authorization\"];setUser(null);};// Toggle development mode - only for development!\nconst toggleDevMode=()=>{if(process.env.NODE_ENV!==\"development\")return;const newDevMode=!devMode;setDevMode(newDevMode);if(newDevMode){localStorage.setItem(\"devMode\",\"true\");}else{localStorage.removeItem(\"devMode\");localStorage.removeItem(\"devModeUser\");}// Clear current user when switching modes\nsetUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,error,isAuthenticated:!!user,isAdmin:(user===null||user===void 0?void 0:user.isAdmin)||false,devMode,login,register,logout,toggleDevMode},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["createContext","useContext","useState","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","devMode","setDevMode","loadUser","token","localStorage","getItem","console","log","defaults","headers","common","concat","retries","maxRetries","success","response","get","timeout","data","id","Error","retryErr","_retryErr$response","status","_retryErr$response2","_retryErr$response2$d","message","Promise","resolve","setTimeout","err","removeItem","publicPaths","currentPath","window","location","pathname","some","path","startsWith","href","isDevMode","storedUser","JSON","parse","login","credentials","mockUser","Math","floor","random","username","email","split","isAdmin","includes","setItem","stringify","post","_err$response","_err$response$data","errorMessage","register","userData","_err$response2","_err$response2$data","logout","toggleDevMode","process","env","NODE_ENV","newDevMode","Provider","value","isAuthenticated","useAuth"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/context/AuthContext.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport api from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [devMode, setDevMode] = useState(false); // Track if we're using dev mode auth\r\n\r\n  // Load user from local storage on app start\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        // Check if token exists\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          console.log(\"No token found, user is not logged in\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // 确保授权头已设置\r\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n\r\n        // 添加请求超时、重试和错误处理\r\n        let retries = 0;\r\n        const maxRetries = 2;\r\n        let success = false;\r\n\r\n        while (retries <= maxRetries && !success) {\r\n          try {\r\n            console.log(\r\n              `Attempting to load user session (attempt ${retries + 1}/${\r\n                maxRetries + 1\r\n              })`\r\n            );\r\n\r\n            const response = await api.get(\"/users/current\", {\r\n              timeout: 8000, // 8秒超时\r\n            });\r\n\r\n            if (response.data && response.data.id) {\r\n              setUser(response.data);\r\n              console.log(\"User session restored successfully\");\r\n              success = true;\r\n            } else {\r\n              throw new Error(\"Invalid user data received\");\r\n            }\r\n          } catch (retryErr) {\r\n            retries++;\r\n\r\n            if (retryErr.response?.status === 401) {\r\n              console.error(\r\n                \"Authentication error:\",\r\n                retryErr.response?.data?.message || \"Token invalid or expired\"\r\n              );\r\n              break; // 不重试认证错误\r\n            }\r\n\r\n            if (retries > maxRetries) {\r\n              throw retryErr; // 重试次数用完，抛出最后一个错误\r\n            }\r\n\r\n            // 等待一段时间后重试\r\n            await new Promise((resolve) => setTimeout(resolve, 1000 * retries));\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error loading user:\", err);\r\n        setError(err.message);\r\n\r\n        // 清除无效令牌和数据\r\n        localStorage.removeItem(\"token\");\r\n        delete api.defaults.headers.common[\"Authorization\"];\r\n\r\n        // 仅在非登录/注册页面重定向\r\n        const publicPaths = [\"/login\", \"/register\", \"/\", \"/explore\"];\r\n        const currentPath = window.location.pathname;\r\n\r\n        if (!publicPaths.some((path) => currentPath.startsWith(path))) {\r\n          console.log(\r\n            \"Redirecting to login page due to authentication failure\"\r\n          );\r\n          // 使用延迟防止可能的循环重定向\r\n          setTimeout(() => {\r\n            window.location.href = \"/login\";\r\n          }, 100);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Check if we're already using dev mode\r\n    const isDevMode = localStorage.getItem(\"devMode\") === \"true\";\r\n    setDevMode(isDevMode);\r\n\r\n    // If in dev mode, don't try to load user from API\r\n    if (isDevMode) {\r\n      const storedUser = JSON.parse(localStorage.getItem(\"devModeUser\"));\r\n      if (storedUser) {\r\n        setUser(storedUser);\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      loadUser();\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    // If we're in dev mode, handle mock login\r\n    if (devMode) {\r\n      const mockUser = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        username: credentials.email.split(\"@\")[0],\r\n        email: credentials.email,\r\n        isAdmin: credentials.email.includes(\"admin\"),\r\n      };\r\n      console.log(\"Logging in with dev mode user:\", mockUser);\r\n      setUser(mockUser);\r\n      localStorage.setItem(\"devModeUser\", JSON.stringify(mockUser));\r\n      localStorage.setItem(\"token\", \"dev-mode-token\"); // 确保设置token\r\n\r\n      // 设置默认授权头\r\n      api.defaults.headers.common[\"Authorization\"] = `Bearer dev-mode-token`;\r\n\r\n      return { user: mockUser, token: \"dev-mode-token\" };\r\n    }\r\n\r\n    // Real login\r\n    try {\r\n      // Simplify login flow - use only one endpoint\r\n      const response = await api.post(\"/users/login\", credentials);\r\n\r\n      // 验证响应包含必要的数据\r\n      if (!response.data || !response.data.token || !response.data.user) {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n\r\n      // Save token to localStorage\r\n      localStorage.setItem(\"token\", response.data.token);\r\n\r\n      // Set default authorization header for Axios\r\n      api.defaults.headers.common[\r\n        \"Authorization\"\r\n      ] = `Bearer ${response.data.token}`;\r\n\r\n      console.log(\"Logged in user:\", response.data.user);\r\n      setUser(response.data.user);\r\n      return response.data;\r\n    } catch (err) {\r\n      // 移除任何可能存在的旧令牌\r\n      localStorage.removeItem(\"token\");\r\n      delete api.defaults.headers.common[\"Authorization\"];\r\n\r\n      const errorMessage =\r\n        err.response?.data?.message || err.message || \"Login failed\";\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    // If we're in dev mode, handle mock registration\r\n    if (devMode) {\r\n      const mockUser = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        username: userData.username,\r\n        email: userData.email,\r\n        isAdmin: userData.email.includes(\"admin\"),\r\n      };\r\n      setUser(mockUser);\r\n      localStorage.setItem(\"devModeUser\", JSON.stringify(mockUser));\r\n      localStorage.setItem(\"token\", \"dev-mode-token\"); // 确保设置token\r\n\r\n      // 设置默认授权头\r\n      api.defaults.headers.common[\"Authorization\"] = `Bearer dev-mode-token`;\r\n\r\n      return { user: mockUser, token: \"dev-mode-token\" };\r\n    }\r\n\r\n    // Real registration\r\n    try {\r\n      const response = await api.post(\"/auth/register\", userData);\r\n\r\n      // 验证响应数据\r\n      if (!response.data || !response.data.token || !response.data.user) {\r\n        throw new Error(\"Invalid response format from server\");\r\n      }\r\n\r\n      // Save token to localStorage\r\n      localStorage.setItem(\"token\", response.data.token);\r\n\r\n      // Set default authorization header for Axios\r\n      api.defaults.headers.common[\r\n        \"Authorization\"\r\n      ] = `Bearer ${response.data.token}`;\r\n\r\n      setUser(response.data.user);\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err.response?.data?.message || err.message || \"Registration failed\";\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n\r\n    // If in dev mode, also clear dev mode user\r\n    if (devMode) {\r\n      localStorage.removeItem(\"devModeUser\");\r\n    }\r\n\r\n    delete api.defaults.headers.common[\"Authorization\"];\r\n    setUser(null);\r\n  };\r\n\r\n  // Toggle development mode - only for development!\r\n  const toggleDevMode = () => {\r\n    if (process.env.NODE_ENV !== \"development\") return;\r\n\r\n    const newDevMode = !devMode;\r\n    setDevMode(newDevMode);\r\n\r\n    if (newDevMode) {\r\n      localStorage.setItem(\"devMode\", \"true\");\r\n    } else {\r\n      localStorage.removeItem(\"devMode\");\r\n      localStorage.removeItem(\"devModeUser\");\r\n    }\r\n\r\n    // Clear current user when switching modes\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        isAuthenticated: !!user,\r\n        isAdmin: user?.isAdmin || false,\r\n        devMode,\r\n        login,\r\n        register,\r\n        logout,\r\n        toggleDevMode,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
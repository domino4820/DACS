{"ast":null,"code":"import api from \"./api\";\n\n// Get all roadmaps\nexport const getRoadmaps = async () => {\n  const response = await api.get(\"/roadmaps\");\n  return response.data;\n};\n\n// Get roadmap by ID\nexport const getRoadmapById = async id => {\n  const response = await api.get(`/roadmaps/${id}`);\n  return response.data;\n};\n\n// Create new roadmap\nexport const createRoadmap = async roadmapData => {\n  const response = await api.post(\"/roadmaps\", roadmapData);\n  return response.data;\n};\n\n// Update roadmap\nexport const updateRoadmap = async (id, roadmapData) => {\n  const response = await api.put(`/roadmaps/${id}`, roadmapData);\n  return response.data;\n};\n\n// Delete roadmap\nexport const deleteRoadmap = async id => {\n  const response = await api.delete(`/roadmaps/${id}`);\n  return response.data;\n};\n\n// Get roadmap nodes\nexport const getRoadmapNodes = async id => {\n  const response = await api.get(`/roadmaps/${id}/nodes`);\n  return response.data;\n};\n\n// Update roadmap nodes\nexport const updateRoadmapNodes = async (id, nodes) => {\n  const response = await api.put(`/roadmaps/${id}/nodes`, {\n    nodes\n  });\n  return response.data;\n};\n\n// Get roadmap edges\nexport const getRoadmapEdges = async id => {\n  const response = await api.get(`/roadmaps/${id}/edges`);\n  return response.data;\n};\n\n// Update roadmap edges\nexport const updateRoadmapEdges = async (id, edges) => {\n  const response = await api.put(`/roadmaps/${id}/edges`, {\n    edges\n  });\n  return response.data;\n};\n\n// Toggle favorite roadmap\nexport const toggleFavoriteRoadmap = async id => {\n  const response = await api.post(`/roadmaps/${id}/favorite`);\n  return response.data;\n};\n\n// Get user favorites\nexport const getUserFavorites = async () => {\n  const response = await api.get(\"/roadmaps/favorites\");\n  return response.data;\n};","map":{"version":3,"names":["api","getRoadmaps","response","get","data","getRoadmapById","id","createRoadmap","roadmapData","post","updateRoadmap","put","deleteRoadmap","delete","getRoadmapNodes","updateRoadmapNodes","nodes","getRoadmapEdges","updateRoadmapEdges","edges","toggleFavoriteRoadmap","getUserFavorites"],"sources":["D:/CyberPath/it-roadmap/client/src/services/roadmapService.js"],"sourcesContent":["import api from \"./api\";\n\n// Get all roadmaps\nexport const getRoadmaps = async () => {\n  const response = await api.get(\"/roadmaps\");\n  return response.data;\n};\n\n// Get roadmap by ID\nexport const getRoadmapById = async (id) => {\n  const response = await api.get(`/roadmaps/${id}`);\n  return response.data;\n};\n\n// Create new roadmap\nexport const createRoadmap = async (roadmapData) => {\n  const response = await api.post(\"/roadmaps\", roadmapData);\n  return response.data;\n};\n\n// Update roadmap\nexport const updateRoadmap = async (id, roadmapData) => {\n  const response = await api.put(`/roadmaps/${id}`, roadmapData);\n  return response.data;\n};\n\n// Delete roadmap\nexport const deleteRoadmap = async (id) => {\n  const response = await api.delete(`/roadmaps/${id}`);\n  return response.data;\n};\n\n// Get roadmap nodes\nexport const getRoadmapNodes = async (id) => {\n  const response = await api.get(`/roadmaps/${id}/nodes`);\n  return response.data;\n};\n\n// Update roadmap nodes\nexport const updateRoadmapNodes = async (id, nodes) => {\n  const response = await api.put(`/roadmaps/${id}/nodes`, { nodes });\n  return response.data;\n};\n\n// Get roadmap edges\nexport const getRoadmapEdges = async (id) => {\n  const response = await api.get(`/roadmaps/${id}/edges`);\n  return response.data;\n};\n\n// Update roadmap edges\nexport const updateRoadmapEdges = async (id, edges) => {\n  const response = await api.put(`/roadmaps/${id}/edges`, { edges });\n  return response.data;\n};\n\n// Toggle favorite roadmap\nexport const toggleFavoriteRoadmap = async (id) => {\n  const response = await api.post(`/roadmaps/${id}/favorite`);\n  return response.data;\n};\n\n// Get user favorites\nexport const getUserFavorites = async () => {\n  const response = await api.get(\"/roadmaps/favorites\");\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAaG,EAAE,EAAE,CAAC;EACjD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACS,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EACzD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EACtD,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACW,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;EAC9D,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAON,EAAE,IAAK;EACzC,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACa,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACpD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAOR,EAAE,IAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAaG,EAAE,QAAQ,CAAC;EACvD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMW,kBAAkB,GAAG,MAAAA,CAAOT,EAAE,EAAEU,KAAK,KAAK;EACrD,MAAMd,QAAQ,GAAG,MAAMF,GAAG,CAACW,GAAG,CAAC,aAAaL,EAAE,QAAQ,EAAE;IAAEU;EAAM,CAAC,CAAC;EAClE,OAAOd,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMa,eAAe,GAAG,MAAOX,EAAE,IAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAaG,EAAE,QAAQ,CAAC;EACvD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMc,kBAAkB,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,KAAK,KAAK;EACrD,MAAMjB,QAAQ,GAAG,MAAMF,GAAG,CAACW,GAAG,CAAC,aAAaL,EAAE,QAAQ,EAAE;IAAEa;EAAM,CAAC,CAAC;EAClE,OAAOjB,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMgB,qBAAqB,GAAG,MAAOd,EAAE,IAAK;EACjD,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACS,IAAI,CAAC,aAAaH,EAAE,WAAW,CAAC;EAC3D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMnB,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
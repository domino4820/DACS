{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\CyberPath\\\\DACS-main\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user from local storage on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        // Check if token exists\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // Get current user\n        const response = await api.get(\"/auth/me\");\n        setUser(response.data);\n      } catch (err) {\n        console.error(\"Error loading user:\", err);\n        setError(err.message);\n        // Clear invalid token\n        localStorage.removeItem(\"token\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await api.post(\"/auth/login\", credentials);\n\n      // Save token to localStorage\n      if (response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        // Set default authorization header for Axios\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n      }\n      setUser(response.data.user);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\";\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post(\"/auth/register\", userData);\n\n      // Save token to localStorage\n      if (response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        // Set default authorization header for Axios\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n      }\n      setUser(response.data.user);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Registration failed\";\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    delete api.defaults.headers.common[\"Authorization\"];\n    setUser(null);\n  };\n\n  // For demo purposes, simulate a logged-in admin user\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && !user) {\n      const mockUser = {\n        id: 1,\n        username: \"admin\",\n        email: \"admin@example.com\",\n        isAdmin: true\n      };\n      setUser(mockUser);\n      setLoading(false);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      isAuthenticated: !!user,\n      isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"7+yZn6J2c3ngGSY07PyfRn24fIE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","error","setError","loadUser","token","localStorage","getItem","response","get","data","err","console","message","removeItem","login","credentials","post","setItem","defaults","headers","common","_err$response","_err$response$data","errorMessage","Error","register","userData","_err$response2","_err$response2$data","logout","process","env","NODE_ENV","mockUser","id","username","email","isAdmin","Provider","value","isAuthenticated","fileName","lineNumber","columnNumber","_c","useAuth","$RefreshReg$"],"sources":["D:/CyberPath/DACS-main/client/src/context/AuthContext.jsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user from local storage on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        // Check if token exists\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // Get current user\n        const response = await api.get(\"/auth/me\");\n        setUser(response.data);\n      } catch (err) {\n        console.error(\"Error loading user:\", err);\n        setError(err.message);\n        // Clear invalid token\n        localStorage.removeItem(\"token\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await api.post(\"/auth/login\", credentials);\n\n      // Save token to localStorage\n      if (response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        // Set default authorization header for Axios\n        api.defaults.headers.common[\n          \"Authorization\"\n        ] = `Bearer ${response.data.token}`;\n      }\n\n      setUser(response.data.user);\n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Login failed\";\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post(\"/auth/register\", userData);\n\n      // Save token to localStorage\n      if (response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        // Set default authorization header for Axios\n        api.defaults.headers.common[\n          \"Authorization\"\n        ] = `Bearer ${response.data.token}`;\n      }\n\n      setUser(response.data.user);\n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Registration failed\";\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    delete api.defaults.headers.common[\"Authorization\"];\n    setUser(null);\n  };\n\n  // For demo purposes, simulate a logged-in admin user\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && !user) {\n      const mockUser = {\n        id: 1,\n        username: \"admin\",\n        email: \"admin@example.com\",\n        isAdmin: true,\n      };\n      setUser(mockUser);\n      setLoading(false);\n    }\n  }, [user]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        isAuthenticated: !!user,\n        isAdmin: user?.isAdmin || false,\n        login,\n        register,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
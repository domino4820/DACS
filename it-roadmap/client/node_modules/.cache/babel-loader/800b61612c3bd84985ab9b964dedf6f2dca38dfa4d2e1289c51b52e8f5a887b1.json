{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\demo\\\\DACS-jules_wip_16596734084587186652\\\\it-roadmap\\\\client\\\\src\\\\pages\\\\RoadmapEditPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getRoadmapById, getRoadmapNodes, getRoadmapEdges, updateRoadmapNodes, updateRoadmapEdges, updateRoadmap } from \"../services/roadmapService\";\nimport { getCategories } from \"../services/categoryService\";\nimport { Button } from \"../components/ui/button\";\nimport { ChevronLeft, Save, ArrowLeft, PlusCircle } from \"lucide-react\";\nimport { useToast } from \"../components/ui/use-toast\";\nimport RoadmapView from \"../components/RoadmapView\";\nimport { Input } from \"../components/ui/input\";\nimport { Label } from \"../components/ui/label\";\nimport { Textarea } from \"../components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../components/ui/select\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../components/ui/tabs\";\nimport { typeText } from \"../lib/animations\";\nimport { Skeleton } from \"../components/ui/skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoadmapEditPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    toast\n  } = useToast();\n  const queryClient = useQueryClient();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"info\");\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    difficulty: \"beginner\",\n    isPublic: true\n  });\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  // Get roadmap data\n  const {\n    data: roadmap,\n    isLoading: isRoadmapLoading,\n    error: roadmapError\n  } = useQuery({\n    queryKey: [\"roadmap\", id],\n    queryFn: () => getRoadmapById(id),\n    enabled: !!id\n  });\n\n  // Get roadmap nodes\n  const {\n    data: roadmapNodes,\n    isLoading: isNodesLoading\n  } = useQuery({\n    queryKey: [\"roadmap-nodes\", id],\n    queryFn: () => getRoadmapNodes(id),\n    enabled: !!id\n  });\n\n  // Get roadmap edges\n  const {\n    data: roadmapEdges,\n    isLoading: isEdgesLoading\n  } = useQuery({\n    queryKey: [\"roadmap-edges\", id],\n    queryFn: () => getRoadmapEdges(id),\n    enabled: !!id\n  });\n\n  // Get categories for the dropdown\n  const {\n    data: categories,\n    isLoading: isCategoriesLoading\n  } = useQuery({\n    queryKey: [\"categories\"],\n    queryFn: getCategories,\n    placeholderData: [{\n      id: 1,\n      name: \"Frontend\"\n    }, {\n      id: 2,\n      name: \"Backend\"\n    }, {\n      id: 3,\n      name: \"Full Stack\"\n    }, {\n      id: 4,\n      name: \"DevOps\"\n    }, {\n      id: 5,\n      name: \"Security\"\n    }, {\n      id: 6,\n      name: \"Data Science\"\n    }]\n  });\n\n  // Update roadmap mutation\n  const updateRoadmapMutation = useMutation({\n    mutationFn: data => updateRoadmap(id, data),\n    onSuccess: () => {\n      toast({\n        title: \"Roadmap updated\",\n        description: \"Your roadmap information has been updated successfully\"\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"roadmap\", id]\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"roadmaps\"]\n      });\n    },\n    onError: error => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update roadmap\",\n        variant: \"destructive\"\n      });\n      setIsSubmitting(false);\n    }\n  });\n\n  // Update nodes mutation\n  const updateNodesMutation = useMutation({\n    mutationFn: nodes => updateRoadmapNodes(id, nodes),\n    onSuccess: () => {\n      toast({\n        title: \"Nodes updated\",\n        description: \"The roadmap nodes have been saved successfully\"\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"roadmap-nodes\", id]\n      });\n    },\n    onError: error => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update nodes\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  // Update edges mutation\n  const updateEdgesMutation = useMutation({\n    mutationFn: edges => updateRoadmapEdges(id, edges),\n    onSuccess: () => {\n      toast({\n        title: \"Connections updated\",\n        description: \"The roadmap connections have been saved successfully\"\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"roadmap-edges\", id]\n      });\n    },\n    onError: error => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update connections\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  // Populate form when roadmap data is loaded\n  useEffect(() => {\n    if (roadmap) {\n      var _roadmap$categoryId;\n      setFormData({\n        title: roadmap.title || \"\",\n        description: roadmap.description || \"\",\n        category: ((_roadmap$categoryId = roadmap.categoryId) === null || _roadmap$categoryId === void 0 ? void 0 : _roadmap$categoryId.toString()) || \"\",\n        difficulty: roadmap.difficulty || \"beginner\",\n        isPublic: roadmap.isPublic !== undefined ? roadmap.isPublic : true\n      });\n    }\n  }, [roadmap]);\n\n  // Set nodes and edges when they're loaded\n  useEffect(() => {\n    if (roadmapNodes) {\n      setNodes(roadmapNodes);\n    }\n  }, [roadmapNodes]);\n  useEffect(() => {\n    if (roadmapEdges) {\n      setEdges(roadmapEdges);\n    }\n  }, [roadmapEdges]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleSelectChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    updateRoadmapMutation.mutate(formData);\n    setIsSubmitting(false);\n  };\n\n  // Handle save of nodes and edges\n  const handleSaveRoadmap = () => {\n    console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");\n    console.log(\"[SAVE] Current nodes in state:\", nodes.length);\n    console.log(\"[SAVE] Current edges in state:\", edges.length);\n    if (nodes.length === 0) {\n      console.warn(\"[SAVE] Warning: No nodes found in state! Not saving empty nodes.\");\n    }\n\n    // Update form data first\n    updateRoadmapMutation.mutate(formData);\n\n    // Always save nodes and edges, even if empty arrays\n    // This ensures we're explicitly sending the current state\n    updateNodesMutation.mutate(nodes);\n    updateEdgesMutation.mutate(edges);\n\n    // Add a confirmation toast with count\n    toast({\n      title: \"Roadmap saved\",\n      description: `Saved ${nodes.length} nodes and ${edges.length} edges`,\n      variant: \"default\"\n    });\n  };\n\n  // Handle internal updates from ReactFlow\n  const handleInternalUpdate = useCallback((updatedNodes, updatedEdges) => {\n    console.log(\"[INTERNAL] Received nodes update:\", updatedNodes === null || updatedNodes === void 0 ? void 0 : updatedNodes.length);\n    console.log(\"[INTERNAL] Received edges update:\", updatedEdges === null || updatedEdges === void 0 ? void 0 : updatedEdges.length);\n    if (updatedNodes && Array.isArray(updatedNodes)) {\n      setNodes(updatedNodes);\n    }\n    if (updatedEdges && Array.isArray(updatedEdges)) {\n      setEdges(updatedEdges);\n    }\n  }, []);\n  useEffect(() => {\n    // Apply typing effect to the page title\n    typeText(\".edit-roadmap-title\", null, 800);\n  }, []);\n  if (roadmapError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto py-8 px-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-cyber text-cyberpunk-red mb-4\",\n        children: \"Error Loading Roadmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 font-mono-cyber mb-6\",\n        children: roadmapError.message || \"Failed to load roadmap details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/roadmaps\"),\n        className: \"bg-purple-600 hover:bg-purple-700 text-white\",\n        children: \"Return to Roadmaps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  }\n  const isLoading = isRoadmapLoading || isNodesLoading || isEdgesLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-8 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        onClick: () => navigate(\"/roadmaps\"),\n        className: \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"h-4 w-4 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), \"Back to Roadmaps\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold font-cyber neon-text edit-roadmap-title\",\n        children: isRoadmapLoading ? \"Loading...\" : `Edit: ${roadmap === null || roadmap === void 0 ? void 0 : roadmap.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 font-mono-cyber mt-2\",\n        children: \"Update your learning path details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl mb-4 text-purple-300 font-cyber\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-purple-500/20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-cyber text-purple-300\",\n              children: \"Roadmap Content Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-mono-cyber text-gray-400 text-sm\",\n              children: \"Add courses, create connections, and build your learning path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => navigate(`/roadmaps/${id}`),\n              className: \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              className: \"bg-purple-600 hover:bg-purple-700 text-white\",\n              onClick: () => {\n                updateRoadmapMutation.mutate(formData);\n                handleSaveRoadmap();\n              },\n              disabled: isSubmitting,\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), isSubmitting ? \"Saving...\" : \"Save Changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[800px]\",\n        children: /*#__PURE__*/_jsxDEV(RoadmapView, {\n          id: id,\n          isEditing: true,\n          initialNodes: nodes,\n          initialEdges: edges,\n          onSave: handleSaveRoadmap,\n          onInternalUpdate: handleInternalUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapEditPage, \"n2ivXBC6zOjgeO/OXfQbS4/EIyg=\", false, function () {\n  return [useParams, useNavigate, useToast, useQueryClient, useQuery, useQuery, useQuery, useQuery, useMutation, useMutation, useMutation];\n});\n_c = RoadmapEditPage;\nvar _c;\n$RefreshReg$(_c, \"RoadmapEditPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","useParams","Link","useNavigate","useQuery","useMutation","useQueryClient","getRoadmapById","getRoadmapNodes","getRoadmapEdges","updateRoadmapNodes","updateRoadmapEdges","updateRoadmap","getCategories","Button","ChevronLeft","Save","ArrowLeft","PlusCircle","useToast","RoadmapView","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Tabs","TabsContent","TabsList","TabsTrigger","typeText","Skeleton","jsxDEV","_jsxDEV","RoadmapEditPage","id","navigate","toast","queryClient","isSubmitting","setIsSubmitting","activeTab","setActiveTab","formData","setFormData","title","description","category","difficulty","isPublic","nodes","setNodes","edges","setEdges","data","roadmap","isLoading","isRoadmapLoading","error","roadmapError","queryKey","queryFn","enabled","roadmapNodes","isNodesLoading","roadmapEdges","isEdgesLoading","categories","isCategoriesLoading","placeholderData","name","updateRoadmapMutation","mutationFn","onSuccess","invalidateQueries","onError","message","variant","updateNodesMutation","updateEdgesMutation","_roadmap$categoryId","categoryId","toString","undefined","handleChange","e","value","type","checked","target","handleSelectChange","handleSubmit","preventDefault","mutate","handleSaveRoadmap","console","log","length","warn","handleInternalUpdate","updatedNodes","updatedEdges","Array","isArray","className","children","fileName","lineNumber","columnNumber","onClick","disabled","isEditing","initialNodes","initialEdges","onSave","onInternalUpdate","_c","$RefreshReg$"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/pages/RoadmapEditPage.jsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  getRoadmapById,\r\n  getRoadmapNodes,\r\n  getRoadmapEdges,\r\n  updateRoadmapNodes,\r\n  updateRoadmapEdges,\r\n  updateRoadmap,\r\n} from \"../services/roadmapService\";\r\nimport { getCategories } from \"../services/categoryService\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { ChevronLeft, Save, ArrowLeft, PlusCircle } from \"lucide-react\";\r\nimport { useToast } from \"../components/ui/use-toast\";\r\nimport RoadmapView from \"../components/RoadmapView\";\r\nimport { Input } from \"../components/ui/input\";\r\nimport { Label } from \"../components/ui/label\";\r\nimport { Textarea } from \"../components/ui/textarea\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"../components/ui/select\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../components/ui/card\";\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"../components/ui/tabs\";\r\nimport { typeText } from \"../lib/animations\";\r\nimport { Skeleton } from \"../components/ui/skeleton\";\r\n\r\nexport default function RoadmapEditPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"info\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    difficulty: \"beginner\",\r\n    isPublic: true,\r\n  });\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n\r\n  // Get roadmap data\r\n  const {\r\n    data: roadmap,\r\n    isLoading: isRoadmapLoading,\r\n    error: roadmapError,\r\n  } = useQuery({\r\n    queryKey: [\"roadmap\", id],\r\n    queryFn: () => getRoadmapById(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get roadmap nodes\r\n  const { data: roadmapNodes, isLoading: isNodesLoading } = useQuery({\r\n    queryKey: [\"roadmap-nodes\", id],\r\n    queryFn: () => getRoadmapNodes(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get roadmap edges\r\n  const { data: roadmapEdges, isLoading: isEdgesLoading } = useQuery({\r\n    queryKey: [\"roadmap-edges\", id],\r\n    queryFn: () => getRoadmapEdges(id),\r\n    enabled: !!id,\r\n  });\r\n\r\n  // Get categories for the dropdown\r\n  const { data: categories, isLoading: isCategoriesLoading } = useQuery({\r\n    queryKey: [\"categories\"],\r\n    queryFn: getCategories,\r\n    placeholderData: [\r\n      { id: 1, name: \"Frontend\" },\r\n      { id: 2, name: \"Backend\" },\r\n      { id: 3, name: \"Full Stack\" },\r\n      { id: 4, name: \"DevOps\" },\r\n      { id: 5, name: \"Security\" },\r\n      { id: 6, name: \"Data Science\" },\r\n    ],\r\n  });\r\n\r\n  // Update roadmap mutation\r\n  const updateRoadmapMutation = useMutation({\r\n    mutationFn: (data) => updateRoadmap(id, data),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Roadmap updated\",\r\n        description: \"Your roadmap information has been updated successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap\", id] });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmaps\"] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update roadmap\",\r\n        variant: \"destructive\",\r\n      });\r\n      setIsSubmitting(false);\r\n    },\r\n  });\r\n\r\n  // Update nodes mutation\r\n  const updateNodesMutation = useMutation({\r\n    mutationFn: (nodes) => updateRoadmapNodes(id, nodes),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Nodes updated\",\r\n        description: \"The roadmap nodes have been saved successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-nodes\", id] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update nodes\",\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  // Update edges mutation\r\n  const updateEdgesMutation = useMutation({\r\n    mutationFn: (edges) => updateRoadmapEdges(id, edges),\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Connections updated\",\r\n        description: \"The roadmap connections have been saved successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: [\"roadmap-edges\", id] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update connections\",\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  // Populate form when roadmap data is loaded\r\n  useEffect(() => {\r\n    if (roadmap) {\r\n      setFormData({\r\n        title: roadmap.title || \"\",\r\n        description: roadmap.description || \"\",\r\n        category: roadmap.categoryId?.toString() || \"\",\r\n        difficulty: roadmap.difficulty || \"beginner\",\r\n        isPublic: roadmap.isPublic !== undefined ? roadmap.isPublic : true,\r\n      });\r\n    }\r\n  }, [roadmap]);\r\n\r\n  // Set nodes and edges when they're loaded\r\n  useEffect(() => {\r\n    if (roadmapNodes) {\r\n      setNodes(roadmapNodes);\r\n    }\r\n  }, [roadmapNodes]);\r\n\r\n  useEffect(() => {\r\n    if (roadmapEdges) {\r\n      setEdges(roadmapEdges);\r\n    }\r\n  }, [roadmapEdges]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (name, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    updateRoadmapMutation.mutate(formData);\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  // Handle save of nodes and edges\r\n  const handleSaveRoadmap = () => {\r\n    console.log(\"[SAVE] RoadmapEditPage: Starting manual save process\");\r\n    console.log(\"[SAVE] Current nodes in state:\", nodes.length);\r\n    console.log(\"[SAVE] Current edges in state:\", edges.length);\r\n\r\n    if (nodes.length === 0) {\r\n      console.warn(\r\n        \"[SAVE] Warning: No nodes found in state! Not saving empty nodes.\"\r\n      );\r\n    }\r\n\r\n    // Update form data first\r\n    updateRoadmapMutation.mutate(formData);\r\n\r\n    // Always save nodes and edges, even if empty arrays\r\n    // This ensures we're explicitly sending the current state\r\n    updateNodesMutation.mutate(nodes);\r\n    updateEdgesMutation.mutate(edges);\r\n\r\n    // Add a confirmation toast with count\r\n    toast({\r\n      title: \"Roadmap saved\",\r\n      description: `Saved ${nodes.length} nodes and ${edges.length} edges`,\r\n      variant: \"default\",\r\n    });\r\n  };\r\n\r\n  // Handle internal updates from ReactFlow\r\n  const handleInternalUpdate = useCallback((updatedNodes, updatedEdges) => {\r\n    console.log(\"[INTERNAL] Received nodes update:\", updatedNodes?.length);\r\n    console.log(\"[INTERNAL] Received edges update:\", updatedEdges?.length);\r\n\r\n    if (updatedNodes && Array.isArray(updatedNodes)) {\r\n      setNodes(updatedNodes);\r\n    }\r\n\r\n    if (updatedEdges && Array.isArray(updatedEdges)) {\r\n      setEdges(updatedEdges);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply typing effect to the page title\r\n    typeText(\".edit-roadmap-title\", null, 800);\r\n  }, []);\r\n\r\n  if (roadmapError) {\r\n    return (\r\n      <div className=\"container mx-auto py-8 px-4 text-center\">\r\n        <h2 className=\"text-2xl font-cyber text-cyberpunk-red mb-4\">\r\n          Error Loading Roadmap\r\n        </h2>\r\n        <p className=\"text-gray-400 font-mono-cyber mb-6\">\r\n          {roadmapError.message || \"Failed to load roadmap details\"}\r\n        </p>\r\n        <Button\r\n          onClick={() => navigate(\"/roadmaps\")}\r\n          className=\"bg-purple-600 hover:bg-purple-700 text-white\"\r\n        >\r\n          Return to Roadmaps\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isLoading = isRoadmapLoading || isNodesLoading || isEdgesLoading;\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-4\">\r\n      <div className=\"mb-8\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => navigate(\"/roadmaps\")}\r\n          className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300 mb-4\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n          Back to Roadmaps\r\n        </Button>\r\n        <h1 className=\"text-3xl font-bold font-cyber neon-text edit-roadmap-title\">\r\n          {isRoadmapLoading ? \"Loading...\" : `Edit: ${roadmap?.title}`}\r\n        </h1>\r\n        <p className=\"text-gray-400 font-mono-cyber mt-2\">\r\n          Update your learning path details\r\n        </p>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-xl mb-4 text-purple-300 font-cyber\">Loading</h2>\r\n            <div className=\"spinner mx-auto\"></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"border-purple-500/30 shadow-lg bg-gradient-to-br from-cyberpunk-darker to-cyberpunk-dark rounded-md\">\r\n          <div className=\"p-4 border-b border-purple-500/20\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <h3 className=\"text-xl font-cyber text-purple-300\">\r\n                  Roadmap Content Editor\r\n                </h3>\r\n                <p className=\"font-mono-cyber text-gray-400 text-sm\">\r\n                  Add courses, create connections, and build your learning path\r\n                </p>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={() => navigate(`/roadmaps/${id}`)}\r\n                  className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white\"\r\n                  onClick={() => {\r\n                    updateRoadmapMutation.mutate(formData);\r\n                    handleSaveRoadmap();\r\n                  }}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  {isSubmitting ? \"Saving...\" : \"Save Changes\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"h-[800px]\">\r\n            <RoadmapView\r\n              id={id}\r\n              isEditing={true}\r\n              initialNodes={nodes}\r\n              initialEdges={edges}\r\n              onSave={handleSaveRoadmap}\r\n              onInternalUpdate={handleInternalUpdate}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\CyberPath\\\\it-roadmap\\\\client\\\\src\\\\components\\\\CourseRoadmapEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, Controls, Panel, useNodesState, useEdgesState } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { Button } from \"./ui/button\";\nimport { toast } from \"sonner\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport AddCourseDialog from \"./AddCourseDialog\";\nimport { getCourseRoadmap, saveCourseRoadmap, getRoadmapById } from \"../services/courseRoadmapService\";\nimport CourseNodeComponent from \"./CourseNodeComponent\";\nimport NodeColorPicker from \"./NodeColorPicker\";\nimport NodeActions from \"./NodeActions\";\n\n// Define node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  courseNode: CourseNodeComponent\n};\nexport default function CourseRoadmapEditor({\n  courseId,\n  readOnly = false\n}) {\n  _s();\n  // State for nodes and edges\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [roadmapId, setRoadmapId] = useState(null);\n\n  // State for dialogs\n  const [showAddCourseDialog, setShowAddCourseDialog] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load roadmap data\n  useEffect(() => {\n    const loadRoadmapData = async () => {\n      if (!courseId) return;\n      try {\n        var _result$roadmap, _result$nodes, _result$edges;\n        setIsLoading(true);\n        setError(null);\n        console.log(`Loading roadmap data for course ID: ${courseId}`);\n        const result = await getCourseRoadmap(courseId);\n\n        // Store the roadmap ID for later use\n        if ((_result$roadmap = result.roadmap) !== null && _result$roadmap !== void 0 && _result$roadmap.id) {\n          console.log(`Got roadmap ID: ${result.roadmap.id}`);\n          setRoadmapId(result.roadmap.id);\n        }\n\n        // Set nodes and edges\n        if ((_result$nodes = result.nodes) !== null && _result$nodes !== void 0 && _result$nodes.length) {\n          console.log(`Setting ${result.nodes.length} nodes`);\n          setNodes(result.nodes);\n        }\n        if ((_result$edges = result.edges) !== null && _result$edges !== void 0 && _result$edges.length) {\n          console.log(`Setting ${result.edges.length} edges`);\n          setEdges(result.edges);\n        }\n      } catch (error) {\n        console.error(\"Error loading roadmap:\", error);\n        setError(`Không thể tải dữ liệu lộ trình: ${error.message}`);\n        toast.error(\"Không thể tải dữ liệu lộ trình\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadRoadmapData();\n  }, [courseId, setNodes, setEdges]);\n\n  // Handle node click\n  const onNodeClick = useCallback((event, node) => {\n    if (!editMode) return;\n    setSelectedNode(node);\n  }, [editMode]);\n\n  // Handle adding a node\n  const onAddNode = useCallback(nodeData => {\n    // Create new node\n    const newNode = {\n      id: `node-${Date.now()}`,\n      type: \"courseNode\",\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      data: {\n        ...nodeData,\n        nodeBgColor: nodeData.nodeBgColor || \"#1e1e2f\",\n        nodeColor: nodeData.nodeColor || \"#7c3aed\",\n        textColor: nodeData.textColor || \"#ffffff\"\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n    setShowAddCourseDialog(false);\n    toast.success(\"Đã thêm node mới\");\n  }, [setNodes]);\n\n  // Handle connecting nodes\n  const onConnect = useCallback(params => {\n    if (!editMode) return;\n    setEdges(eds => addEdge({\n      ...params,\n      id: `edge-${Date.now()}`,\n      type: \"smoothstep\",\n      animated: false,\n      style: {\n        stroke: \"#6d28d9\",\n        strokeWidth: 2\n      }\n    }, eds));\n  }, [setEdges, editMode]);\n\n  // Handle node deletion\n  const handleNodeDelete = useCallback(nodeId => {\n    if (!editMode) return;\n    setNodes(nds => nds.filter(node => node.id !== nodeId));\n    setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n    setSelectedNode(null);\n    toast.success(\"Đã xóa node\");\n  }, [setNodes, setEdges]);\n\n  // Handle node update\n  const handleNodeUpdate = useCallback((nodeId, updatedData) => {\n    if (!editMode) return;\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...updatedData\n          }\n        };\n      }\n      return node;\n    }));\n    setSelectedNode(null);\n    toast.success(\"Đã cập nhật node\");\n  }, [setNodes]);\n\n  // Handle node style update\n  const handleNodeStyleUpdate = useCallback((nodeId, styleData) => {\n    if (!editMode) return;\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            ...styleData\n          }\n        };\n      }\n      return node;\n    }));\n  }, [setNodes]);\n\n  // Handle save roadmap\n  const handleSaveRoadmap = useCallback(async () => {\n    if (!courseId) {\n      toast.error(\"ID khóa học không hợp lệ\");\n      return;\n    }\n    try {\n      var _result$nodes2, _result$edges2;\n      // Show loading toast\n      const loadingToastId = toast.loading(\"Đang lưu lộ trình...\");\n      console.log(\"Attempting to save roadmap for course:\", courseId);\n      console.log(\"Nodes to save:\", nodes);\n      console.log(\"Edges to save:\", edges);\n\n      // Validate nodes and edges\n      const validNodes = nodes.filter(node => node.id && node.position);\n      if (validNodes.length < nodes.length) {\n        console.warn(`Found ${nodes.length - validNodes.length} invalid nodes, they will be skipped`);\n      }\n\n      // Ensure every edge has valid source and target\n      const validEdges = edges.filter(edge => edge.source && edge.target);\n      if (validEdges.length < edges.length) {\n        console.warn(`Found ${edges.length - validEdges.length} invalid edges, they will be skipped`);\n      }\n\n      // Save the roadmap data\n      const result = await saveCourseRoadmap(courseId, {\n        nodes: validNodes,\n        edges: validEdges\n      });\n      console.log(\"Save result:\", result);\n\n      // Update roadmap ID if needed\n      if (result.id && result.id !== roadmapId) {\n        console.log(`Updating stored roadmap ID from ${roadmapId} to ${result.id}`);\n        setRoadmapId(result.id);\n      }\n\n      // Update nodes and edges with what was returned from the server\n      if ((_result$nodes2 = result.nodes) !== null && _result$nodes2 !== void 0 && _result$nodes2.length) {\n        console.log(`Updating ${result.nodes.length} nodes after save`);\n        setNodes(result.nodes);\n      }\n      if ((_result$edges2 = result.edges) !== null && _result$edges2 !== void 0 && _result$edges2.length) {\n        console.log(`Updating ${result.edges.length} edges after save`);\n        setEdges(result.edges);\n      }\n\n      // Hide loading toast and show success\n      toast.dismiss(loadingToastId);\n      toast.success(\"Đã lưu lộ trình thành công!\");\n    } catch (error) {\n      console.error(\"Error saving roadmap:\", error);\n\n      // Determine detailed error message\n      let errorDetails = \"\";\n      if (error.response) {\n        var _error$response$data;\n        errorDetails = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `Error ${error.response.status}: ${error.response.statusText}`;\n      } else if (error.message) {\n        errorDetails = error.message;\n      }\n      toast.dismiss();\n      toast.error(`Lỗi khi lưu lộ trình: ${errorDetails}`, {\n        duration: 5000,\n        action: {\n          label: \"Thử lại\",\n          onClick: () => handleSaveRoadmap()\n        }\n      });\n    }\n  }, [courseId, nodes, edges, roadmapId, setNodes, setEdges]);\n\n  // Function to reload the roadmap from the stored ID\n  const reloadRoadmap = useCallback(async () => {\n    if (!roadmapId) {\n      toast.error(\"Không tìm thấy ID lộ trình\");\n      return;\n    }\n    try {\n      var _result$nodes3, _result$edges3;\n      setIsLoading(true);\n      const loadingToastId = toast.loading(\"Đang tải lại lộ trình...\");\n      console.log(`Reloading roadmap with ID: ${roadmapId}`);\n      const result = await getRoadmapById(roadmapId);\n      if ((_result$nodes3 = result.nodes) !== null && _result$nodes3 !== void 0 && _result$nodes3.length) {\n        setNodes(result.nodes);\n      }\n      if ((_result$edges3 = result.edges) !== null && _result$edges3 !== void 0 && _result$edges3.length) {\n        setEdges(result.edges);\n      }\n      toast.dismiss(loadingToastId);\n      toast.success(\"Đã tải lại lộ trình thành công\");\n    } catch (error) {\n      console.error(`Error reloading roadmap ${roadmapId}:`, error);\n      toast.error(`Không thể tải lại lộ trình: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [roadmapId, setNodes, setEdges]);\n\n  // Toggle edit mode\n  const toggleEditMode = useCallback(() => {\n    setEditMode(prev => !prev);\n    setSelectedNode(null);\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: \"\\u0110ang t\\u1EA3i l\\u1ED9 tr\\xECnh...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.location.reload(),\n        className: \"mt-4\",\n        children: \"T\\u1EA3i l\\u1EA1i trang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: editMode ? onNodesChange : undefined,\n      onEdgesChange: editMode ? onEdgesChange : undefined,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4a5568\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), !readOnly && /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-left\",\n        className: \"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleEditMode,\n            variant: editMode ? \"default\" : \"outline\",\n            className: `${editMode ? \"bg-purple-600 hover:bg-purple-700 text-white\" : \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"}`,\n            size: \"sm\",\n            children: editMode ? \"Chế độ chỉnh sửa: BẬT\" : \"Chế độ chỉnh sửa: TẮT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowAddCourseDialog(true),\n              variant: \"outline\",\n              className: \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",\n              size: \"sm\",\n              children: \"Th\\xEAm node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSaveRoadmap,\n              className: \"bg-green-600 hover:bg-green-700 text-white\",\n              size: \"sm\",\n              children: \"L\\u01B0u l\\u1ED9 tr\\xECnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: reloadRoadmap,\n              className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n              size: \"sm\",\n              children: \"T\\u1EA3i l\\u1EA1i l\\u1ED9 tr\\xECnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), editMode && selectedNode && /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-right\",\n        className: \"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-cyberpunk-darker border-purple-500/30\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultValue: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(TabsList, {\n                className: \"bg-cyberpunk-dark grid grid-cols-2 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(TabsTrigger, {\n                  value: \"actions\",\n                  className: \"data-[state=active]:bg-purple-900\",\n                  children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n                  value: \"style\",\n                  className: \"data-[state=active]:bg-purple-900\",\n                  children: \"Ki\\u1EC3u d\\xE1ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n                value: \"actions\",\n                children: /*#__PURE__*/_jsxDEV(NodeActions, {\n                  node: selectedNode,\n                  onUpdate: handleNodeUpdate,\n                  onDelete: handleNodeDelete,\n                  onClose: () => setSelectedNode(null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n                value: \"style\",\n                children: /*#__PURE__*/_jsxDEV(NodeColorPicker, {\n                  node: selectedNode,\n                  onStyleUpdate: handleNodeStyleUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCourseDialog, {\n      open: showAddCourseDialog,\n      onClose: () => setShowAddCourseDialog(false),\n      onAdd: onAddNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseRoadmapEditor, \"1QDVIofYxTPjDz8Et55fDePTmhw=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CourseRoadmapEditor;\nvar _c;\n$RefreshReg$(_c, \"CourseRoadmapEditor\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","addEdge","Background","Controls","Panel","useNodesState","useEdgesState","Button","toast","Card","CardContent","Tabs","TabsContent","TabsList","TabsTrigger","AddCourseDialog","getCourseRoadmap","saveCourseRoadmap","getRoadmapById","CourseNodeComponent","NodeColorPicker","NodeActions","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","courseNode","CourseRoadmapEditor","courseId","readOnly","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","roadmapId","setRoadmapId","showAddCourseDialog","setShowAddCourseDialog","selectedNode","setSelectedNode","editMode","setEditMode","isLoading","setIsLoading","error","setError","loadRoadmapData","_result$roadmap","_result$nodes","_result$edges","console","log","result","roadmap","id","length","message","onNodeClick","event","node","onAddNode","nodeData","newNode","Date","now","type","position","x","Math","random","y","data","nodeBgColor","nodeColor","textColor","nds","concat","success","onConnect","params","eds","animated","style","stroke","strokeWidth","handleNodeDelete","nodeId","filter","edge","source","target","handleNodeUpdate","updatedData","map","handleNodeStyleUpdate","styleData","handleSaveRoadmap","_result$nodes2","_result$edges2","loadingToastId","loading","validNodes","warn","validEdges","dismiss","errorDetails","response","_error$response$data","status","statusText","duration","action","label","onClick","reloadRoadmap","_result$nodes3","_result$edges3","toggleEditMode","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","window","location","reload","undefined","fitView","color","gap","variant","size","defaultValue","value","onUpdate","onDelete","onClose","onStyleUpdate","open","onAdd","_c","$RefreshReg$"],"sources":["D:/CyberPath/it-roadmap/client/src/components/CourseRoadmapEditor.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  Panel,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\nimport { Button } from \"./ui/button\";\r\nimport { toast } from \"sonner\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\r\nimport AddCourseDialog from \"./AddCourseDialog\";\r\nimport {\r\n  getCourseRoadmap,\r\n  saveCourseRoadmap,\r\n  getRoadmapById,\r\n} from \"../services/courseRoadmapService\";\r\nimport CourseNodeComponent from \"./CourseNodeComponent\";\r\nimport NodeColorPicker from \"./NodeColorPicker\";\r\nimport NodeActions from \"./NodeActions\";\r\n\r\n// Define node types\r\nconst nodeTypes = {\r\n  courseNode: CourseNodeComponent,\r\n};\r\n\r\nexport default function CourseRoadmapEditor({ courseId, readOnly = false }) {\r\n  // State for nodes and edges\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [roadmapId, setRoadmapId] = useState(null);\r\n\r\n  // State for dialogs\r\n  const [showAddCourseDialog, setShowAddCourseDialog] = useState(false);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load roadmap data\r\n  useEffect(() => {\r\n    const loadRoadmapData = async () => {\r\n      if (!courseId) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        console.log(`Loading roadmap data for course ID: ${courseId}`);\r\n        const result = await getCourseRoadmap(courseId);\r\n\r\n        // Store the roadmap ID for later use\r\n        if (result.roadmap?.id) {\r\n          console.log(`Got roadmap ID: ${result.roadmap.id}`);\r\n          setRoadmapId(result.roadmap.id);\r\n        }\r\n\r\n        // Set nodes and edges\r\n        if (result.nodes?.length) {\r\n          console.log(`Setting ${result.nodes.length} nodes`);\r\n          setNodes(result.nodes);\r\n        }\r\n\r\n        if (result.edges?.length) {\r\n          console.log(`Setting ${result.edges.length} edges`);\r\n          setEdges(result.edges);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading roadmap:\", error);\r\n        setError(`Không thể tải dữ liệu lộ trình: ${error.message}`);\r\n        toast.error(\"Không thể tải dữ liệu lộ trình\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadRoadmapData();\r\n  }, [courseId, setNodes, setEdges]);\r\n\r\n  // Handle node click\r\n  const onNodeClick = useCallback(\r\n    (event, node) => {\r\n      if (!editMode) return;\r\n      setSelectedNode(node);\r\n    },\r\n    [editMode]\r\n  );\r\n\r\n  // Handle adding a node\r\n  const onAddNode = useCallback(\r\n    (nodeData) => {\r\n      // Create new node\r\n      const newNode = {\r\n        id: `node-${Date.now()}`,\r\n        type: \"courseNode\",\r\n        position: {\r\n          x: Math.random() * 400,\r\n          y: Math.random() * 400,\r\n        },\r\n        data: {\r\n          ...nodeData,\r\n          nodeBgColor: nodeData.nodeBgColor || \"#1e1e2f\",\r\n          nodeColor: nodeData.nodeColor || \"#7c3aed\",\r\n          textColor: nodeData.textColor || \"#ffffff\",\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setShowAddCourseDialog(false);\r\n      toast.success(\"Đã thêm node mới\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle connecting nodes\r\n  const onConnect = useCallback(\r\n    (params) => {\r\n      if (!editMode) return;\r\n\r\n      setEdges((eds) =>\r\n        addEdge(\r\n          {\r\n            ...params,\r\n            id: `edge-${Date.now()}`,\r\n            type: \"smoothstep\",\r\n            animated: false,\r\n            style: { stroke: \"#6d28d9\", strokeWidth: 2 },\r\n          },\r\n          eds\r\n        )\r\n      );\r\n    },\r\n    [setEdges, editMode]\r\n  );\r\n\r\n  // Handle node deletion\r\n  const handleNodeDelete = useCallback(\r\n    (nodeId) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Đã xóa node\");\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Handle node update\r\n  const handleNodeUpdate = useCallback(\r\n    (nodeId, updatedData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...updatedData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Đã cập nhật node\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle node style update\r\n  const handleNodeStyleUpdate = useCallback(\r\n    (nodeId, styleData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...styleData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle save roadmap\r\n  const handleSaveRoadmap = useCallback(async () => {\r\n    if (!courseId) {\r\n      toast.error(\"ID khóa học không hợp lệ\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show loading toast\r\n      const loadingToastId = toast.loading(\"Đang lưu lộ trình...\");\r\n\r\n      console.log(\"Attempting to save roadmap for course:\", courseId);\r\n      console.log(\"Nodes to save:\", nodes);\r\n      console.log(\"Edges to save:\", edges);\r\n\r\n      // Validate nodes and edges\r\n      const validNodes = nodes.filter((node) => node.id && node.position);\r\n      if (validNodes.length < nodes.length) {\r\n        console.warn(\r\n          `Found ${\r\n            nodes.length - validNodes.length\r\n          } invalid nodes, they will be skipped`\r\n        );\r\n      }\r\n\r\n      // Ensure every edge has valid source and target\r\n      const validEdges = edges.filter((edge) => edge.source && edge.target);\r\n      if (validEdges.length < edges.length) {\r\n        console.warn(\r\n          `Found ${\r\n            edges.length - validEdges.length\r\n          } invalid edges, they will be skipped`\r\n        );\r\n      }\r\n\r\n      // Save the roadmap data\r\n      const result = await saveCourseRoadmap(courseId, {\r\n        nodes: validNodes,\r\n        edges: validEdges,\r\n      });\r\n\r\n      console.log(\"Save result:\", result);\r\n\r\n      // Update roadmap ID if needed\r\n      if (result.id && result.id !== roadmapId) {\r\n        console.log(\r\n          `Updating stored roadmap ID from ${roadmapId} to ${result.id}`\r\n        );\r\n        setRoadmapId(result.id);\r\n      }\r\n\r\n      // Update nodes and edges with what was returned from the server\r\n      if (result.nodes?.length) {\r\n        console.log(`Updating ${result.nodes.length} nodes after save`);\r\n        setNodes(result.nodes);\r\n      }\r\n      if (result.edges?.length) {\r\n        console.log(`Updating ${result.edges.length} edges after save`);\r\n        setEdges(result.edges);\r\n      }\r\n\r\n      // Hide loading toast and show success\r\n      toast.dismiss(loadingToastId);\r\n      toast.success(\"Đã lưu lộ trình thành công!\");\r\n    } catch (error) {\r\n      console.error(\"Error saving roadmap:\", error);\r\n\r\n      // Determine detailed error message\r\n      let errorDetails = \"\";\r\n      if (error.response) {\r\n        errorDetails =\r\n          error.response.data?.message ||\r\n          `Error ${error.response.status}: ${error.response.statusText}`;\r\n      } else if (error.message) {\r\n        errorDetails = error.message;\r\n      }\r\n\r\n      toast.dismiss();\r\n      toast.error(`Lỗi khi lưu lộ trình: ${errorDetails}`, {\r\n        duration: 5000,\r\n        action: {\r\n          label: \"Thử lại\",\r\n          onClick: () => handleSaveRoadmap(),\r\n        },\r\n      });\r\n    }\r\n  }, [courseId, nodes, edges, roadmapId, setNodes, setEdges]);\r\n\r\n  // Function to reload the roadmap from the stored ID\r\n  const reloadRoadmap = useCallback(async () => {\r\n    if (!roadmapId) {\r\n      toast.error(\"Không tìm thấy ID lộ trình\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const loadingToastId = toast.loading(\"Đang tải lại lộ trình...\");\r\n\r\n      console.log(`Reloading roadmap with ID: ${roadmapId}`);\r\n      const result = await getRoadmapById(roadmapId);\r\n\r\n      if (result.nodes?.length) {\r\n        setNodes(result.nodes);\r\n      }\r\n      if (result.edges?.length) {\r\n        setEdges(result.edges);\r\n      }\r\n\r\n      toast.dismiss(loadingToastId);\r\n      toast.success(\"Đã tải lại lộ trình thành công\");\r\n    } catch (error) {\r\n      console.error(`Error reloading roadmap ${roadmapId}:`, error);\r\n      toast.error(`Không thể tải lại lộ trình: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [roadmapId, setNodes, setEdges]);\r\n\r\n  // Toggle edit mode\r\n  const toggleEditMode = useCallback(() => {\r\n    setEditMode((prev) => !prev);\r\n    setSelectedNode(null);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        Đang tải lộ trình...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-full\">\r\n        <p className=\"text-red-500\">{error}</p>\r\n        <Button onClick={() => window.location.reload()} className=\"mt-4\">\r\n          Tải lại trang\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={editMode ? onNodesChange : undefined}\r\n        onEdgesChange={editMode ? onEdgesChange : undefined}\r\n        onConnect={onConnect}\r\n        onNodeClick={onNodeClick}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n      >\r\n        <Background color=\"#4a5568\" gap={16} />\r\n        <Controls />\r\n\r\n        {/* Editor Panels */}\r\n        {!readOnly && (\r\n          <Panel\r\n            position=\"top-left\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <div className=\"flex flex-col gap-2\">\r\n              <Button\r\n                onClick={toggleEditMode}\r\n                variant={editMode ? \"default\" : \"outline\"}\r\n                className={`${\r\n                  editMode\r\n                    ? \"bg-purple-600 hover:bg-purple-700 text-white\"\r\n                    : \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                }`}\r\n                size=\"sm\"\r\n              >\r\n                {editMode ? \"Chế độ chỉnh sửa: BẬT\" : \"Chế độ chỉnh sửa: TẮT\"}\r\n              </Button>\r\n\r\n              {editMode && (\r\n                <>\r\n                  <Button\r\n                    onClick={() => setShowAddCourseDialog(true)}\r\n                    variant=\"outline\"\r\n                    className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Thêm node\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={handleSaveRoadmap}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Lưu lộ trình\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={reloadRoadmap}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Tải lại lộ trình\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Panel>\r\n        )}\r\n\r\n        {/* Node actions panel when a node is selected */}\r\n        {editMode && selectedNode && (\r\n          <Panel\r\n            position=\"top-right\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <Card className=\"bg-cyberpunk-darker border-purple-500/30\">\r\n              <CardContent className=\"p-4\">\r\n                <Tabs defaultValue=\"actions\">\r\n                  <TabsList className=\"bg-cyberpunk-dark grid grid-cols-2 mb-4\">\r\n                    <TabsTrigger\r\n                      value=\"actions\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Hoạt động\r\n                    </TabsTrigger>\r\n                    <TabsTrigger\r\n                      value=\"style\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Kiểu dáng\r\n                    </TabsTrigger>\r\n                  </TabsList>\r\n\r\n                  <TabsContent value=\"actions\">\r\n                    <NodeActions\r\n                      node={selectedNode}\r\n                      onUpdate={handleNodeUpdate}\r\n                      onDelete={handleNodeDelete}\r\n                      onClose={() => setSelectedNode(null)}\r\n                    />\r\n                  </TabsContent>\r\n\r\n                  <TabsContent value=\"style\">\r\n                    <NodeColorPicker\r\n                      node={selectedNode}\r\n                      onStyleUpdate={handleNodeStyleUpdate}\r\n                    />\r\n                  </TabsContent>\r\n                </Tabs>\r\n              </CardContent>\r\n            </Card>\r\n          </Panel>\r\n        )}\r\n      </ReactFlow>\r\n\r\n      {/* Add Course Dialog */}\r\n      <AddCourseDialog\r\n        open={showAddCourseDialog}\r\n        onClose={() => setShowAddCourseDialog(false)}\r\n        onAdd={onAddNode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
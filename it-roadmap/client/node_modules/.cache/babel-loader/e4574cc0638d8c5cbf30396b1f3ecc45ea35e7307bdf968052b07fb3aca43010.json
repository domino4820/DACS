{"ast":null,"code":"import api from\"./api\";// Get all courses\nexport const getCourses=async()=>{const response=await api.get(\"/courses\");return response.data;};// Get course by ID\nexport const getCourseById=async id=>{const response=await api.get(\"/courses/\".concat(id));return response.data;};// Create new course\nexport const createCourse=async courseData=>{const response=await api.post(\"/courses\",courseData);return response.data;};// Update course\nexport const updateCourse=async(id,courseData)=>{const response=await api.put(\"/courses/\".concat(id),courseData);return response.data;};// Delete course\nexport const deleteCourse=async id=>{const response=await api.delete(\"/courses/\".concat(id));return response.data;};// Toggle course completion\nexport const toggleCourseCompletion=async(id,completed)=>{const response=await api.post(\"/courses/\".concat(id,\"/complete\"),{completed});return response.data;};// Get course nodes\nexport const getCourseNodes=async id=>{const response=await api.get(\"/courses/\".concat(id,\"/nodes\"));return response.data;};// Update course nodes\nexport const updateCourseNodes=async(id,nodes)=>{const response=await api.put(\"/courses/\".concat(id,\"/nodes\"),{nodes});return response.data;};// Get course edges\nexport const getCourseEdges=async id=>{const response=await api.get(\"/courses/\".concat(id,\"/edges\"));return response.data;};// Update course edges\nexport const updateCourseEdges=async(id,edges)=>{const response=await api.put(\"/courses/\".concat(id,\"/edges\"),{edges});return response.data;};","map":{"version":3,"names":["api","getCourses","response","get","data","getCourseById","id","concat","createCourse","courseData","post","updateCourse","put","deleteCourse","delete","toggleCourseCompletion","completed","getCourseNodes","updateCourseNodes","nodes","getCourseEdges","updateCourseEdges","edges"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/services/courseService.js"],"sourcesContent":["import api from \"./api\";\r\n\r\n// Get all courses\r\nexport const getCourses = async () => {\r\n  const response = await api.get(\"/courses\");\r\n  return response.data;\r\n};\r\n\r\n// Get course by ID\r\nexport const getCourseById = async (id) => {\r\n  const response = await api.get(`/courses/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Create new course\r\nexport const createCourse = async (courseData) => {\r\n  const response = await api.post(\"/courses\", courseData);\r\n  return response.data;\r\n};\r\n\r\n// Update course\r\nexport const updateCourse = async (id, courseData) => {\r\n  const response = await api.put(`/courses/${id}`, courseData);\r\n  return response.data;\r\n};\r\n\r\n// Delete course\r\nexport const deleteCourse = async (id) => {\r\n  const response = await api.delete(`/courses/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Toggle course completion\r\nexport const toggleCourseCompletion = async (id, completed) => {\r\n  const response = await api.post(`/courses/${id}/complete`, { completed });\r\n  return response.data;\r\n};\r\n\r\n// Get course nodes\r\nexport const getCourseNodes = async (id) => {\r\n  const response = await api.get(`/courses/${id}/nodes`);\r\n  return response.data;\r\n};\r\n\r\n// Update course nodes\r\nexport const updateCourseNodes = async (id, nodes) => {\r\n  const response = await api.put(`/courses/${id}/nodes`, { nodes });\r\n  return response.data;\r\n};\r\n\r\n// Get course edges\r\nexport const getCourseEdges = async (id) => {\r\n  const response = await api.get(`/courses/${id}/edges`);\r\n  return response.data;\r\n};\r\n\r\n// Update course edges\r\nexport const updateCourseEdges = async (id, edges) => {\r\n  const response = await api.put(`/courses/${id}/edges`, { edges });\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAAC,UAAU,CAAC,CAC1C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,EAAE,EAAK,CACzC,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,aAAAI,MAAA,CAAaD,EAAE,CAAE,CAAC,CAChD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,YAAY,CAAG,KAAO,CAAAC,UAAU,EAAK,CAChD,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACU,IAAI,CAAC,UAAU,CAAED,UAAU,CAAC,CACvD,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,YAAY,CAAG,KAAAA,CAAOL,EAAE,CAAEG,UAAU,GAAK,CACpD,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACY,GAAG,aAAAL,MAAA,CAAaD,EAAE,EAAIG,UAAU,CAAC,CAC5D,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,YAAY,CAAG,KAAO,CAAAP,EAAE,EAAK,CACxC,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACc,MAAM,aAAAP,MAAA,CAAaD,EAAE,CAAE,CAAC,CACnD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAW,sBAAsB,CAAG,KAAAA,CAAOT,EAAE,CAAEU,SAAS,GAAK,CAC7D,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACU,IAAI,aAAAH,MAAA,CAAaD,EAAE,cAAa,CAAEU,SAAU,CAAC,CAAC,CACzE,MAAO,CAAAd,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,cAAc,CAAG,KAAO,CAAAX,EAAE,EAAK,CAC1C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,aAAAI,MAAA,CAAaD,EAAE,UAAQ,CAAC,CACtD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,iBAAiB,CAAG,KAAAA,CAAOZ,EAAE,CAAEa,KAAK,GAAK,CACpD,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACY,GAAG,aAAAL,MAAA,CAAaD,EAAE,WAAU,CAAEa,KAAM,CAAC,CAAC,CACjE,MAAO,CAAAjB,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,cAAc,CAAG,KAAO,CAAAd,EAAE,EAAK,CAC1C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,aAAAI,MAAA,CAAaD,EAAE,UAAQ,CAAC,CACtD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAiB,iBAAiB,CAAG,KAAAA,CAAOf,EAAE,CAAEgB,KAAK,GAAK,CACpD,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACY,GAAG,aAAAL,MAAA,CAAaD,EAAE,WAAU,CAAEgB,KAAM,CAAC,CAAC,CACjE,MAAO,CAAApB,QAAQ,CAACE,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
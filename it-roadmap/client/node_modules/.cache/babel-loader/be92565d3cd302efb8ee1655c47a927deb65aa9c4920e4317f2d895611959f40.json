{"ast":null,"code":"import _objectSpread from\"D:/CyberPath/it-roadmap/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useEffect}from\"react\";import ReactFlow,{addEdge,Background,Controls,Panel,useNodesState,useEdgesState}from\"reactflow\";import\"reactflow/dist/style.css\";import{Button}from\"./ui/button\";import{toast}from\"sonner\";import{Card,CardContent}from\"./ui/card\";import{Tabs,TabsContent,TabsList,TabsTrigger}from\"./ui/tabs\";import AddCourseDialog from\"./AddCourseDialog\";import{getCourseRoadmap,saveCourseRoadmap,getRoadmapById}from\"../services/courseRoadmapService\";import CourseNodeComponent from\"./CourseNodeComponent\";import NodeColorPicker from\"./NodeColorPicker\";import NodeActions from\"./NodeActions\";// Define node types\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const nodeTypes={courseNode:CourseNodeComponent};export default function CourseRoadmapEditor(_ref){let{courseId,readOnly=false}=_ref;// State for nodes and edges\nconst[nodes,setNodes,onNodesChange]=useNodesState([]);const[edges,setEdges,onEdgesChange]=useEdgesState([]);const[roadmapId,setRoadmapId]=useState(null);// State for dialogs\nconst[showAddCourseDialog,setShowAddCourseDialog]=useState(false);const[selectedNode,setSelectedNode]=useState(null);const[editMode,setEditMode]=useState(false);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);// Load roadmap data\nuseEffect(()=>{const loadRoadmapData=async()=>{if(!courseId)return;try{var _result$roadmap,_result$nodes,_result$edges;setIsLoading(true);setError(null);console.log(\"Loading roadmap data for course ID: \".concat(courseId));const result=await getCourseRoadmap(courseId);// Store the roadmap ID for later use\nif((_result$roadmap=result.roadmap)!==null&&_result$roadmap!==void 0&&_result$roadmap.id){console.log(\"Got roadmap ID: \".concat(result.roadmap.id));setRoadmapId(result.roadmap.id);}// Set nodes and edges\nif((_result$nodes=result.nodes)!==null&&_result$nodes!==void 0&&_result$nodes.length){console.log(\"Setting \".concat(result.nodes.length,\" nodes\"));setNodes(result.nodes);}if((_result$edges=result.edges)!==null&&_result$edges!==void 0&&_result$edges.length){console.log(\"Setting \".concat(result.edges.length,\" edges\"));setEdges(result.edges);}}catch(error){console.error(\"Error loading roadmap:\",error);setError(\"Kh\\xF4ng th\\u1EC3 t\\u1EA3i d\\u1EEF li\\u1EC7u l\\u1ED9 tr\\xECnh: \".concat(error.message));toast.error(\"Không thể tải dữ liệu lộ trình\");}finally{setIsLoading(false);}};loadRoadmapData();},[courseId,setNodes,setEdges]);// Handle node click\nconst onNodeClick=useCallback((event,node)=>{if(!editMode)return;setSelectedNode(node);},[editMode]);// Handle adding a node\nconst onAddNode=useCallback(nodeData=>{// Create new node\nconst newNode={id:\"node-\".concat(Date.now()),type:\"courseNode\",position:{x:Math.random()*400,y:Math.random()*400},data:_objectSpread(_objectSpread({},nodeData),{},{nodeBgColor:nodeData.nodeBgColor||\"#1e1e2f\",nodeColor:nodeData.nodeColor||\"#7c3aed\",textColor:nodeData.textColor||\"#ffffff\"})};setNodes(nds=>nds.concat(newNode));setShowAddCourseDialog(false);toast.success(\"Đã thêm node mới\");},[setNodes]);// Handle connecting nodes\nconst onConnect=useCallback(params=>{if(!editMode)return;setEdges(eds=>addEdge(_objectSpread(_objectSpread({},params),{},{id:\"edge-\".concat(Date.now()),type:\"smoothstep\",animated:false,style:{stroke:\"#6d28d9\",strokeWidth:2}}),eds));},[setEdges,editMode]);// Handle node deletion\nconst handleNodeDelete=useCallback(nodeId=>{if(!editMode)return;setNodes(nds=>nds.filter(node=>node.id!==nodeId));setEdges(eds=>eds.filter(edge=>edge.source!==nodeId&&edge.target!==nodeId));setSelectedNode(null);toast.success(\"Đã xóa node\");},[setNodes,setEdges]);// Handle node update\nconst handleNodeUpdate=useCallback((nodeId,updatedData)=>{if(!editMode)return;setNodes(nds=>nds.map(node=>{if(node.id===nodeId){return _objectSpread(_objectSpread({},node),{},{data:_objectSpread(_objectSpread({},node.data),updatedData)});}return node;}));setSelectedNode(null);toast.success(\"Đã cập nhật node\");},[setNodes]);// Handle node style update\nconst handleNodeStyleUpdate=useCallback((nodeId,styleData)=>{if(!editMode)return;setNodes(nds=>nds.map(node=>{if(node.id===nodeId){return _objectSpread(_objectSpread({},node),{},{data:_objectSpread(_objectSpread({},node.data),styleData)});}return node;}));},[setNodes]);// Handle save roadmap\nconst handleSaveRoadmap=useCallback(async()=>{if(!courseId){toast.error(\"ID khóa học không hợp lệ\");return;}try{var _result$nodes2,_result$edges2;// Show loading toast\nconst loadingToastId=toast.loading(\"Đang lưu lộ trình...\");console.log(\"Attempting to save roadmap for course:\",courseId);console.log(\"Nodes to save:\",nodes);console.log(\"Edges to save:\",edges);// Validate nodes and edges\nconst validNodes=nodes.filter(node=>node.id&&node.position);if(validNodes.length<nodes.length){console.warn(\"Found \".concat(nodes.length-validNodes.length,\" invalid nodes, they will be skipped\"));}// Ensure every edge has valid source and target\nconst validEdges=edges.filter(edge=>edge.source&&edge.target);if(validEdges.length<edges.length){console.warn(\"Found \".concat(edges.length-validEdges.length,\" invalid edges, they will be skipped\"));}// Save the roadmap data\nconst result=await saveCourseRoadmap(courseId,{nodes:validNodes,edges:validEdges});console.log(\"Save result:\",result);// Update roadmap ID if needed\nif(result.id&&result.id!==roadmapId){console.log(\"Updating stored roadmap ID from \".concat(roadmapId,\" to \").concat(result.id));setRoadmapId(result.id);}// Update nodes and edges with what was returned from the server\nif((_result$nodes2=result.nodes)!==null&&_result$nodes2!==void 0&&_result$nodes2.length){console.log(\"Updating \".concat(result.nodes.length,\" nodes after save\"));setNodes(result.nodes);}if((_result$edges2=result.edges)!==null&&_result$edges2!==void 0&&_result$edges2.length){console.log(\"Updating \".concat(result.edges.length,\" edges after save\"));setEdges(result.edges);}// Hide loading toast and show success\ntoast.dismiss(loadingToastId);toast.success(\"Đã lưu lộ trình thành công!\");}catch(error){console.error(\"Error saving roadmap:\",error);// Determine detailed error message\nlet errorDetails=\"\";if(error.response){var _error$response$data;errorDetails=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Error \".concat(error.response.status,\": \").concat(error.response.statusText);}else if(error.message){errorDetails=error.message;}toast.dismiss();toast.error(\"L\\u1ED7i khi l\\u01B0u l\\u1ED9 tr\\xECnh: \".concat(errorDetails),{duration:5000,action:{label:\"Thử lại\",onClick:()=>handleSaveRoadmap()}});}},[courseId,nodes,edges,roadmapId,setNodes,setEdges]);// Function to reload the roadmap from the stored ID\nconst reloadRoadmap=useCallback(async()=>{if(!roadmapId){toast.error(\"Không tìm thấy ID lộ trình\");return;}try{var _result$nodes3,_result$edges3;setIsLoading(true);const loadingToastId=toast.loading(\"Đang tải lại lộ trình...\");console.log(\"Reloading roadmap with ID: \".concat(roadmapId));const result=await getRoadmapById(roadmapId);if((_result$nodes3=result.nodes)!==null&&_result$nodes3!==void 0&&_result$nodes3.length){setNodes(result.nodes);}if((_result$edges3=result.edges)!==null&&_result$edges3!==void 0&&_result$edges3.length){setEdges(result.edges);}toast.dismiss(loadingToastId);toast.success(\"Đã tải lại lộ trình thành công\");}catch(error){console.error(\"Error reloading roadmap \".concat(roadmapId,\":\"),error);toast.error(\"Kh\\xF4ng th\\u1EC3 t\\u1EA3i l\\u1EA1i l\\u1ED9 tr\\xECnh: \".concat(error.message));}finally{setIsLoading(false);}},[roadmapId,setNodes,setEdges]);// Toggle edit mode\nconst toggleEditMode=useCallback(()=>{setEditMode(prev=>!prev);setSelectedNode(null);},[]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:\"\\u0110ang t\\u1EA3i l\\u1ED9 tr\\xECnh...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-full\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:error}),/*#__PURE__*/_jsx(Button,{onClick:()=>window.location.reload(),className:\"mt-4\",children:\"T\\u1EA3i l\\u1EA1i trang\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"h-full flex flex-col\",children:[/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:editMode?onNodesChange:undefined,onEdgesChange:editMode?onEdgesChange:undefined,onConnect:onConnect,onNodeClick:onNodeClick,nodeTypes:nodeTypes,fitView:true,children:[/*#__PURE__*/_jsx(Background,{color:\"#4a5568\",gap:16}),/*#__PURE__*/_jsx(Controls,{}),!readOnly&&/*#__PURE__*/_jsx(Panel,{position:\"top-left\",className:\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:toggleEditMode,variant:editMode?\"default\":\"outline\",className:\"\".concat(editMode?\"bg-purple-600 hover:bg-purple-700 text-white\":\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"),size:\"sm\",children:editMode?\"Chế độ chỉnh sửa: BẬT\":\"Chế độ chỉnh sửa: TẮT\"}),editMode&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowAddCourseDialog(true),variant:\"outline\",className:\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\",size:\"sm\",children:\"Th\\xEAm node\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSaveRoadmap,className:\"bg-green-600 hover:bg-green-700 text-white\",size:\"sm\",children:\"L\\u01B0u l\\u1ED9 tr\\xECnh\"}),/*#__PURE__*/_jsx(Button,{onClick:reloadRoadmap,className:\"bg-blue-600 hover:bg-blue-700 text-white\",size:\"sm\",children:\"T\\u1EA3i l\\u1EA1i l\\u1ED9 tr\\xECnh\"})]})]})}),editMode&&selectedNode&&/*#__PURE__*/_jsx(Panel,{position:\"top-right\",className:\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\",children:/*#__PURE__*/_jsx(Card,{className:\"bg-cyberpunk-darker border-purple-500/30\",children:/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsxs(Tabs,{defaultValue:\"actions\",children:[/*#__PURE__*/_jsxs(TabsList,{className:\"bg-cyberpunk-dark grid grid-cols-2 mb-4\",children:[/*#__PURE__*/_jsx(TabsTrigger,{value:\"actions\",className:\"data-[state=active]:bg-purple-900\",children:\"Ho\\u1EA1t \\u0111\\u1ED9ng\"}),/*#__PURE__*/_jsx(TabsTrigger,{value:\"style\",className:\"data-[state=active]:bg-purple-900\",children:\"Ki\\u1EC3u d\\xE1ng\"})]}),/*#__PURE__*/_jsx(TabsContent,{value:\"actions\",children:/*#__PURE__*/_jsx(NodeActions,{node:selectedNode,onUpdate:handleNodeUpdate,onDelete:handleNodeDelete,onClose:()=>setSelectedNode(null)})}),/*#__PURE__*/_jsx(TabsContent,{value:\"style\",children:/*#__PURE__*/_jsx(NodeColorPicker,{node:selectedNode,onStyleUpdate:handleNodeStyleUpdate})})]})})})})]}),/*#__PURE__*/_jsx(AddCourseDialog,{open:showAddCourseDialog,onClose:()=>setShowAddCourseDialog(false),onAdd:onAddNode})]});}","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","addEdge","Background","Controls","Panel","useNodesState","useEdgesState","Button","toast","Card","CardContent","Tabs","TabsContent","TabsList","TabsTrigger","AddCourseDialog","getCourseRoadmap","saveCourseRoadmap","getRoadmapById","CourseNodeComponent","NodeColorPicker","NodeActions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","nodeTypes","courseNode","CourseRoadmapEditor","_ref","courseId","readOnly","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","roadmapId","setRoadmapId","showAddCourseDialog","setShowAddCourseDialog","selectedNode","setSelectedNode","editMode","setEditMode","isLoading","setIsLoading","error","setError","loadRoadmapData","_result$roadmap","_result$nodes","_result$edges","console","log","concat","result","roadmap","id","length","message","onNodeClick","event","node","onAddNode","nodeData","newNode","Date","now","type","position","x","Math","random","y","data","_objectSpread","nodeBgColor","nodeColor","textColor","nds","success","onConnect","params","eds","animated","style","stroke","strokeWidth","handleNodeDelete","nodeId","filter","edge","source","target","handleNodeUpdate","updatedData","map","handleNodeStyleUpdate","styleData","handleSaveRoadmap","_result$nodes2","_result$edges2","loadingToastId","loading","validNodes","warn","validEdges","dismiss","errorDetails","response","_error$response$data","status","statusText","duration","action","label","onClick","reloadRoadmap","_result$nodes3","_result$edges3","toggleEditMode","prev","className","children","window","location","reload","undefined","fitView","color","gap","variant","size","defaultValue","value","onUpdate","onDelete","onClose","onStyleUpdate","open","onAdd"],"sources":["D:/CyberPath/it-roadmap/client/src/components/CourseRoadmapEditor.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  Panel,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\nimport { Button } from \"./ui/button\";\r\nimport { toast } from \"sonner\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\r\nimport AddCourseDialog from \"./AddCourseDialog\";\r\nimport {\r\n  getCourseRoadmap,\r\n  saveCourseRoadmap,\r\n  getRoadmapById,\r\n} from \"../services/courseRoadmapService\";\r\nimport CourseNodeComponent from \"./CourseNodeComponent\";\r\nimport NodeColorPicker from \"./NodeColorPicker\";\r\nimport NodeActions from \"./NodeActions\";\r\n\r\n// Define node types\r\nconst nodeTypes = {\r\n  courseNode: CourseNodeComponent,\r\n};\r\n\r\nexport default function CourseRoadmapEditor({ courseId, readOnly = false }) {\r\n  // State for nodes and edges\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [roadmapId, setRoadmapId] = useState(null);\r\n\r\n  // State for dialogs\r\n  const [showAddCourseDialog, setShowAddCourseDialog] = useState(false);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load roadmap data\r\n  useEffect(() => {\r\n    const loadRoadmapData = async () => {\r\n      if (!courseId) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        console.log(`Loading roadmap data for course ID: ${courseId}`);\r\n        const result = await getCourseRoadmap(courseId);\r\n\r\n        // Store the roadmap ID for later use\r\n        if (result.roadmap?.id) {\r\n          console.log(`Got roadmap ID: ${result.roadmap.id}`);\r\n          setRoadmapId(result.roadmap.id);\r\n        }\r\n\r\n        // Set nodes and edges\r\n        if (result.nodes?.length) {\r\n          console.log(`Setting ${result.nodes.length} nodes`);\r\n          setNodes(result.nodes);\r\n        }\r\n\r\n        if (result.edges?.length) {\r\n          console.log(`Setting ${result.edges.length} edges`);\r\n          setEdges(result.edges);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading roadmap:\", error);\r\n        setError(`Không thể tải dữ liệu lộ trình: ${error.message}`);\r\n        toast.error(\"Không thể tải dữ liệu lộ trình\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadRoadmapData();\r\n  }, [courseId, setNodes, setEdges]);\r\n\r\n  // Handle node click\r\n  const onNodeClick = useCallback(\r\n    (event, node) => {\r\n      if (!editMode) return;\r\n      setSelectedNode(node);\r\n    },\r\n    [editMode]\r\n  );\r\n\r\n  // Handle adding a node\r\n  const onAddNode = useCallback(\r\n    (nodeData) => {\r\n      // Create new node\r\n      const newNode = {\r\n        id: `node-${Date.now()}`,\r\n        type: \"courseNode\",\r\n        position: {\r\n          x: Math.random() * 400,\r\n          y: Math.random() * 400,\r\n        },\r\n        data: {\r\n          ...nodeData,\r\n          nodeBgColor: nodeData.nodeBgColor || \"#1e1e2f\",\r\n          nodeColor: nodeData.nodeColor || \"#7c3aed\",\r\n          textColor: nodeData.textColor || \"#ffffff\",\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setShowAddCourseDialog(false);\r\n      toast.success(\"Đã thêm node mới\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle connecting nodes\r\n  const onConnect = useCallback(\r\n    (params) => {\r\n      if (!editMode) return;\r\n\r\n      setEdges((eds) =>\r\n        addEdge(\r\n          {\r\n            ...params,\r\n            id: `edge-${Date.now()}`,\r\n            type: \"smoothstep\",\r\n            animated: false,\r\n            style: { stroke: \"#6d28d9\", strokeWidth: 2 },\r\n          },\r\n          eds\r\n        )\r\n      );\r\n    },\r\n    [setEdges, editMode]\r\n  );\r\n\r\n  // Handle node deletion\r\n  const handleNodeDelete = useCallback(\r\n    (nodeId) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n      setEdges((eds) =>\r\n        eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Đã xóa node\");\r\n    },\r\n    [setNodes, setEdges]\r\n  );\r\n\r\n  // Handle node update\r\n  const handleNodeUpdate = useCallback(\r\n    (nodeId, updatedData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...updatedData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n\r\n      setSelectedNode(null);\r\n      toast.success(\"Đã cập nhật node\");\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle node style update\r\n  const handleNodeStyleUpdate = useCallback(\r\n    (nodeId, styleData) => {\r\n      if (!editMode) return;\r\n\r\n      setNodes((nds) =>\r\n        nds.map((node) => {\r\n          if (node.id === nodeId) {\r\n            return {\r\n              ...node,\r\n              data: {\r\n                ...node.data,\r\n                ...styleData,\r\n              },\r\n            };\r\n          }\r\n          return node;\r\n        })\r\n      );\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  // Handle save roadmap\r\n  const handleSaveRoadmap = useCallback(async () => {\r\n    if (!courseId) {\r\n      toast.error(\"ID khóa học không hợp lệ\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show loading toast\r\n      const loadingToastId = toast.loading(\"Đang lưu lộ trình...\");\r\n\r\n      console.log(\"Attempting to save roadmap for course:\", courseId);\r\n      console.log(\"Nodes to save:\", nodes);\r\n      console.log(\"Edges to save:\", edges);\r\n\r\n      // Validate nodes and edges\r\n      const validNodes = nodes.filter((node) => node.id && node.position);\r\n      if (validNodes.length < nodes.length) {\r\n        console.warn(\r\n          `Found ${\r\n            nodes.length - validNodes.length\r\n          } invalid nodes, they will be skipped`\r\n        );\r\n      }\r\n\r\n      // Ensure every edge has valid source and target\r\n      const validEdges = edges.filter((edge) => edge.source && edge.target);\r\n      if (validEdges.length < edges.length) {\r\n        console.warn(\r\n          `Found ${\r\n            edges.length - validEdges.length\r\n          } invalid edges, they will be skipped`\r\n        );\r\n      }\r\n\r\n      // Save the roadmap data\r\n      const result = await saveCourseRoadmap(courseId, {\r\n        nodes: validNodes,\r\n        edges: validEdges,\r\n      });\r\n\r\n      console.log(\"Save result:\", result);\r\n\r\n      // Update roadmap ID if needed\r\n      if (result.id && result.id !== roadmapId) {\r\n        console.log(\r\n          `Updating stored roadmap ID from ${roadmapId} to ${result.id}`\r\n        );\r\n        setRoadmapId(result.id);\r\n      }\r\n\r\n      // Update nodes and edges with what was returned from the server\r\n      if (result.nodes?.length) {\r\n        console.log(`Updating ${result.nodes.length} nodes after save`);\r\n        setNodes(result.nodes);\r\n      }\r\n      if (result.edges?.length) {\r\n        console.log(`Updating ${result.edges.length} edges after save`);\r\n        setEdges(result.edges);\r\n      }\r\n\r\n      // Hide loading toast and show success\r\n      toast.dismiss(loadingToastId);\r\n      toast.success(\"Đã lưu lộ trình thành công!\");\r\n    } catch (error) {\r\n      console.error(\"Error saving roadmap:\", error);\r\n\r\n      // Determine detailed error message\r\n      let errorDetails = \"\";\r\n      if (error.response) {\r\n        errorDetails =\r\n          error.response.data?.message ||\r\n          `Error ${error.response.status}: ${error.response.statusText}`;\r\n      } else if (error.message) {\r\n        errorDetails = error.message;\r\n      }\r\n\r\n      toast.dismiss();\r\n      toast.error(`Lỗi khi lưu lộ trình: ${errorDetails}`, {\r\n        duration: 5000,\r\n        action: {\r\n          label: \"Thử lại\",\r\n          onClick: () => handleSaveRoadmap(),\r\n        },\r\n      });\r\n    }\r\n  }, [courseId, nodes, edges, roadmapId, setNodes, setEdges]);\r\n\r\n  // Function to reload the roadmap from the stored ID\r\n  const reloadRoadmap = useCallback(async () => {\r\n    if (!roadmapId) {\r\n      toast.error(\"Không tìm thấy ID lộ trình\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const loadingToastId = toast.loading(\"Đang tải lại lộ trình...\");\r\n\r\n      console.log(`Reloading roadmap with ID: ${roadmapId}`);\r\n      const result = await getRoadmapById(roadmapId);\r\n\r\n      if (result.nodes?.length) {\r\n        setNodes(result.nodes);\r\n      }\r\n      if (result.edges?.length) {\r\n        setEdges(result.edges);\r\n      }\r\n\r\n      toast.dismiss(loadingToastId);\r\n      toast.success(\"Đã tải lại lộ trình thành công\");\r\n    } catch (error) {\r\n      console.error(`Error reloading roadmap ${roadmapId}:`, error);\r\n      toast.error(`Không thể tải lại lộ trình: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [roadmapId, setNodes, setEdges]);\r\n\r\n  // Toggle edit mode\r\n  const toggleEditMode = useCallback(() => {\r\n    setEditMode((prev) => !prev);\r\n    setSelectedNode(null);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        Đang tải lộ trình...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-full\">\r\n        <p className=\"text-red-500\">{error}</p>\r\n        <Button onClick={() => window.location.reload()} className=\"mt-4\">\r\n          Tải lại trang\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={editMode ? onNodesChange : undefined}\r\n        onEdgesChange={editMode ? onEdgesChange : undefined}\r\n        onConnect={onConnect}\r\n        onNodeClick={onNodeClick}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n      >\r\n        <Background color=\"#4a5568\" gap={16} />\r\n        <Controls />\r\n\r\n        {/* Editor Panels */}\r\n        {!readOnly && (\r\n          <Panel\r\n            position=\"top-left\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <div className=\"flex flex-col gap-2\">\r\n              <Button\r\n                onClick={toggleEditMode}\r\n                variant={editMode ? \"default\" : \"outline\"}\r\n                className={`${\r\n                  editMode\r\n                    ? \"bg-purple-600 hover:bg-purple-700 text-white\"\r\n                    : \"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                }`}\r\n                size=\"sm\"\r\n              >\r\n                {editMode ? \"Chế độ chỉnh sửa: BẬT\" : \"Chế độ chỉnh sửa: TẮT\"}\r\n              </Button>\r\n\r\n              {editMode && (\r\n                <>\r\n                  <Button\r\n                    onClick={() => setShowAddCourseDialog(true)}\r\n                    variant=\"outline\"\r\n                    className=\"border-purple-500/30 bg-transparent hover:bg-purple-900/20 hover:border-purple-500/50 text-gray-300\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Thêm node\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={handleSaveRoadmap}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Lưu lộ trình\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={reloadRoadmap}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Tải lại lộ trình\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Panel>\r\n        )}\r\n\r\n        {/* Node actions panel when a node is selected */}\r\n        {editMode && selectedNode && (\r\n          <Panel\r\n            position=\"top-right\"\r\n            className=\"bg-cyberpunk-darker p-2 rounded-md shadow-lg\"\r\n          >\r\n            <Card className=\"bg-cyberpunk-darker border-purple-500/30\">\r\n              <CardContent className=\"p-4\">\r\n                <Tabs defaultValue=\"actions\">\r\n                  <TabsList className=\"bg-cyberpunk-dark grid grid-cols-2 mb-4\">\r\n                    <TabsTrigger\r\n                      value=\"actions\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Hoạt động\r\n                    </TabsTrigger>\r\n                    <TabsTrigger\r\n                      value=\"style\"\r\n                      className=\"data-[state=active]:bg-purple-900\"\r\n                    >\r\n                      Kiểu dáng\r\n                    </TabsTrigger>\r\n                  </TabsList>\r\n\r\n                  <TabsContent value=\"actions\">\r\n                    <NodeActions\r\n                      node={selectedNode}\r\n                      onUpdate={handleNodeUpdate}\r\n                      onDelete={handleNodeDelete}\r\n                      onClose={() => setSelectedNode(null)}\r\n                    />\r\n                  </TabsContent>\r\n\r\n                  <TabsContent value=\"style\">\r\n                    <NodeColorPicker\r\n                      node={selectedNode}\r\n                      onStyleUpdate={handleNodeStyleUpdate}\r\n                    />\r\n                  </TabsContent>\r\n                </Tabs>\r\n              </CardContent>\r\n            </Card>\r\n          </Panel>\r\n        )}\r\n      </ReactFlow>\r\n\r\n      {/* Add Course Dialog */}\r\n      <AddCourseDialog\r\n        open={showAddCourseDialog}\r\n        onClose={() => setShowAddCourseDialog(false)}\r\n        onAdd={onAddNode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"mHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC/D,MAAO,CAAAC,SAAS,EACdC,OAAO,CACPC,UAAU,CACVC,QAAQ,CACRC,KAAK,CACLC,aAAa,CACbC,aAAa,KACR,WAAW,CAClB,MAAO,0BAA0B,CACjC,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,KAAK,KAAQ,QAAQ,CAC9B,OAASC,IAAI,CAAEC,WAAW,KAAQ,WAAW,CAC7C,OAASC,IAAI,CAAEC,WAAW,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,WAAW,CACpE,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OACEC,gBAAgB,CAChBC,iBAAiB,CACjBC,cAAc,KACT,kCAAkC,CACzC,MAAO,CAAAC,mBAAmB,KAAM,uBAAuB,CACvD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,SAAS,CAAG,CAChBC,UAAU,CAAEV,mBACd,CAAC,CAED,cAAe,SAAS,CAAAW,mBAAmBA,CAAAC,IAAA,CAAiC,IAAhC,CAAEC,QAAQ,CAAEC,QAAQ,CAAG,KAAM,CAAC,CAAAF,IAAA,CACxE;AACA,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAEC,aAAa,CAAC,CAAG/B,aAAa,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACgC,KAAK,CAAEC,QAAQ,CAAEC,aAAa,CAAC,CAAGjC,aAAa,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACkC,SAAS,CAAEC,YAAY,CAAC,CAAG5C,QAAQ,CAAC,IAAI,CAAC,CAEhD;AACA,KAAM,CAAC6C,mBAAmB,CAAEC,sBAAsB,CAAC,CAAG9C,QAAQ,CAAC,KAAK,CAAC,CACrE,KAAM,CAAC+C,YAAY,CAAEC,eAAe,CAAC,CAAGhD,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACiD,QAAQ,CAAEC,WAAW,CAAC,CAAGlD,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACmD,SAAS,CAAEC,YAAY,CAAC,CAAGpD,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACqD,KAAK,CAAEC,QAAQ,CAAC,CAAGtD,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqD,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACpB,QAAQ,CAAE,OAEf,GAAI,KAAAqB,eAAA,CAAAC,aAAA,CAAAC,aAAA,CACFN,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,IAAI,CAAC,CAEdK,OAAO,CAACC,GAAG,wCAAAC,MAAA,CAAwC1B,QAAQ,CAAE,CAAC,CAC9D,KAAM,CAAA2B,MAAM,CAAG,KAAM,CAAA3C,gBAAgB,CAACgB,QAAQ,CAAC,CAE/C;AACA,IAAAqB,eAAA,CAAIM,MAAM,CAACC,OAAO,UAAAP,eAAA,WAAdA,eAAA,CAAgBQ,EAAE,CAAE,CACtBL,OAAO,CAACC,GAAG,oBAAAC,MAAA,CAAoBC,MAAM,CAACC,OAAO,CAACC,EAAE,CAAE,CAAC,CACnDpB,YAAY,CAACkB,MAAM,CAACC,OAAO,CAACC,EAAE,CAAC,CACjC,CAEA;AACA,IAAAP,aAAA,CAAIK,MAAM,CAACzB,KAAK,UAAAoB,aAAA,WAAZA,aAAA,CAAcQ,MAAM,CAAE,CACxBN,OAAO,CAACC,GAAG,YAAAC,MAAA,CAAYC,MAAM,CAACzB,KAAK,CAAC4B,MAAM,UAAQ,CAAC,CACnD3B,QAAQ,CAACwB,MAAM,CAACzB,KAAK,CAAC,CACxB,CAEA,IAAAqB,aAAA,CAAII,MAAM,CAACtB,KAAK,UAAAkB,aAAA,WAAZA,aAAA,CAAcO,MAAM,CAAE,CACxBN,OAAO,CAACC,GAAG,YAAAC,MAAA,CAAYC,MAAM,CAACtB,KAAK,CAACyB,MAAM,UAAQ,CAAC,CACnDxB,QAAQ,CAACqB,MAAM,CAACtB,KAAK,CAAC,CACxB,CACF,CAAE,MAAOa,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CC,QAAQ,mEAAAO,MAAA,CAAoCR,KAAK,CAACa,OAAO,CAAE,CAAC,CAC5DvD,KAAK,CAAC0C,KAAK,CAAC,gCAAgC,CAAC,CAC/C,CAAC,OAAS,CACRD,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDG,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,CAACpB,QAAQ,CAAEG,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAElC;AACA,KAAM,CAAA0B,WAAW,CAAGlE,WAAW,CAC7B,CAACmE,KAAK,CAAEC,IAAI,GAAK,CACf,GAAI,CAACpB,QAAQ,CAAE,OACfD,eAAe,CAACqB,IAAI,CAAC,CACvB,CAAC,CACD,CAACpB,QAAQ,CACX,CAAC,CAED;AACA,KAAM,CAAAqB,SAAS,CAAGrE,WAAW,CAC1BsE,QAAQ,EAAK,CACZ;AACA,KAAM,CAAAC,OAAO,CAAG,CACdR,EAAE,SAAAH,MAAA,CAAUY,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CACxBC,IAAI,CAAE,YAAY,CAClBC,QAAQ,CAAE,CACRC,CAAC,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CACtBC,CAAC,CAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GACrB,CAAC,CACDE,IAAI,CAAAC,aAAA,CAAAA,aAAA,IACCX,QAAQ,MACXY,WAAW,CAAEZ,QAAQ,CAACY,WAAW,EAAI,SAAS,CAC9CC,SAAS,CAAEb,QAAQ,CAACa,SAAS,EAAI,SAAS,CAC1CC,SAAS,CAAEd,QAAQ,CAACc,SAAS,EAAI,SAAS,EAE9C,CAAC,CAED/C,QAAQ,CAAEgD,GAAG,EAAKA,GAAG,CAACzB,MAAM,CAACW,OAAO,CAAC,CAAC,CACtC1B,sBAAsB,CAAC,KAAK,CAAC,CAC7BnC,KAAK,CAAC4E,OAAO,CAAC,kBAAkB,CAAC,CACnC,CAAC,CACD,CAACjD,QAAQ,CACX,CAAC,CAED;AACA,KAAM,CAAAkD,SAAS,CAAGvF,WAAW,CAC1BwF,MAAM,EAAK,CACV,GAAI,CAACxC,QAAQ,CAAE,OAEfR,QAAQ,CAAEiD,GAAG,EACXtF,OAAO,CAAA8E,aAAA,CAAAA,aAAA,IAEAO,MAAM,MACTzB,EAAE,SAAAH,MAAA,CAAUY,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CACxBC,IAAI,CAAE,YAAY,CAClBgB,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAS,CAAEC,WAAW,CAAE,CAAE,CAAC,GAE9CJ,GACF,CACF,CAAC,CACH,CAAC,CACD,CAACjD,QAAQ,CAAEQ,QAAQ,CACrB,CAAC,CAED;AACA,KAAM,CAAA8C,gBAAgB,CAAG9F,WAAW,CACjC+F,MAAM,EAAK,CACV,GAAI,CAAC/C,QAAQ,CAAE,OAEfX,QAAQ,CAAEgD,GAAG,EAAKA,GAAG,CAACW,MAAM,CAAE5B,IAAI,EAAKA,IAAI,CAACL,EAAE,GAAKgC,MAAM,CAAC,CAAC,CAC3DvD,QAAQ,CAAEiD,GAAG,EACXA,GAAG,CAACO,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAKH,MAAM,EAAIE,IAAI,CAACE,MAAM,GAAKJ,MAAM,CACvE,CAAC,CAEDhD,eAAe,CAAC,IAAI,CAAC,CACrBrC,KAAK,CAAC4E,OAAO,CAAC,aAAa,CAAC,CAC9B,CAAC,CACD,CAACjD,QAAQ,CAAEG,QAAQ,CACrB,CAAC,CAED;AACA,KAAM,CAAA4D,gBAAgB,CAAGpG,WAAW,CAClC,CAAC+F,MAAM,CAAEM,WAAW,GAAK,CACvB,GAAI,CAACrD,QAAQ,CAAE,OAEfX,QAAQ,CAAEgD,GAAG,EACXA,GAAG,CAACiB,GAAG,CAAElC,IAAI,EAAK,CAChB,GAAIA,IAAI,CAACL,EAAE,GAAKgC,MAAM,CAAE,CACtB,OAAAd,aAAA,CAAAA,aAAA,IACKb,IAAI,MACPY,IAAI,CAAAC,aAAA,CAAAA,aAAA,IACCb,IAAI,CAACY,IAAI,EACTqB,WAAW,CACf,GAEL,CACA,MAAO,CAAAjC,IAAI,CACb,CAAC,CACH,CAAC,CAEDrB,eAAe,CAAC,IAAI,CAAC,CACrBrC,KAAK,CAAC4E,OAAO,CAAC,kBAAkB,CAAC,CACnC,CAAC,CACD,CAACjD,QAAQ,CACX,CAAC,CAED;AACA,KAAM,CAAAkE,qBAAqB,CAAGvG,WAAW,CACvC,CAAC+F,MAAM,CAAES,SAAS,GAAK,CACrB,GAAI,CAACxD,QAAQ,CAAE,OAEfX,QAAQ,CAAEgD,GAAG,EACXA,GAAG,CAACiB,GAAG,CAAElC,IAAI,EAAK,CAChB,GAAIA,IAAI,CAACL,EAAE,GAAKgC,MAAM,CAAE,CACtB,OAAAd,aAAA,CAAAA,aAAA,IACKb,IAAI,MACPY,IAAI,CAAAC,aAAA,CAAAA,aAAA,IACCb,IAAI,CAACY,IAAI,EACTwB,SAAS,CACb,GAEL,CACA,MAAO,CAAApC,IAAI,CACb,CAAC,CACH,CAAC,CACH,CAAC,CACD,CAAC/B,QAAQ,CACX,CAAC,CAED;AACA,KAAM,CAAAoE,iBAAiB,CAAGzG,WAAW,CAAC,SAAY,CAChD,GAAI,CAACkC,QAAQ,CAAE,CACbxB,KAAK,CAAC0C,KAAK,CAAC,0BAA0B,CAAC,CACvC,OACF,CAEA,GAAI,KAAAsD,cAAA,CAAAC,cAAA,CACF;AACA,KAAM,CAAAC,cAAc,CAAGlG,KAAK,CAACmG,OAAO,CAAC,sBAAsB,CAAC,CAE5DnD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAEzB,QAAQ,CAAC,CAC/DwB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEvB,KAAK,CAAC,CACpCsB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEpB,KAAK,CAAC,CAEpC;AACA,KAAM,CAAAuE,UAAU,CAAG1E,KAAK,CAAC4D,MAAM,CAAE5B,IAAI,EAAKA,IAAI,CAACL,EAAE,EAAIK,IAAI,CAACO,QAAQ,CAAC,CACnE,GAAImC,UAAU,CAAC9C,MAAM,CAAG5B,KAAK,CAAC4B,MAAM,CAAE,CACpCN,OAAO,CAACqD,IAAI,UAAAnD,MAAA,CAERxB,KAAK,CAAC4B,MAAM,CAAG8C,UAAU,CAAC9C,MAAM,wCAEpC,CAAC,CACH,CAEA;AACA,KAAM,CAAAgD,UAAU,CAAGzE,KAAK,CAACyD,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,EAAID,IAAI,CAACE,MAAM,CAAC,CACrE,GAAIa,UAAU,CAAChD,MAAM,CAAGzB,KAAK,CAACyB,MAAM,CAAE,CACpCN,OAAO,CAACqD,IAAI,UAAAnD,MAAA,CAERrB,KAAK,CAACyB,MAAM,CAAGgD,UAAU,CAAChD,MAAM,wCAEpC,CAAC,CACH,CAEA;AACA,KAAM,CAAAH,MAAM,CAAG,KAAM,CAAA1C,iBAAiB,CAACe,QAAQ,CAAE,CAC/CE,KAAK,CAAE0E,UAAU,CACjBvE,KAAK,CAAEyE,UACT,CAAC,CAAC,CAEFtD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEE,MAAM,CAAC,CAEnC;AACA,GAAIA,MAAM,CAACE,EAAE,EAAIF,MAAM,CAACE,EAAE,GAAKrB,SAAS,CAAE,CACxCgB,OAAO,CAACC,GAAG,oCAAAC,MAAA,CAC0BlB,SAAS,SAAAkB,MAAA,CAAOC,MAAM,CAACE,EAAE,CAC9D,CAAC,CACDpB,YAAY,CAACkB,MAAM,CAACE,EAAE,CAAC,CACzB,CAEA;AACA,IAAA2C,cAAA,CAAI7C,MAAM,CAACzB,KAAK,UAAAsE,cAAA,WAAZA,cAAA,CAAc1C,MAAM,CAAE,CACxBN,OAAO,CAACC,GAAG,aAAAC,MAAA,CAAaC,MAAM,CAACzB,KAAK,CAAC4B,MAAM,qBAAmB,CAAC,CAC/D3B,QAAQ,CAACwB,MAAM,CAACzB,KAAK,CAAC,CACxB,CACA,IAAAuE,cAAA,CAAI9C,MAAM,CAACtB,KAAK,UAAAoE,cAAA,WAAZA,cAAA,CAAc3C,MAAM,CAAE,CACxBN,OAAO,CAACC,GAAG,aAAAC,MAAA,CAAaC,MAAM,CAACtB,KAAK,CAACyB,MAAM,qBAAmB,CAAC,CAC/DxB,QAAQ,CAACqB,MAAM,CAACtB,KAAK,CAAC,CACxB,CAEA;AACA7B,KAAK,CAACuG,OAAO,CAACL,cAAc,CAAC,CAC7BlG,KAAK,CAAC4E,OAAO,CAAC,6BAA6B,CAAC,CAC9C,CAAE,MAAOlC,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAE7C;AACA,GAAI,CAAA8D,YAAY,CAAG,EAAE,CACrB,GAAI9D,KAAK,CAAC+D,QAAQ,CAAE,KAAAC,oBAAA,CAClBF,YAAY,CACV,EAAAE,oBAAA,CAAAhE,KAAK,CAAC+D,QAAQ,CAACnC,IAAI,UAAAoC,oBAAA,iBAAnBA,oBAAA,CAAqBnD,OAAO,YAAAL,MAAA,CACnBR,KAAK,CAAC+D,QAAQ,CAACE,MAAM,OAAAzD,MAAA,CAAKR,KAAK,CAAC+D,QAAQ,CAACG,UAAU,CAAE,CAClE,CAAC,IAAM,IAAIlE,KAAK,CAACa,OAAO,CAAE,CACxBiD,YAAY,CAAG9D,KAAK,CAACa,OAAO,CAC9B,CAEAvD,KAAK,CAACuG,OAAO,CAAC,CAAC,CACfvG,KAAK,CAAC0C,KAAK,4CAAAQ,MAAA,CAA0BsD,YAAY,EAAI,CACnDK,QAAQ,CAAE,IAAI,CACdC,MAAM,CAAE,CACNC,KAAK,CAAE,SAAS,CAChBC,OAAO,CAAEA,CAAA,GAAMjB,iBAAiB,CAAC,CACnC,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACvE,QAAQ,CAAEE,KAAK,CAAEG,KAAK,CAAEG,SAAS,CAAEL,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAE3D;AACA,KAAM,CAAAmF,aAAa,CAAG3H,WAAW,CAAC,SAAY,CAC5C,GAAI,CAAC0C,SAAS,CAAE,CACdhC,KAAK,CAAC0C,KAAK,CAAC,4BAA4B,CAAC,CACzC,OACF,CAEA,GAAI,KAAAwE,cAAA,CAAAC,cAAA,CACF1E,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAyD,cAAc,CAAGlG,KAAK,CAACmG,OAAO,CAAC,0BAA0B,CAAC,CAEhEnD,OAAO,CAACC,GAAG,+BAAAC,MAAA,CAA+BlB,SAAS,CAAE,CAAC,CACtD,KAAM,CAAAmB,MAAM,CAAG,KAAM,CAAAzC,cAAc,CAACsB,SAAS,CAAC,CAE9C,IAAAkF,cAAA,CAAI/D,MAAM,CAACzB,KAAK,UAAAwF,cAAA,WAAZA,cAAA,CAAc5D,MAAM,CAAE,CACxB3B,QAAQ,CAACwB,MAAM,CAACzB,KAAK,CAAC,CACxB,CACA,IAAAyF,cAAA,CAAIhE,MAAM,CAACtB,KAAK,UAAAsF,cAAA,WAAZA,cAAA,CAAc7D,MAAM,CAAE,CACxBxB,QAAQ,CAACqB,MAAM,CAACtB,KAAK,CAAC,CACxB,CAEA7B,KAAK,CAACuG,OAAO,CAACL,cAAc,CAAC,CAC7BlG,KAAK,CAAC4E,OAAO,CAAC,gCAAgC,CAAC,CACjD,CAAE,MAAOlC,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,4BAAAQ,MAAA,CAA4BlB,SAAS,MAAKU,KAAK,CAAC,CAC7D1C,KAAK,CAAC0C,KAAK,0DAAAQ,MAAA,CAAgCR,KAAK,CAACa,OAAO,CAAE,CAAC,CAC7D,CAAC,OAAS,CACRd,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAE,CAACT,SAAS,CAAEL,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAEnC;AACA,KAAM,CAAAsF,cAAc,CAAG9H,WAAW,CAAC,IAAM,CACvCiD,WAAW,CAAE8E,IAAI,EAAK,CAACA,IAAI,CAAC,CAC5BhF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIG,SAAS,CAAE,CACb,mBACEzB,IAAA,QAAKuG,SAAS,CAAC,yCAAyC,CAAAC,QAAA,CAAC,wCAEzD,CAAK,CAAC,CAEV,CAEA,GAAI7E,KAAK,CAAE,CACT,mBACEzB,KAAA,QAAKqG,SAAS,CAAC,kDAAkD,CAAAC,QAAA,eAC/DxG,IAAA,MAAGuG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAE7E,KAAK,CAAI,CAAC,cACvC3B,IAAA,CAAChB,MAAM,EAACiH,OAAO,CAAEA,CAAA,GAAMQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE,CAACJ,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,yBAElE,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,mBACEtG,KAAA,QAAKqG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCtG,KAAA,CAACzB,SAAS,EACRkC,KAAK,CAAEA,KAAM,CACbG,KAAK,CAAEA,KAAM,CACbD,aAAa,CAAEU,QAAQ,CAAGV,aAAa,CAAG+F,SAAU,CACpD5F,aAAa,CAAEO,QAAQ,CAAGP,aAAa,CAAG4F,SAAU,CACpD9C,SAAS,CAAEA,SAAU,CACrBrB,WAAW,CAAEA,WAAY,CACzBpC,SAAS,CAAEA,SAAU,CACrBwG,OAAO,MAAAL,QAAA,eAEPxG,IAAA,CAACrB,UAAU,EAACmI,KAAK,CAAC,SAAS,CAACC,GAAG,CAAE,EAAG,CAAE,CAAC,cACvC/G,IAAA,CAACpB,QAAQ,GAAE,CAAC,CAGX,CAAC8B,QAAQ,eACRV,IAAA,CAACnB,KAAK,EACJqE,QAAQ,CAAC,UAAU,CACnBqD,SAAS,CAAC,8CAA8C,CAAAC,QAAA,cAExDtG,KAAA,QAAKqG,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCxG,IAAA,CAAChB,MAAM,EACLiH,OAAO,CAAEI,cAAe,CACxBW,OAAO,CAAEzF,QAAQ,CAAG,SAAS,CAAG,SAAU,CAC1CgF,SAAS,IAAApE,MAAA,CACPZ,QAAQ,CACJ,8CAA8C,CAC9C,qGAAqG,CACxG,CACH0F,IAAI,CAAC,IAAI,CAAAT,QAAA,CAERjF,QAAQ,CAAG,uBAAuB,CAAG,uBAAuB,CACvD,CAAC,CAERA,QAAQ,eACPrB,KAAA,CAAAE,SAAA,EAAAoG,QAAA,eACExG,IAAA,CAAChB,MAAM,EACLiH,OAAO,CAAEA,CAAA,GAAM7E,sBAAsB,CAAC,IAAI,CAAE,CAC5C4F,OAAO,CAAC,SAAS,CACjBT,SAAS,CAAC,qGAAqG,CAC/GU,IAAI,CAAC,IAAI,CAAAT,QAAA,CACV,cAED,CAAQ,CAAC,cAETxG,IAAA,CAAChB,MAAM,EACLiH,OAAO,CAAEjB,iBAAkB,CAC3BuB,SAAS,CAAC,4CAA4C,CACtDU,IAAI,CAAC,IAAI,CAAAT,QAAA,CACV,2BAED,CAAQ,CAAC,cAETxG,IAAA,CAAChB,MAAM,EACLiH,OAAO,CAAEC,aAAc,CACvBK,SAAS,CAAC,0CAA0C,CACpDU,IAAI,CAAC,IAAI,CAAAT,QAAA,CACV,oCAED,CAAQ,CAAC,EACT,CACH,EACE,CAAC,CACD,CACR,CAGAjF,QAAQ,EAAIF,YAAY,eACvBrB,IAAA,CAACnB,KAAK,EACJqE,QAAQ,CAAC,WAAW,CACpBqD,SAAS,CAAC,8CAA8C,CAAAC,QAAA,cAExDxG,IAAA,CAACd,IAAI,EAACqH,SAAS,CAAC,0CAA0C,CAAAC,QAAA,cACxDxG,IAAA,CAACb,WAAW,EAACoH,SAAS,CAAC,KAAK,CAAAC,QAAA,cAC1BtG,KAAA,CAACd,IAAI,EAAC8H,YAAY,CAAC,SAAS,CAAAV,QAAA,eAC1BtG,KAAA,CAACZ,QAAQ,EAACiH,SAAS,CAAC,yCAAyC,CAAAC,QAAA,eAC3DxG,IAAA,CAACT,WAAW,EACV4H,KAAK,CAAC,SAAS,CACfZ,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAC9C,0BAED,CAAa,CAAC,cACdxG,IAAA,CAACT,WAAW,EACV4H,KAAK,CAAC,OAAO,CACbZ,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAC9C,mBAED,CAAa,CAAC,EACN,CAAC,cAEXxG,IAAA,CAACX,WAAW,EAAC8H,KAAK,CAAC,SAAS,CAAAX,QAAA,cAC1BxG,IAAA,CAACF,WAAW,EACV6C,IAAI,CAAEtB,YAAa,CACnB+F,QAAQ,CAAEzC,gBAAiB,CAC3B0C,QAAQ,CAAEhD,gBAAiB,CAC3BiD,OAAO,CAAEA,CAAA,GAAMhG,eAAe,CAAC,IAAI,CAAE,CACtC,CAAC,CACS,CAAC,cAEdtB,IAAA,CAACX,WAAW,EAAC8H,KAAK,CAAC,OAAO,CAAAX,QAAA,cACxBxG,IAAA,CAACH,eAAe,EACd8C,IAAI,CAAEtB,YAAa,CACnBkG,aAAa,CAAEzC,qBAAsB,CACtC,CAAC,CACS,CAAC,EACV,CAAC,CACI,CAAC,CACV,CAAC,CACF,CACR,EACQ,CAAC,cAGZ9E,IAAA,CAACR,eAAe,EACdgI,IAAI,CAAErG,mBAAoB,CAC1BmG,OAAO,CAAEA,CAAA,GAAMlG,sBAAsB,CAAC,KAAK,CAAE,CAC7CqG,KAAK,CAAE7E,SAAU,CAClB,CAAC,EACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
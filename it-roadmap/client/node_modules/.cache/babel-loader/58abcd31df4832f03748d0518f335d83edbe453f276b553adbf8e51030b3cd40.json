{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\DACS-jules_wip_16596734084587186652\\\\it-roadmap\\\\client\\\\src\\\\context\\\\RoadmapContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getRoadmaps, getRoadmapsByCategory } from \"../services/roadmapService\";\nimport { getCategories } from \"../services/categoryService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoadmapContext = /*#__PURE__*/createContext();\nexport function RoadmapProvider({\n  children\n}) {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // 获取所有类别\n  const {\n    data: categories,\n    isLoading: categoriesLoading,\n    error: categoriesError\n  } = useQuery({\n    queryKey: [\"categories\"],\n    queryFn: getCategories\n  });\n\n  // 根据选定类别获取路线图\n  const {\n    data: roadmaps,\n    isLoading: roadmapsLoading,\n    error: roadmapsError,\n    refetch: refetchRoadmaps\n  } = useQuery({\n    queryKey: [\"roadmaps\", selectedCategory],\n    queryFn: () => getRoadmapsByCategory(selectedCategory),\n    enabled: true\n  });\n\n  // 更改选定的类别\n  const selectCategory = categoryId => {\n    setSelectedCategory(categoryId === selectedCategory ? null : categoryId);\n  };\n  return /*#__PURE__*/_jsxDEV(RoadmapContext.Provider, {\n    value: {\n      categories,\n      categoriesLoading,\n      categoriesError,\n      roadmaps,\n      roadmapsLoading,\n      roadmapsError,\n      selectedCategory,\n      selectCategory,\n      refetchRoadmaps\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n// 使用自定义钩子简化访问上下文\n_s(RoadmapProvider, \"P+AyIq0qhr3dPVeRheioqmAWKj8=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = RoadmapProvider;\nexport function useRoadmaps() {\n  _s2();\n  const context = useContext(RoadmapContext);\n  if (context === undefined) {\n    throw new Error(\"useRoadmaps must be used within a RoadmapProvider\");\n  }\n  return context;\n}\n_s2(useRoadmaps, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RoadmapProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useQuery","getRoadmaps","getRoadmapsByCategory","getCategories","jsxDEV","_jsxDEV","RoadmapContext","RoadmapProvider","children","_s","selectedCategory","setSelectedCategory","data","categories","isLoading","categoriesLoading","error","categoriesError","queryKey","queryFn","roadmaps","roadmapsLoading","roadmapsError","refetch","refetchRoadmaps","enabled","selectCategory","categoryId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRoadmaps","_s2","context","undefined","Error","$RefreshReg$"],"sources":["D:/demo/DACS-jules_wip_16596734084587186652/it-roadmap/client/src/context/RoadmapContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getRoadmaps, getRoadmapsByCategory } from \"../services/roadmapService\";\r\nimport { getCategories } from \"../services/categoryService\";\r\n\r\nconst RoadmapContext = createContext();\r\n\r\nexport function RoadmapProvider({ children }) {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  // 获取所有类别\r\n  const {\r\n    data: categories,\r\n    isLoading: categoriesLoading,\r\n    error: categoriesError,\r\n  } = useQuery({\r\n    queryKey: [\"categories\"],\r\n    queryFn: getCategories,\r\n  });\r\n\r\n  // 根据选定类别获取路线图\r\n  const {\r\n    data: roadmaps,\r\n    isLoading: roadmapsLoading,\r\n    error: roadmapsError,\r\n    refetch: refetchRoadmaps,\r\n  } = useQuery({\r\n    queryKey: [\"roadmaps\", selectedCategory],\r\n    queryFn: () => getRoadmapsByCategory(selectedCategory),\r\n    enabled: true,\r\n  });\r\n\r\n  // 更改选定的类别\r\n  const selectCategory = (categoryId) => {\r\n    setSelectedCategory(categoryId === selectedCategory ? null : categoryId);\r\n  };\r\n\r\n  return (\r\n    <RoadmapContext.Provider\r\n      value={{\r\n        categories,\r\n        categoriesLoading,\r\n        categoriesError,\r\n        roadmaps,\r\n        roadmapsLoading,\r\n        roadmapsError,\r\n        selectedCategory,\r\n        selectCategory,\r\n        refetchRoadmaps,\r\n      }}\r\n    >\r\n      {children}\r\n    </RoadmapContext.Provider>\r\n  );\r\n}\r\n\r\n// 使用自定义钩子简化访问上下文\r\nexport function useRoadmaps() {\r\n  const context = useContext(RoadmapContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useRoadmaps must be used within a RoadmapProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,4BAA4B;AAC/E,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAEtC,OAAO,SAASU,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAM;IACJa,IAAI,EAAEC,UAAU;IAChBC,SAAS,EAAEC,iBAAiB;IAC5BC,KAAK,EAAEC;EACT,CAAC,GAAGjB,QAAQ,CAAC;IACXkB,QAAQ,EAAE,CAAC,YAAY,CAAC;IACxBC,OAAO,EAAEhB;EACX,CAAC,CAAC;;EAEF;EACA,MAAM;IACJS,IAAI,EAAEQ,QAAQ;IACdN,SAAS,EAAEO,eAAe;IAC1BL,KAAK,EAAEM,aAAa;IACpBC,OAAO,EAAEC;EACX,CAAC,GAAGxB,QAAQ,CAAC;IACXkB,QAAQ,EAAE,CAAC,UAAU,EAAER,gBAAgB,CAAC;IACxCS,OAAO,EAAEA,CAAA,KAAMjB,qBAAqB,CAACQ,gBAAgB,CAAC;IACtDe,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrChB,mBAAmB,CAACgB,UAAU,KAAKjB,gBAAgB,GAAG,IAAI,GAAGiB,UAAU,CAAC;EAC1E,CAAC;EAED,oBACEtB,OAAA,CAACC,cAAc,CAACsB,QAAQ;IACtBC,KAAK,EAAE;MACLhB,UAAU;MACVE,iBAAiB;MACjBE,eAAe;MACfG,QAAQ;MACRC,eAAe;MACfC,aAAa;MACbZ,gBAAgB;MAChBgB,cAAc;MACdF;IACF,CAAE;IAAAhB,QAAA,EAEDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B;;AAEA;AAAAxB,EAAA,CAjDgBF,eAAe;EAAA,QAQzBP,QAAQ,EAWRA,QAAQ;AAAA;AAAAkC,EAAA,GAnBE3B,eAAe;AAkD/B,OAAO,SAAS4B,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGvC,UAAU,CAACQ,cAAc,CAAC;EAC1C,IAAI+B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOF,OAAO;AAChB;AAACD,GAAA,CANeD,WAAW;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
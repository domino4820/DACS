@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 262.1 83.3% 57.8%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 262.1 83.3% 57.8%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 263.4 70% 50.4%;
    --primary-foreground: 210 40% 98%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 263.4 70% 50.4%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.font-orbitron {
  font-family: "Orbitron", sans-serif;
}

/* Cyberpunk glitch effect */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.glitch::before {
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim2 5s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% {
    clip: rect(31px, 9999px, 94px, 0);
    transform: skew(0.85deg);
  }
  5% {
    clip: rect(70px, 9999px, 71px, 0);
    transform: skew(0.17deg);
  }
  10% {
    clip: rect(75px, 9999px, 92px, 0);
    transform: skew(0.4deg);
  }
  15% {
    clip: rect(12px, 9999px, 23px, 0);
    transform: skew(0.29deg);
  }
  20% {
    clip: rect(18px, 9999px, 93px, 0);
    transform: skew(0.67deg);
  }
  25% {
    clip: rect(20px, 9999px, 35px, 0);
    transform: skew(0.29deg);
  }
  30% {
    clip: rect(1px, 9999px, 15px, 0);
    transform: skew(0.71deg);
  }
  35% {
    clip: rect(43px, 9999px, 9px, 0);
    transform: skew(0.5deg);
  }
  40% {
    clip: rect(92px, 9999px, 97px, 0);
    transform: skew(0.1deg);
  }
  45% {
    clip: rect(9px, 9999px, 23px, 0);
    transform: skew(0.58deg);
  }
  50% {
    clip: rect(71px, 9999px, 88px, 0);
    transform: skew(0.05deg);
  }
  55% {
    clip: rect(31px, 9999px, 88px, 0);
    transform: skew(0.52deg);
  }
  60% {
    clip: rect(56px, 9999px, 32px, 0);
    transform: skew(0.6deg);
  }
  65% {
    clip: rect(90px, 9999px, 64px, 0);
    transform: skew(0.37deg);
  }
  70% {
    clip: rect(68px, 9999px, 97px, 0);
    transform: skew(0.72deg);
  }
  75% {
    clip: rect(20px, 9999px, 25px, 0);
    transform: skew(0.76deg);
  }
  80% {
    clip: rect(64px, 9999px, 56px, 0);
    transform: skew(0.06deg);
  }
  85% {
    clip: rect(98px, 9999px, 91px, 0);
    transform: skew(0.66deg);
  }
  90% {
    clip: rect(61px, 9999px, 36px, 0);
    transform: skew(0.31deg);
  }
  95% {
    clip: rect(7px, 9999px, 90px, 0);
    transform: skew(0.89deg);
  }
  100% {
    clip: rect(71px, 9999px, 47px, 0);
    transform: skew(0.84deg);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(65px, 9999px, 65px, 0);
    transform: skew(0.19deg);
  }
  5% {
    clip: rect(95px, 9999px, 2px, 0);
    transform: skew(0.05deg);
  }
  10% {
    clip: rect(33px, 9999px, 73px, 0);
    transform: skew(0.02deg);
  }
  15% {
    clip: rect(41px, 9999px, 89px, 0);
    transform: skew(0.08deg);
  }
  20% {
    clip: rect(45px, 9999px, 65px, 0);
    transform: skew(0.33deg);
  }
  25% {
    clip: rect(76px, 9999px, 99px, 0);
    transform: skew(0.86deg);
  }
  30% {
    clip: rect(79px, 9999px, 59px, 0);
    transform: skew(0.01deg);
  }
  35% {
    clip: rect(20px, 9999px, 55px, 0);
    transform: skew(0.79deg);
  }
  40% {
    clip: rect(15px, 9999px, 72px, 0);
    transform: skew(0.2deg);
  }
  45% {
    clip: rect(2px, 9999px, 54px, 0);
    transform: skew(0.51deg);
  }
  50% {
    clip: rect(38px, 9999px, 65px, 0);
    transform: skew(0.26deg);
  }
  55% {
    clip: rect(72px, 9999px, 92px, 0);
    transform: skew(0.53deg);
  }
  60% {
    clip: rect(30px, 9999px, 61px, 0);
    transform: skew(0.83deg);
  }
  65% {
    clip: rect(88px, 9999px, 89px, 0);
    transform: skew(0.39deg);
  }
  70% {
    clip: rect(100px, 9999px, 86px, 0);
    transform: skew(0.01deg);
  }
  75% {
    clip: rect(38px, 9999px, 92px, 0);
    transform: skew(0.12deg);
  }
  80% {
    clip: rect(94px, 9999px, 49px, 0);
    transform: skew(0.42deg);
  }
  85% {
    clip: rect(53px, 9999px, 35px, 0);
    transform: skew(0.71deg);
  }
  90% {
    clip: rect(91px, 9999px, 59px, 0);
    transform: skew(0.76deg);
  }
  95% {
    clip: rect(69px, 9999px, 26px, 0);
    transform: skew(0.35deg);
  }
  100% {
    clip: rect(44px, 9999px, 66px, 0);
    transform: skew(0.33deg);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(-2deg);
  }
  10% {
    transform: skew(0deg);
  }
  20% {
    transform: skew(1deg);
  }
  30% {
    transform: skew(0deg);
  }
  40% {
    transform: skew(-1deg);
  }
  50% {
    transform: skew(0deg);
  }
  60% {
    transform: skew(2deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(-1deg);
  }
  90% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(1deg);
  }
}

/* Neon glow effects */
.neon-text {
  text-shadow: 0 0 5px rgba(138, 43, 226, 0.7), 0 0 10px rgba(138, 43, 226, 0.5),
    0 0 15px rgba(138, 43, 226, 0.3);
}

.neon-border {
  box-shadow: 0 0 5px rgba(138, 43, 226, 0.7), 0 0 10px rgba(138, 43, 226, 0.5);
}

/* Glowing icons and borders */
.glow-icon {
  filter: drop-shadow(0 0 3px rgba(138, 43, 226, 0.7));
  animation: pulse-glow 2s infinite alternate;
}

@keyframes pulse-glow {
  0% {
    filter: drop-shadow(0 0 2px rgba(138, 43, 226, 0.5));
  }
  100% {
    filter: drop-shadow(0 0 5px rgba(138, 43, 226, 0.8));
  }
}

.react-flow__node {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.react-flow__node:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
}

.react-flow__node.selected {
  box-shadow: 0 0 0 2px hsl(var(--primary)), 0 0 15px rgba(138, 43, 226, 0.5);
}

/* Animation styles */
.react-flow__edge {
  transition: all 0.3s ease;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke-width: 3;
  stroke: hsl(var(--primary));
  filter: drop-shadow(0 0 5px hsl(var(--primary)));
}

.animated-path {
  animation: dash 1.5s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: 20;
  }
}

/* React Flow connection improvements */
.react-flow {
  --connection-validation-distance: 20px;
}

/* Fix for handle z-index issues */
.react-flow__handle {
  z-index: 5;
  transition: transform 0.3s, background-color 0.3s;
}

.react-flow__handle:hover {
  z-index: 10;
  transform: scale(1.5);
}

/* Ensure the bottom-target handle is properly positioned */
.connection-handle-bottom {
  z-index: 5;
}

.connection-handle-top {
  z-index: 5;
}

/* Handle positioning fix to prevent overlap issues */
.react-flow__handle.connection-handle-bottom,
.react-flow__handle.connection-handle-top {
  pointer-events: all !important; /* Ensure handles can receive events */
}

/* Fix for bottom-to-top connections */
.source-bottom.target-top .react-flow__edge-path {
  stroke-width: 3px;
  stroke: hsl(var(--primary));
}

/* Make connection validation more lenient for better UX */
.react-flow__connection-path {
  stroke-width: 3px;
}

/* Boost handle size during connection */
.react-flow__handle.connecting {
  width: 14px !important;
  height: 14px !important;
  box-shadow: 0 0 0 5px rgba(138, 43, 226, 0.3);
}

/* Highlight valid connection handles */
.react-flow__handle.valid-connection {
  background-color: #4caf50 !important;
  transform: scale(1.5);
}

/* Node animations */
.node-created {
  animation: nodeCreated 0.8s ease-out;
}

.node-deleted {
  animation: nodeDeleted 0.3s ease-out forwards;
}

.node-selected {
  animation: nodeSelected 0.5s ease-in-out;
}

.node-selected-for-connection {
  animation: nodeSelectedForConnection 1s ease-in-out infinite alternate;
}

.node-completed {
  animation: nodeCompleted 1s ease-in-out;
}

.node-uncompleted {
  animation: nodeUncompleted 1s ease-in-out;
}

.node-saved {
  animation: nodeSaved 1s ease-in-out;
}

.node-undo {
  animation: nodeUndo 0.5s ease-in-out;
}

.node-redo {
  animation: nodeRedo 0.5s ease-in-out;
}

/* Edge animations */
.edge-created {
  stroke-dasharray: 5;
  animation: edgeCreated 1s ease-in-out;
}

.edge-deleted {
  animation: edgeDeleted 0.3s ease-out forwards;
}

/* Animation keyframes */
@keyframes nodeCreated {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  70% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes nodeDeleted {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

@keyframes nodeSelected {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes nodeSelectedForConnection {
  0% {
    box-shadow: 0 0 0 rgba(138, 43, 226, 0.5);
  }
  100% {
    box-shadow: 0 0 15px rgba(138, 43, 226, 0.8);
  }
}

@keyframes nodeCompleted {
  0% {
    background-color: rgba(255, 255, 255, 0.8);
  }
  50% {
    background-color: rgba(167, 243, 208, 0.8);
  }
  100% {
    background-color: rgba(255, 255, 255, 0.8);
  }
}

@keyframes nodeUncompleted {
  0% {
    background-color: rgba(255, 255, 255, 0.8);
  }
  50% {
    background-color: rgba(254, 202, 202, 0.8);
  }
  100% {
    background-color: rgba(255, 255, 255, 0.8);
  }
}

@keyframes nodeSaved {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes nodeUndo {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes nodeRedo {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes edgeCreated {
  0% {
    stroke-dashoffset: 100;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes edgeDeleted {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Cyberpunk grid background */
.bg-grid-small-white {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='8' height='8' fill='none' stroke='%23fff'%3E%3Cpath d='M0 .5H31.5V32'/%3E%3C/svg%3E");
}

/* Hover effects */
.hover-glow {
  transition: all 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 10px rgba(138, 43, 226, 0.7);
  transform: translateY(-2px);
}

/* Cyberpunk button */
.cybr-btn {
  --primary: hsl(var(--primary));
  --shadow-primary: hsl(var(--primary) / 0.4);
  --primary-hue: 263;
  --primary-lightness: 50;
  --color: hsl(0, 0%, 100%);
  --font-size: 18px;
  --shadow-primary-hue: 180;
  --label-size: 9px;
  --shadow-secondary-hue: 60;
  --shadow-secondary: hsl(var(--shadow-secondary-hue), 90%, 60%);
  --clip: polygon(
    0 0,
    100% 0,
    100% 100%,
    95% 100%,
    95% 90%,
    85% 90%,
    85% 100%,
    8% 100%,
    0 70%
  );
  --border: 2px;
  --shimmy-distance: 5;
  --clip-one: polygon(
    0 2%,
    100% 2%,
    100% 95%,
    95% 95%,
    95% 90%,
    85% 90%,
    85% 95%,
    8% 95%,
    0 70%
  );
  --clip-two: polygon(
    0 78%,
    100% 78%,
    100% 100%,
    95% 100%,
    95% 90%,
    85% 90%,
    85% 100%,
    8% 100%,
    0 78%
  );
  --clip-three: polygon(
    0 44%,
    100% 44%,
    100% 54%,
    95% 54%,
    95% 54%,
    85% 54%,
    85% 54%,
    8% 54%,
    0 54%
  );
  --clip-four: polygon(
    0 0,
    100% 0,
    100% 0,
    95% 0,
    95% 0,
    85% 0,
    85% 0,
    8% 0,
    0 0
  );
  --clip-five: polygon(
    0 0,
    100% 0,
    100% 0,
    95% 0,
    95% 0,
    85% 0,
    85% 0,
    8% 0,
    0 0
  );
  --clip-six: polygon(
    0 40%,
    100% 40%,
    100% 85%,
    95% 85%,
    95% 85%,
    85% 85%,
    85% 85%,
    8% 85%,
    0 70%
  );
  --clip-seven: polygon(
    0 63%,
    100% 63%,
    100% 80%,
    95% 80%,
    95% 80%,
    85% 80%,
    85% 80%,
    8% 80%,
    0 70%
  );
  font-family: "Orbitron", sans-serif;
  color: var(--color);
  cursor: pointer;
  background: transparent;
  text-transform: uppercase;
  font-size: var(--font-size);
  outline: transparent;
  letter-spacing: 2px;
  position: relative;
  font-weight: 700;
  border: 0;
  min-width: 200px;
  height: 50px;
  line-height: 50px;
  transition: background 0.2s;
}

.cybr-btn:hover {
  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness) + 10%));
}

.cybr-btn:active {
  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness) - 10%));
}

/* Dialog fixes to ensure forms work correctly */
.dialog-overlay-fix {
  z-index: 999;
}

.dialog-content-fix {
  z-index: 1000;
  pointer-events: auto !important;
}

.dialog-content-fix input,
.dialog-content-fix textarea,
.dialog-content-fix button,
.dialog-content-fix select {
  pointer-events: auto !important;
}

/* React Flow adjustments to prevent overlays from interfering with dialogs */
.react-flow__attribution {
  z-index: 5;
}

.react-flow__controls {
  z-index: 5;
}

.react-flow__minimap {
  z-index: 5;
}

/* Enhanced dialog fixes for input interaction */
.fixed.inset-0 {
  height: 100%;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

/* Form controls must always be clickable */
input,
textarea,
select,
button,
[role="button"],
[role="combobox"],
[role="dialog"] {
  pointer-events: auto !important;
}

/* Ensure popover content is interactive */
[data-radix-popper-content-wrapper] {
  z-index: 1001 !important;
  pointer-events: auto !important;
}

/* Fix for right-to-right connections */
.source-right.target-right .react-flow__edge-path {
  stroke-width: 3px;
  stroke: hsl(var(--primary));
}

/* Ensure right handles can receive events */
.react-flow__handle.connection-handle-right {
  pointer-events: all !important;
  z-index: 5;
}

/* Style for side-to-side connections */
.custom-edge.source-right.target-right,
.custom-edge.source-left.target-left {
  stroke-width: 3px !important;
  animation: edgeCreated 0.5s ease-out;
}
